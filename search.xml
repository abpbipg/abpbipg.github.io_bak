<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CA证书 for Centos8</title>
      <link href="/2022/10/05/CA%E8%AF%81%E4%B9%A6-for-Centos8/"/>
      <url>/2022/10/05/CA%E8%AF%81%E4%B9%A6-for-Centos8/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="Centos8搭建CA证书服务器"><a href="#Centos8搭建CA证书服务器" class="headerlink" title="Centos8搭建CA证书服务器"></a>Centos8搭建CA证书服务器</h2><p>过程：</p><pre><code>客户端向服务器发出申请---------服务器收到客户端的申请，把申请好的证书颁发给客户端---------客户端收到</code></pre><p>做题：</p><pre><code>client先建立申请请求------服务器（建立自签证书，把信息填充完整，要和client一样）收到请求--------服务器再把证书颁发给client-----客户端收到</code></pre><h3 id="client-文件可以放在不同的文件夹）"><a href="#client-文件可以放在不同的文件夹）" class="headerlink" title="client:  (文件可以放在不同的文件夹）"></a>client:  (文件可以放在不同的文件夹）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ (<span class="built_in">umask</span> 077;openssl genrsa -out /root/ssl/app.key 2048)       私钥</span><br><span class="line">$ openssl req -new -key app.key -out app.csr     申请文件</span><br><span class="line">$ scp   app.csr </span><br></pre></td></tr></table></figure><h3 id="server-指定在-x2F-etc-x2F-pki-x2F-CA"><a href="#server-指定在-x2F-etc-x2F-pki-x2F-CA" class="headerlink" title="server:(指定在&#x2F;etc&#x2F;pki&#x2F;CA)"></a>server:(指定在&#x2F;etc&#x2F;pki&#x2F;CA)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /etc/pki/CA   (一般都没有）</span><br><span class="line">$ <span class="built_in">mkdir</span> -p /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;    （必要）</span><br><span class="line">$ private:(<span class="built_in">umask</span> 077; openssl genrsa -out cakey.pem 2048)     私钥</span><br><span class="line">$ openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 3650    自签CA证书（里面的内容要和client一样）</span><br><span class="line">$ <span class="built_in">touch</span> /etc/pki/CA/index.txt</span><br><span class="line">$ <span class="built_in">echo</span> 00 &gt; /etc/pki/CA/serial</span><br><span class="line">$ openssl ca -<span class="keyword">in</span> app.csr -out /etc/pki/CA/certs/app.crt -days 365    颁发证书365天</span><br><span class="line">$ scp  app.crt  </span><br></pre></td></tr></table></figure><p>index.txt:文件主要存放已经颁发的证书信息<br>serial:存放下一个将要颁发的证书的序列号<br>certs:存放颁发证书的目录<br>crl:吊销证书列表文件的目录<br>newcerts:存放已经颁发的证书</p><p>查看颁发证书：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> certs/app.crt -noout -text</span><br></pre></td></tr></table></figure><p>查看吊销证书：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> certs/app.crt -noout -serial -subject</span><br></pre></td></tr></table></figure><p>查看吊销证书的序列号：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl ca -revoke /etc/pki/CA/newcerts/00.pem</span><br></pre></td></tr></table></figure><p>更新证书吊销列表：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl ca -gencrl -out /etc/pki/CA/crl.pem</span><br><span class="line"><span class="built_in">echo</span> 00 &gt; /etc/pki/CA/crlnumber   （要自己创）</span><br><span class="line">openssl ca -gencrl -out /etc/pki/CA/crl.pem</span><br></pre></td></tr></table></figure><h3 id="吊销证书："><a href="#吊销证书：" class="headerlink" title="吊销证书："></a>吊销证书：</h3><p>1、在客户端（A端）获取要吊销的证书的serial（编号）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> / PATH/FROM/CERT_FILE -noout -serial -subject</span><br></pre></td></tr></table></figure><p>2、在CA（B端） 上，根据客户提交的serial 与subject 信息，对比检验是否与index.txt 文件中的信息一致，确认就吊销证书：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl ca -revoke newcerts/99.pem</span><br></pre></td></tr></table></figure><p>3、指定第一个吊销证书的编号<br>注意：第一次更新证书吊销列表前，才需要执行</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> 01 &gt; /etc/pki/CA/crlnumber</span><br></pre></td></tr></table></figure><p>4、更新证书吊销列表，将来将吊销的列表放到互联网上，让大家知道</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl ca -gencrl -out /etc/pki/CA/crl/crl.pem</span><br></pre></td></tr></table></figure><p>5、查看crl 吊销文件：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl crl -<span class="keyword">in</span> /etc/pki/CA/crl/crl.pem -noout -text</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#值得注意的是，有三项，就是国家，所在省，公司名称这三项一定要和自签证书一致</span><br><span class="line">#因为在配置文件里有规定：</span><br><span class="line">policy          = policy_match</span><br><span class="line"></span><br><span class="line"># For the CA policy 表示CA策略</span><br><span class="line">[ policy_match ]</span><br><span class="line">countryName             = match #匹配</span><br><span class="line">stateOrProvinceName     = match #匹配</span><br><span class="line">organizationName        = match #匹配</span><br><span class="line">organizationalUnitName  = optional #随意的</span><br><span class="line">commonName              = supplied</span><br><span class="line">emailAddress            = optional</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NFS</title>
      <link href="/2022/10/05/NFS/"/>
      <url>/2022/10/05/NFS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="NFS服务"><a href="#NFS服务" class="headerlink" title="NFS服务"></a>NFS服务</h2><p>NFS服务器可以让PC将网络中的NFS服务器<strong>共享的目录</strong>挂载到本<strong>地端的文件系统</strong>中</p><p>而在本地端的系统中来看，那个远程主机的目录就好像是自己的一个<strong>磁盘分区</strong>一样，在使用上相当便利</p><p><img src="/2022/06/02/NFS/1.png" alt="截图"></p><h4 id="如上图示："><a href="#如上图示：" class="headerlink" title="如上图示："></a>如上图示：</h4><p>　　当我们在NFS服务器设置好一个共享目录&#x2F;home&#x2F;public后，其他的有权访问NFS服务器的NFS客户端就可以将这个目录挂载到自己文件系统的某个挂载点，这个挂载点可以自己定义，如上图客户端A与客户端B挂载的目录就不相同。并且挂载好后我们在本地能够看到服务端&#x2F;home&#x2F;public的所有数据。如果服务器端配置的客户端只读，那么客户端就只能够只读。如果配置读写，客户端就能够进行读写。挂载后，NFS客户端查看磁盘信息命令：<code>df –h</code>。</p><p>既然NFS是通过网络来进行服务器端和客户端之间的数据传输，那么两者之间要传输数据就要有想对应的网络端口，NFS服务器到底使用哪个端口来进行数据传输呢？基本上<strong>NFS这个服务器的端口开在2049</strong>,但由于文件系统非常复杂。因此<strong>NFS还有其他的程序去启动额外的端口</strong>，这些额外的用来传输数据的端口是随机选择的，<strong>是小于1024的端口</strong>；既然是随机的那么客户端又是如何知道NFS服务器端到底使用的是哪个端口呢？这时就需要通过远程过程调用（Remote Procedure Call,RPC）协议来实现了！</p><p><strong>NFS的相关文件：</strong></p><ol><li><p>主要配置文件：&#x2F;etc&#x2F;exports<br>   这是 NFS 的<strong>主要配置文件</strong>了。该文件是空白的，有的系统可能不存在这个文件，主要手动建立。NFS的配置一般只在这个文件中配置即可。</p></li><li><p>NFS 文件系统维护指令：&#x2F;usr&#x2F;sbin&#x2F;exportfs<br>   这个是维护 NFS 分享资源的指令，可以利用这个指令重新分享 &#x2F;etc&#x2F;exports 变更的目录资源、将 NFS Server 分享的目录卸除或重新分享。</p></li><li><p>分享资源的登录档：&#x2F;var&#x2F;lib&#x2F;nfs&#x2F;*tab<br>  在 NFS 服务器的登录文件都放置到 <strong>&#x2F;var&#x2F;lib&#x2F;nfs&#x2F; 目录</strong>里面，在该目录下有两个比较重要的登录档，</p></li></ol><p>   ​    一个是 etab ，主要记录了 NFS 所分享出来的目录的完整权限设定值;另一个 xtab 则记录曾经链接到此 NFS 服务器的相关客户端数据。</p><ol start="4"><li>客户端查询服务器分享资源的指令：&#x2F;usr&#x2F;sbin&#x2F;showmount<br>   这是另一个重要的 NFS 指令。exportfs 是用在 NFS Server 端，而 showmount 则主要用在 Client 端。</li></ol><p>   ​showmount 可以用来察看 NFS 分享出来的目录资源。</p><h5 id="配置文件说明："><a href="#配置文件说明：" class="headerlink" title="配置文件说明："></a>配置文件说明：</h5><ol><li>格式： <code>共享目录的路径 允许访问的NFS客户端（共享权限参数）</code></li><li>如上，共享目录为&#x2F;public , 允许访问的客户端为192.168.245.0&#x2F;24网络用户，权限为只读。</li><li><strong>请注意，NFS客户端地址与权限之间没有空格。</strong></li><li>NFS输出保护需要用到kerberos加密（none，sys，krb5，krb5i，krb5p），格式sec&#x3D;XXX</li><li>none：以匿名身份访问，如果要允许写操作，要映射到nfsnobody用户，同时布尔值开关要打开，setsebool nfsd_anon_write 1</li><li>sys：文件的访问是基于标准的文件访问，如果没有指定，默认就是sys， 信任任何发送过来用户名</li><li>krb5：客户端必须提供标识，客户端的表示也必须是krb5，基于域环境的认证</li><li>krb5i：在krb5的基础上做了加密的操作，对用户的密码做了加密，但是传输的数据没有加密</li><li>krb5p：所有的数据都加密</li></ol><h3 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h3><h2 id="x2F-etc-x2F-exports"><a href="#x2F-etc-x2F-exports" class="headerlink" title="&#x2F;etc&#x2F;exports"></a>&#x2F;etc&#x2F;exports</h2><table><thead><tr><th align="left">参数</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">ro</td><td align="left">制度</td></tr><tr><td align="left">rw</td><td align="left">读写</td></tr><tr><td align="left">root_squash</td><td align="left">当NFS客户端以root管理员访问时，映射为NFS服务器的匿名用户</td></tr><tr><td align="left">no_root_squash</td><td align="left">当NFS客户端以root管理员访问时，映射为NFS服务器的root管理员</td></tr><tr><td align="left">all_squash</td><td align="left">无论NFS客户端使用什么账户访问，均映射为NFS服务器的匿名用户</td></tr><tr><td align="left">sync</td><td align="left">同时将数据同时写入内存与硬盘中，保证不丢失数据</td></tr><tr><td align="left">async</td><td align="left">优先将数据保存到内存，然后再写入硬盘；这样效率高，但可能会丢失数据</td></tr></tbody></table><h5 id="NFS主要有3类选项："><a href="#NFS主要有3类选项：" class="headerlink" title="NFS主要有3类选项："></a>NFS主要有3类选项：</h5><ol><li>访问权限选项<br> 设置输出目录只读：<strong>ro</strong><br> 设置输出目录读写：<strong>rw</strong></li><li>用户映射选项<br> <strong>all_squash</strong>：将远程访问的<strong>所有普通用户</strong>及<strong>所属组</strong>都映射为<strong>匿名用户或用户组</strong>（nfsnobody）；<br> <strong>no_all_squash</strong>：与all_squash取反（默认设置）；<br> <strong>root_squash</strong>：将root用户及所属组都映射为匿名用户或用户组（默认设置）；<br> <strong>no_root_squash</strong>：与rootsquash取反；<br> <strong>anonuid&#x3D;xxx</strong>：将远程访问的所有用户都映射为匿名用户，并指定该用户为本地用户（UID&#x3D;xxx）；<br> <strong>anongid&#x3D;xxx</strong>：将远程访问的所有用户组都映射为匿名用户组账户，并指定该匿名用户组账户为本地用户组账户（GID&#x3D;xxx）；</li><li>其它选项<br> <strong>secure</strong>：限制客户端只能从小于1024的tcp&#x2F;ip端口连接nfs服务器（默认设置）；<br> <strong>insecure</strong>：允许客户端从大于1024的tcp&#x2F;ip端口连接服务器；<br> <strong>sync</strong>：将数据同步写入内存缓冲区与磁盘中，效率低，但可以保证数据的一致性；<br>   <strong>async</strong>：将数据先保存在内存缓冲区中，必要时才写入磁盘；<br>   <strong>wdelay</strong>：检查是否有相关的写操作，如果有则将这些写操作一起执行，这样可以提高效率（默认设置）；<br>   <strong>no_wdelay</strong>：若有写操作则立即执行，应与sync配合使用；<br>   <strong>subtree</strong>：若输出目录是一个子目录，则nfs服务器将检查其父目录的权限(默认设置)；<br>   <strong>no_subtree</strong>：即使输出目录是一个子目录，nfs服务器也不检查其父目录的权限，这样可以提高效率；</li></ol><p><strong>服务器端</strong>使用showmount命令查询NFS的共享状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># showmount -e　　　　//默认查看自己共享的服务，前提是要DNS能解析自己，不然容易报错</span><br><span class="line"></span><br><span class="line"># showmount -a　　　　//显示已经与客户端连接上的目录信息</span><br></pre></td></tr></table></figure><p><strong>客户端</strong>使用showmount命令查询NFS的共享状态</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># showmount -e NFS服务器IP</span><br></pre></td></tr></table></figure><h5 id="如果我们在启动了NFS之后又修改了-x2F-etc-x2F-exports，是不是还要重新启动nfs呢？"><a href="#如果我们在启动了NFS之后又修改了-x2F-etc-x2F-exports，是不是还要重新启动nfs呢？" class="headerlink" title="如果我们在启动了NFS之后又修改了&#x2F;etc&#x2F;exports，是不是还要重新启动nfs呢？"></a>如果我们在启动了NFS之后又修改了&#x2F;etc&#x2F;exports，是不是还要重新启动nfs呢？</h5><p>这个时候我们就可以用<strong>exportfs 命令</strong>来使改动立刻生效，该命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># exportfs [-aruv]</span><br><span class="line">　　-a 全部挂载或卸载 /etc/exports中的内容</span><br><span class="line">　　-r 重新读取/etc/exports 中的信息 ，并同步更新/etc/exports、/var/lib/nfs/xtab</span><br><span class="line">　　-u 卸载单一目录（和-a一起使用为卸载所有/etc/exports文件中的目录）</span><br><span class="line">　　-v 在export的时候，将详细的信息输出到屏幕上。</span><br><span class="line"></span><br><span class="line">具体例子：</span><br><span class="line">　　# exportfs -au 卸载所有共享目录</span><br><span class="line">　　# exportfs -rv 重新共享所有目录并输出详细信息</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keepalived</title>
      <link href="/2022/06/13/Keepalived/"/>
      <url>/2022/06/13/Keepalived/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Keepalived"><a href="#Keepalived" class="headerlink" title="Keepalived:"></a>Keepalived:</h1><p><strong>VRRP的工作过程是这样的：</strong></p><ol><li><strong>虚拟路由器中的路由器根据优先级选举出Master，Master路由器通过发送免费ARP报文，将自己的虚拟MAC地址通告给与它连接的设备。</strong></li><li><strong>Master路由器周期性发送VRRP报文，以公布自己的配置信息（优先级等）和工作状态</strong></li><li><strong>如果Master故障，虚拟路由器中的Backup路由器将根据优先级重新选举新的Master</strong></li><li><strong>虚拟路由器状态切换时，Master路由器由一台设备切换会另外一台设备，新的Master路由器只是简单的发送一个携带虚拟MAC地址和虚拟IP的免费ARP报文，这样就可以更新其他设备中缓存的ARP信息</strong></li><li><strong>Backup路由器的优先级高于Master时，由Backup的工作方式（抢占式或者非抢占式）决定是否重新选举Master。</strong></li></ol><h3 id="Keepalive配置文件说明"><a href="#Keepalive配置文件说明" class="headerlink" title="Keepalive配置文件说明"></a>Keepalive配置文件说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   <span class="comment"># 邮件通知信息</span></span><br><span class="line">   notification_email &#123;</span><br><span class="line">     <span class="comment"># 定义收件人</span></span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment"># 定义发件人</span></span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   <span class="comment"># SMTP服务器地址</span></span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   <span class="comment"># 路由器标识，一般不用改，也可以写成每个主机自己的主机名</span></span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   <span class="comment"># VRRP的ipv4和ipv6的广播地址，配置了VIP的网卡向这个地址广播来宣告自己的配置信息，下面是默认值</span></span><br><span class="line">   vrrp_mcast_group4 224.0.0.18</span><br><span class="line">   vrrp_mcast_group6 ff02::12</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义用于实例执行的脚本内容，比如可以在线降低优先级，用于强制切换</span></span><br><span class="line">vrrp_script SCRIPT_NAME &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个vrrp_instance就是定义一个虚拟路由器的，实例名称</span></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    <span class="comment"># 定义初始状态，可以是MASTER或者BACKUP</span></span><br><span class="line">    state MASTER</span><br><span class="line">    <span class="comment"># 工作接口，通告选举使用哪个接口进行</span></span><br><span class="line">    interface ens33</span><br><span class="line">    <span class="comment"># 虚拟路由ID，如果是一组虚拟路由就定义一个ID，如果是多组就要定义多个，而且这个虚拟</span></span><br><span class="line">    <span class="comment"># ID还是虚拟MAC最后一段地址的信息，取值范围0-255</span></span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    <span class="comment"># 使用哪个虚拟MAC地址</span></span><br><span class="line">    use_vmac XX:XX:XX:XX:XX</span><br><span class="line">    <span class="comment"># 监控本机上的哪个网卡，网卡一旦故障则需要把VIP转移出去</span></span><br><span class="line">    track_interface &#123;</span><br><span class="line">        eth0</span><br><span class="line">        ens33</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 如果你上面定义了MASTER,这里的优先级就需要定义的比其他的高</span></span><br><span class="line">    priority 100</span><br><span class="line">    <span class="comment"># 通告频率，单位为秒</span></span><br><span class="line">    advert_int 1</span><br><span class="line">    <span class="comment"># 通信认证机制，这里是明文认证还有一种是加密认证</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 设置虚拟VIP地址，一般就设置一个，在LVS中这个就是为LVS主机设置VIP的，这样你就不用自己手动设置了</span></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="comment"># IP/掩码 dev 配置在哪个网卡</span></span><br><span class="line">        192.168.200.16/24 dev eth1</span><br><span class="line">        <span class="comment"># IP/掩码 dev 配置在哪个网卡的哪个别名上</span></span><br><span class="line">        192.168.200.17/24 dev label eth1:1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 虚拟路由，在需要的情况下可以设置lvs主机 数据包在哪个网卡进来从哪个网卡出去</span></span><br><span class="line">    virtual_routes &#123;</span><br><span class="line">        192.168.110.0/24 dev eth2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 工作模式，nopreempt表示工作在非抢占模式，默认是抢占模式 preempt</span></span><br><span class="line">    nopreempt|preempt</span><br><span class="line">    <span class="comment"># 如果是抢占默认则可以设置等多久再抢占，默认5分钟</span></span><br><span class="line">    preempt delay 300</span><br><span class="line">    <span class="comment"># 追踪脚本，通常用于去执行上面的vrrp_script定义的脚本内容</span></span><br><span class="line">    track_script &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 三个指令，如果主机状态变成Master|Backup|Fault之后会去执行的通知脚本，脚本要自己写</span></span><br><span class="line">    notify_master <span class="string">&quot;&quot;</span></span><br><span class="line">    notify_backup <span class="string">&quot;&quot;</span></span><br><span class="line">    notify_fault <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义LVS集群服务，可以是IP+PORT；也可以是fwmark 数字，也就是防火墙规则</span></span><br><span class="line"><span class="comment"># 所以通过这里就可以看出来keepalive天生就是为ipvs而设计的</span></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    <span class="comment"># 算法</span></span><br><span class="line">    lb_algo rr|wrr|lc|wlc|lblc|sh|dh </span><br><span class="line">    <span class="comment"># LVS的模式</span></span><br><span class="line">    lb_kind NAT|DR|TUN</span><br><span class="line">    <span class="comment"># 子网掩码，这个掩码是VIP的掩码</span></span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    <span class="comment"># 持久连接超时时间</span></span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    <span class="comment"># 定义协议</span></span><br><span class="line">    protocol TCP</span><br><span class="line">    <span class="comment"># 如果后端应用服务器都不可用，就会定向到那个服务器上</span></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 后端应用服务器 IP PORT</span></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        <span class="comment"># 权重</span></span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># MSIC_CHECK|SMTP_CHEKC|TCP_CHECK|SSL_GET|HTTP_GET这些都是</span></span><br><span class="line">        <span class="comment"># 针对应用服务器做健康检查的方法</span></span><br><span class="line">        MISC_CHECK &#123;&#125;</span><br><span class="line">        <span class="comment"># 用于检查SMTP服务器的</span></span><br><span class="line">        SMTP_CHEKC &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果应用服务器不是WEB服务器，就用TCP_CHECK检查</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">          <span class="comment"># 向哪一个端口检查，如果不指定默认使用上面定义的端口</span></span><br><span class="line">          connect_port &lt;PORT&gt;</span><br><span class="line">          <span class="comment"># 向哪一个IP检测，如果不指定默认使用上面定义的IP地址</span></span><br><span class="line">          bindto &lt;IP&gt;</span><br><span class="line">          <span class="comment"># 连接超时时间</span></span><br><span class="line">          connect_timeout 3</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果对方是HTTPS服务器就用SSL_GET方法去检查，里面配置的内容和HTTP_GET一样</span></span><br><span class="line">        SSL_GET &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;这里写的是路径，如果脚本后有参数，整体路径+参数引起来&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/PATH/SCRIPTS.sh 参数&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用HTTP_GET方法去检查</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              <span class="comment"># 具体检测哪一个URL</span></span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              <span class="comment"># 检测内容的哈希值</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># 向哪一个端口检查，如果不指定默认使用上面定义的端口</span></span><br><span class="line">            connect_port &lt;PORT&gt;</span><br><span class="line">            <span class="comment"># 向哪一个IP检测，如果不指定默认使用上面定义的IP地址</span></span><br><span class="line">            bindto &lt;IP&gt;</span><br><span class="line">            <span class="comment"># 连接超时时间</span></span><br><span class="line">            connect_timeout 3</span><br><span class="line">            <span class="comment"># 尝试次数</span></span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            <span class="comment"># 每次尝试之间间隔几秒</span></span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux聚合链路</title>
      <link href="/2022/06/13/Linux%E8%81%9A%E5%90%88%E9%93%BE%E8%B7%AF/"/>
      <url>/2022/06/13/Linux%E8%81%9A%E5%90%88%E9%93%BE%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="配置聚合链路："><a href="#配置聚合链路：" class="headerlink" title="配置聚合链路："></a>配置聚合链路：</h1><h3 id="配置两张网卡，新建一个虚拟网卡名为bond0"><a href="#配置两张网卡，新建一个虚拟网卡名为bond0" class="headerlink" title="配置两张网卡，新建一个虚拟网卡名为bond0"></a>配置两张网卡，新建一个虚拟网卡名为bond0</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nmcli c add <span class="built_in">type</span> team con-name bond0 ifname bond0</span><br><span class="line"></span><br><span class="line"><span class="comment"># nmcli con add type team con-name CNAME ifname INAME [config JSON]</span></span><br><span class="line"></span><br><span class="line">CNAME 指代连接的名称，INAME 是接口名称，JSON (JavaScript Object Notation) 指定所使用的处理器(runner)。JSON语法格式如下：</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#123;&quot;runner&quot;:&#123;&quot;name&quot;:&quot;METHOD&quot;&#125;&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line">METHOD 是以下的其中一个：broadcast、activebackup、roundrobin、loadbalance 或者 lacp。</span><br><span class="line"></span><br><span class="line">最常见的双网卡绑定模式：</span><br><span class="line">            （1） roundrobin - 轮询模式</span><br><span class="line">所有链路处于负载均衡状态，这种模式的特点增加了带宽，同时支持容错能力。</span><br><span class="line">            （2） activebackup - 主备模式</span><br><span class="line"></span><br><span class="line">一个网卡处于活动状态，另一个处于备份状态，所有流量都在主链路上处理，当活动网卡down掉时，启用备份网卡。</span><br></pre></td></tr></table></figure><h3 id="配置网卡的IP、网关、DNS"><a href="#配置网卡的IP、网关、DNS" class="headerlink" title="配置网卡的IP、网关、DNS"></a>配置网卡的IP、网关、DNS</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmcli c m bond0 ipv4.addresses 10.10.60.100/24 ipv4.gateway 10.10.60.100 ipv4.dns 10.10.60.100 ipv4.method manual</span><br></pre></td></tr></table></figure><h3 id="添加网卡eth0-eth1到bond0中"><a href="#添加网卡eth0-eth1到bond0中" class="headerlink" title="添加网卡eth0 eth1到bond0中"></a>添加网卡eth0 eth1到bond0中</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmcli c add type bond-slave con-name bond ifname eth0 master bond0</span><br><span class="line">nmcli c add type bond-slave con-name bond ifname eth1 master bond0</span><br></pre></td></tr></table></figure><h3 id="重启网卡"><a href="#重启网卡" class="headerlink" title="重启网卡"></a>重启网卡</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmcli c up bond0</span><br><span class="line">ip a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>听歌</title>
      <link href="/2022/06/03/%E5%90%AC%E6%AD%8C/"/>
      <url>/2022/06/03/%E5%90%AC%E6%AD%8C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script>    <div id="aplayer-qsrhBtOd" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="7462124519" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="300px" data-preload="auto" data-theme="#ad7a86"></div><p>Halo</p>    <div id="aplayer-NHBFHaxv" class="aplayer aplayer-tag-marker meting-tag-marker" data-id="2597489971" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="false" data-listmaxheight="340px" data-preload="none" data-theme="#ad7a86"></div>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Chrony&amp;&amp;Ntp</title>
      <link href="/2022/06/01/chrony/"/>
      <url>/2022/06/01/chrony/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Chrony-conf配置解析"><a href="#Chrony-conf配置解析" class="headerlink" title="Chrony.conf配置解析"></a>Chrony.conf配置解析</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat /etc/chrony.conf</span><br><span class="line"></span><br><span class="line"># 使用pool.ntp.org项目中的公共服务器。以server开，理论上你想添加多少时间服务器都可以。</span><br><span class="line"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span><br><span class="line">server 0.centos.pool.ntp.org iburst</span><br><span class="line">server 1.centos.pool.ntp.org iburst</span><br><span class="line">server 2.centos.pool.ntp.org iburst</span><br><span class="line">server 3.centos.pool.ntp.org iburst</span><br><span class="line"></span><br><span class="line"># 根据实际时间计算出服务器增减时间的比率，然后记录到一个文件中，在系统重启后为系统做出最佳时间补偿调整。</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line"></span><br><span class="line"># chronyd根据需求减慢或加速时间调整，</span><br><span class="line"># 在某些情况下系统时钟可能漂移过快，导致时间调整用时过长。</span><br><span class="line"># 该指令强制chronyd调整时期，大于某个阀值时步进调整系统时钟。</span><br><span class="line"># 只有在因chronyd启动时间超过指定的限制时（可使用负值来禁用限制）没有更多时钟更新时才生效。</span><br><span class="line">makestep 1.0 3</span><br><span class="line"></span><br><span class="line"># 将启用一个内核模式，在该模式中，系统时间每11分钟会拷贝到实时时钟（RTC）。</span><br><span class="line">rtcsync##系统时间同步实际时钟</span><br><span class="line"></span><br><span class="line"># Enable hardware timestamping on all interfaces that support it.</span><br><span class="line"># 通过使用hwtimestamp指令启用硬件时间戳</span><br><span class="line">#hwtimestamp eth0</span><br><span class="line">#hwtimestamp eth1</span><br><span class="line">#hwtimestamp *</span><br><span class="line"></span><br><span class="line"># Increase the minimum number of selectable sources required to adjust</span><br><span class="line"># the system clock.</span><br><span class="line">#minsources 2</span><br><span class="line"></span><br><span class="line"># 指定一台主机、子网，或者网络以允许或拒绝NTP连接到扮演时钟服务器的机器</span><br><span class="line">#allow 192.168.0.0/16</span><br><span class="line">#deny 192.168/16</span><br><span class="line"></span><br><span class="line"># Serve time even if not synchronized to a time source.</span><br><span class="line">local stratum 10##即使server指令中时间服务器不可用，也允许将本地时间作为表针时间授时给其他服务器</span><br><span class="line"></span><br><span class="line"># 指定包含NTP验证密钥的文件。</span><br><span class="line">#keyfile /etc/chrony.keys</span><br><span class="line"></span><br><span class="line"># 指定日志文件的目录。</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line"></span><br><span class="line"># Select which information is logged.</span><br><span class="line">#log measurements statistics tracking</span><br></pre></td></tr></table></figure><h1 id="Timedatectl"><a href="#Timedatectl" class="headerlink" title="Timedatectl"></a>Timedatectl</h1><ol><li>查看日期时间、时区及NTP状态：<code>timedatectl</code></li><li>查看时区列表：<code>timedatectl list-timezones</code></li><li>修改时区：<code>timedatectl set-timezone Asia/Shanghai</code></li><li>修改日期时间：<code>timedatectl set-time &quot;2022-06-01 10:30:00&quot;</code></li><li>开启NTP：<code>timedatectl set-ntp true/flase</code></li><li>设置完时区后，强制同步下系统时钟：<code>chronyc -a makestep</code></li></ol><h1 id="Chronyc"><a href="#Chronyc" class="headerlink" title="Chronyc"></a>Chronyc</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@host-10-10-70-102 /]# chronyc</span><br><span class="line">chrony version 3.5</span><br><span class="line">Copyright (C) 1997-2003, 2007, 2009-2019 Richard P. Curnow and others</span><br><span class="line">chrony comes with ABSOLUTELY NO WARRANTY.  This is free software, and</span><br><span class="line">you are welcome to redistribute it under certain conditions.  See the</span><br><span class="line">GNU General Public License version 2 for details.</span><br><span class="line"></span><br><span class="line">chronyc&gt; activity</span><br><span class="line">200 OK</span><br><span class="line">1 sources online</span><br><span class="line">0 sources offline</span><br><span class="line">0 sources doing burst (return to online)</span><br><span class="line">0 sources doing burst (return to offline)</span><br><span class="line">0 sources with unknown address</span><br><span class="line">chronyc&gt; sources -v</span><br><span class="line">210 Number of sources = 1</span><br><span class="line"></span><br><span class="line">  .-- Source mode  &#x27;^&#x27; = server, &#x27;=&#x27; = peer, &#x27;#&#x27; = local clock.</span><br><span class="line"> / .- Source state &#x27;*&#x27; = current synced, &#x27;+&#x27; = combined , &#x27;-&#x27; = not combined,</span><br><span class="line">| /   &#x27;?&#x27; = unreachable, &#x27;x&#x27; = time may be in error, &#x27;~&#x27; = time too variable.</span><br><span class="line">||                                                 .- xxxx [ yyyy ] +/- zzzz</span><br><span class="line">||      Reachability register (octal) -.           |  xxxx = adjusted offset,</span><br><span class="line">||      Log2(Polling interval) --.      |          |  yyyy = measured offset,</span><br><span class="line">||                                \     |          |  zzzz = estimated error.</span><br><span class="line">||                                 |    |           \</span><br><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last sample               </span><br><span class="line">===============================================================================</span><br><span class="line">^* cs1.70.10.10.in-addr.arpa    11  10   377     2  +3544ns[+4229ns] +/-  243ms</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache</title>
      <link href="/2022/06/01/http/"/>
      <url>/2022/06/01/http/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="conf-x2F-httpd-conf"><a href="#conf-x2F-httpd-conf" class="headerlink" title="conf&#x2F;httpd.conf"></a>conf&#x2F;httpd.conf</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ServerRoot &quot;/etc/httpd&quot; # 指定服务配置根目录</span><br><span class="line">Listen 80 # 监听端口</span><br><span class="line">Include conf.modules.d/*.conf # 包含模块配置文件</span><br><span class="line">User apache # 使用的用户进程和组</span><br><span class="line">Group apache</span><br><span class="line">ServerAdmin root@localhost # 服务器管理员邮箱，用于错误提示。</span><br><span class="line">DocumentRoot &quot;/var/www/html&quot; # 指定服务网页根目录</span><br><span class="line"># 为指定目录设置不同权限</span><br><span class="line">AllowOverride none # 禁止使用.htaccess 中的指令</span><br><span class="line">Require all denied # 禁止所有访问</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;Directory &quot;/var/www&quot;&gt;</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all granted # 允许访问</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">Options Indexes FollowSymLinks # 允许的参数(索引(建议禁用),跟随软连接)</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;IfModule dir_module&gt;</span><br><span class="line">DirectoryIndex index.html # 指定默认首页</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">&lt;Files &quot;.ht*&quot;&gt;</span><br><span class="line">Require all denied # 禁止访问该文件</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line">ErrorLog &quot;logs/error_log&quot; # 日志记录</span><br><span class="line">LogLevel warn</span><br><span class="line"># 日志配置</span><br><span class="line">LogFormat &quot;%h %l %u %t &quot;%r&quot; %&gt;s %b &quot;%&#123;Referer&#125;i&quot; &quot;%&#123;User-Agent&#125;i&quot;&quot; combined</span><br><span class="line">LogFormat &quot;%h %l %u %t &quot;%r&quot; %&gt;s %b&quot; common</span><br><span class="line"> &lt;IfModule logio_module&gt;</span><br><span class="line">LogFormat &quot;%h %l %u %t &quot;%r&quot; %&gt;s %b &quot;%&#123;Referer&#125;i&quot; &quot;%&#123;User-Agent&#125;i&quot; %I %O&quot; combinedio</span><br><span class="line">    &lt;/IfModule&gt;</span><br><span class="line">CustomLog &quot;logs/access_log&quot; combined # 指定日志文件名和格式(结合)</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">&lt;IfModule alias_module&gt;</span><br><span class="line">ScriptAlias /cgi-bin/ &quot;/var/www/cgi-bin/&quot; # 路径别名</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">&lt;Directory &quot;/var/www/cgi-bin&quot;&gt;</span><br><span class="line">AllowOverride None</span><br><span class="line">Options None</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"># 指定文件格式和mime对应</span><br><span class="line">TypesConfig /etc/mime.types</span><br><span class="line">AddType application/x-compress .Z</span><br><span class="line">AddType application/x-gzip .gz .tgz</span><br><span class="line">AddType text/html .shtml</span><br><span class="line">AddOutputFilter INCLUDES .shtml</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">AddDefaultCharset UTF-8 # 指定默认编码</span><br><span class="line">&lt;IfModule mime_magic_module&gt;</span><br><span class="line">MIMEMagicFile conf/magic # 指定mime</span><br><span class="line">&lt;/IfModule&gt;</span><br><span class="line">EnableSendfile on # 开启sendfile功能</span><br><span class="line"># sendfile功能必须在Linux kernel 2.1版本以后内核中才能开启</span><br><span class="line"># sendfile功能直接跳过了将内容复制到用户缓冲区的过程，直接将文件内容复制到了socket缓冲区</span><br><span class="line"># 加快了文件的发送速度。</span><br><span class="line">IncludeOptional conf.d/*.conf</span><br></pre></td></tr></table></figure><h1 id="conf-d-x2F-autoindex-conf"><a href="#conf-d-x2F-autoindex-conf" class="headerlink" title="conf.d&#x2F;autoindex.conf"></a>conf.d&#x2F;autoindex.conf</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IndexOptions FancyIndexing HTMLTable VersionSort # 索引选项</span><br><span class="line">Alias /icons/ &quot;/usr/share/httpd/icons/&quot;</span><br><span class="line">&lt;Directory &quot;/usr/share/httpd/icons&quot;&gt;</span><br><span class="line">Options Indexes MultiViews FollowSymlinks</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">AddIconByEncoding (CMP,/icons/compressed.gif) x-compress x-gzip # 根据文件编码来分配图标</span><br><span class="line">AddIconByType (TXT,/icons/text.gif) text/* # 根据文件类型来分配图标</span><br><span class="line">AddIconByType (IMG,/icons/image2.gif) image/*</span><br><span class="line">AddIconByType (SND,/icons/sound2.gif) audio/*</span><br><span class="line">AddIconByType (VID,/icons/movie.gif) video/*</span><br><span class="line">AddIcon /icons/binary.gif .bin .exe # 根据文件后缀来分配图标</span><br><span class="line">AddIcon /icons/binhex.gif .hqx</span><br><span class="line">AddIcon /icons/tar.gif .tar</span><br><span class="line">AddIcon /icons/world2.gif .wrl .wrl.gz .vrml .vrm .iv</span><br><span class="line">AddIcon /icons/compressed.gif .Z .z .tgz .gz .zip</span><br><span class="line">AddIcon /icons/a.gif .ps .ai .eps</span><br><span class="line">AddIcon /icons/layout.gif .html .shtml .htm .pdf</span><br><span class="line">AddIcon /icons/text.gif .txt</span><br><span class="line">AddIcon /icons/c.gif .c</span><br><span class="line">AddIcon /icons/p.gif .pl .py</span><br><span class="line">AddIcon /icons/f.gif .for</span><br><span class="line">AddIcon /icons/dvi.gif .dvi</span><br><span class="line">AddIcon /icons/uuencoded.gif .uu</span><br><span class="line">AddIcon /icons/script.gif .conf .sh .shar .csh .ksh .tcl</span><br><span class="line">AddIcon /icons/tex.gif .tex</span><br><span class="line">AddIcon /icons/bomb.gif /core</span><br><span class="line">AddIcon /icons/bomb.gif */core.*</span><br><span class="line">AddIcon /icons/back.gif ..</span><br><span class="line">AddIcon /icons/hand.right.gif README</span><br><span class="line">AddIcon /icons/folder.gif ^^DIRECTORY^^</span><br><span class="line">AddIcon /icons/blank.gif ^^BLANKICON^^</span><br><span class="line">DefaultIcon /icons/unknown.gif # 默认的未知文件</span><br><span class="line">ReadmeName README.html # 和下面一个共同用于添加索引的上下文件内容</span><br><span class="line">HeaderName HEADER.html</span><br><span class="line">IndexIgnore .??* *~ *# HEADER* README* RCS CVS *,v *,t # 指定要隐藏的文件。</span><br></pre></td></tr></table></figure><h1 id="conf-d-x2F-welcome-conf"><a href="#conf-d-x2F-welcome-conf" class="headerlink" title="conf.d&#x2F;welcome.conf"></a>conf.d&#x2F;welcome.conf</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;LocationMatch &quot;^/+$&quot;&gt; # 仅将该规则用于规则匹配的URL</span><br><span class="line">Options -Indexes # 去除所有参数</span><br><span class="line">ErrorDocument 403 /.noindex.html # 错误返回代码和网页</span><br><span class="line">&lt;/LocationMatch&gt;</span><br><span class="line">&lt;Directory /usr/share/httpd/noindex&gt;</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">Alias /.noindex.html /usr/share/httpd/noindex/index.html</span><br><span class="line">Alias /noindex/css/bootstrap.min.css /usr/share/httpd/noindex/css/bootstrap.min.css</span><br><span class="line">Alias /noindex/css/open-sans.css /usr/share/httpd/noindex/css/open-sans.css</span><br><span class="line">Alias /images/apache_pb.gif /usr/share/httpd/noindex/images/apache_pb.gif</span><br><span class="line">Alias /images/poweredby.png /usr/share/httpd/noindex/images/poweredby.png</span><br></pre></td></tr></table></figure><h1 id="conf-d-x2F-ssl-conf"><a href="#conf-d-x2F-ssl-conf" class="headerlink" title="conf.d&#x2F;ssl.conf"></a>conf.d&#x2F;ssl.conf</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Listen 443 https</span><br><span class="line">SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog # 加密私钥的对话类型</span><br><span class="line">SSLSessionCache shmcb:/run/httpd/sslcache(512000) # SSL对话密钥的存储位置</span><br><span class="line">SSLSessionCacheTimeout 300 # SSL对话密钥的超时时间</span><br><span class="line">SSLRandomSeed startup file:/dev/urandom 256 # 随机种子的获取地址</span><br><span class="line">SSLRandomSeed connect builtin # 如果无法使用urandom则使用内置随机数生成器</span><br><span class="line">SSLCryptoDevice builtin # 硬件加密策略，默认使用内置，可是使用openssl engine 插叙是否可是使用其他硬件加密策略</span><br><span class="line">#SSLCryptoDevice rdrand # 这个是intel的硬件加密引擎</span><br><span class="line">&lt;VirtualHost _default_:443&gt;</span><br><span class="line">ErrorLog logs/ssl_error_log # 指定错误日志位置</span><br><span class="line">TransferLog logs/ssl_access_log # 指定默认日志位置</span><br><span class="line">LogLevel warn # 指定日志级别</span><br><span class="line">SSLEngine on # 开启 SSL 加密引擎</span><br><span class="line">SSLProtocol all -SSLv2 # 配置所加密策略可用，取消使用SSLv2</span><br><span class="line">SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5:!SEED:!IDEA # 密码交换策略</span><br><span class="line"># HIGH：使用所有Triple-DES的密码</span><br><span class="line"># MEDIUM：所有具有128位加密的密码</span><br><span class="line"># 这里的 ! 是用于禁止指定的策略分别是aNULL(没有身份验证)，MD5(MD5哈希函数),IDEA(IDEA加密)</span><br><span class="line">SSLCertificateFile /etc/pki/tls/certs/localhost.crt # 证书存储位置</span><br><span class="line">SSLCertificateKeyFile /etc/pki/tls/private/localhost.key # 密钥存储位置</span><br><span class="line"> &lt;Files ~ &quot;\.(cgi|shtml|phtml|php3?)$&quot;&gt;</span><br><span class="line">SSLOptions +StdEnvVars # 这里的选项是用于SSL连接的额外配置</span><br><span class="line"># 主要是给脚本提供一些其他的与SSL相关环境变量，不过会消耗部分系统资源，推荐关闭。下同。</span><br><span class="line">&lt;/Files&gt;</span><br><span class="line">&lt;Directory &quot;/var/www/cgi-bin&quot;&gt;</span><br><span class="line">SSLOptions +StdEnvVars</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">BrowserMatch &quot;MSIE [2-5]&quot;  # 这个是关于User-Agent的相关参数</span><br><span class="line">nokeepalive ssl-unclean-shutdown \</span><br><span class="line">downgrade-1.0 force-response-1.0</span><br><span class="line"># 第一个参数是正则匹配User-Agent，然后会创建后面的环境这些环境变量，并且变量默认值为1</span><br><span class="line">CustomLog logs/ssl_request_log\  # 日志参数</span><br><span class="line">&quot;%t %h %&#123;SSL_PROTOCOL&#125;x %&#123;SSL_CIPHER&#125;x &quot;%r&quot; %b&quot;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP:"></a>HTTP:</h1><h2 id="Server-192-168-211"><a href="#Server-192-168-211" class="headerlink" title="Server:192.168.211"></a><strong>Server:192.168.211</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install httpd policycoreutils-python <span class="comment"># policycoreutils-python 软件包提供 semanage 命令</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cp</span> /usr/share/doc/httpd/httpd-2.*/httpd-vhost.conf /etc/httpd/conf.d/</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> /var/www/virtual</span><br><span class="line"></span><br><span class="line"><span class="built_in">mkdir</span> /web</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;html&lt;/h1&gt;&#x27;</span> &gt; /var/www/html/index.html</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;virtual&lt;/h1&gt;&#x27;</span> &gt; /var/www/virtual/index.html</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&lt;h1&gt;web&lt;/h1&gt;&#x27;</span> &gt; /web/index.html</span><br></pre></td></tr></table></figure><h3 id="相同端口，不同域名"><a href="#相同端口，不同域名" class="headerlink" title="相同端口，不同域名"></a><strong>相同端口，不同域名</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/httpd/conf.d/httpd-vhost.conf </span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"></span><br><span class="line">  DocumentRoot &quot;/var/www/html&quot;</span><br><span class="line"></span><br><span class="line">  ServerName html.example.com</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"></span><br><span class="line">  DocumentRoot &quot;/var/www/virtual&quot;</span><br><span class="line"></span><br><span class="line">  ServerName virtual.example.com</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line"></span><br><span class="line">  DocumentRoot &quot;/web&quot;</span><br><span class="line"></span><br><span class="line">  ServerName web.example.com</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&lt;Directory &quot;/web&quot;&gt;</span><br><span class="line"></span><br><span class="line">  AllowOverride None</span><br><span class="line"></span><br><span class="line">    Require all granted</span><br><span class="line"></span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Directory &quot;/var/www/virtual&quot;&gt;</span><br><span class="line"></span><br><span class="line">  AllowOverride None</span><br><span class="line"></span><br><span class="line">    Require all granted</span><br><span class="line"></span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">ls -Zd /var/www/html</span><br><span class="line"></span><br><span class="line">drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/html</span><br><span class="line"></span><br><span class="line">semanage fcontext -a -t httpd_sys_content_t &#x27;/web(/.*)?&#x27;</span><br><span class="line"></span><br><span class="line">restorecon -RFv /web</span><br><span class="line"></span><br><span class="line">restorecon reset /web context unconfined_u:object_r:default_t:s0-&gt;system_u:object_r:httpd_sys_content_t:s0</span><br><span class="line"></span><br><span class="line">restorecon reset /web/index.html context unconfined_u:object_r:default_t:s0-&gt;system_u:object_r:httpd_sys_content_t:s0</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><h2 id="相同ip，不同端口"><a href="#相同ip，不同端口" class="headerlink" title="相同ip，不同端口"></a><strong>相同ip，不同端口</strong></h2><h3 id="vim-x2F-etc-x2F-httpd-x2F-conf-d-x2F-httpd-vhost-conf-httpd-conf不能有否则出错）"><a href="#vim-x2F-etc-x2F-httpd-x2F-conf-d-x2F-httpd-vhost-conf-httpd-conf不能有否则出错）" class="headerlink" title="vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;httpd-vhost.conf  (httpd.conf不能有否则出错）"></a>vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;httpd-vhost.conf  (httpd.conf不能有否则出错）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Listen 192.168.10.54:8080  （监听端口）</span><br><span class="line"></span><br><span class="line">Listen 192.168.10.54:81</span><br><span class="line"></span><br><span class="line">  &lt;VirtualHost 192.168.1.211:80&gt;</span><br><span class="line"></span><br><span class="line">  DocumentRoot &quot;/var/www/html&quot;</span><br><span class="line"></span><br><span class="line">  ServerName 192.168.1.211:80</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&lt;VirtualHost 192.168.1.211:808&gt;</span><br><span class="line"></span><br><span class="line">  DocumentRoot &quot;/var/www/virtual&quot;</span><br><span class="line"></span><br><span class="line">  ServerName 192.168.1.211:808</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">&lt;VirtualHost 192.168.1.211:8088&gt;</span><br><span class="line"></span><br><span class="line">  DocumentRoot &quot;/web&quot;</span><br><span class="line"></span><br><span class="line">  ServerName 192.168.1.211:8088</span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;Directory &quot;/web&quot;&gt;   (放在/var/www下面的就不用打）</span><br><span class="line"></span><br><span class="line">  AllowOverride None</span><br><span class="line"></span><br><span class="line">    Require all granted</span><br><span class="line"></span><br><span class="line">semanage fcontext -a -t httpd_sys_content_t &#x27;/web(/.*)?&#x27;</span><br><span class="line"></span><br><span class="line">restorecon -RFv /web</span><br><span class="line"></span><br><span class="line">semanage port -l | grep http</span><br><span class="line"></span><br><span class="line">http_cache_port_t        tcp    8080, 8118, 8123, 10001-10010</span><br><span class="line"></span><br><span class="line">http_cache_port_t        udp    3130</span><br><span class="line"></span><br><span class="line">http_port_t           tcp    80, 81, 443, 488, 8008, 8009, 8443, 9000</span><br><span class="line"></span><br><span class="line">pegasus_http_port_t       tcp    5988</span><br><span class="line"></span><br><span class="line">pegasus_https_port_t      tcp    5989</span><br><span class="line"></span><br><span class="line">semanage port -a -t http_port_t -p tcp 808</span><br><span class="line"></span><br><span class="line">semanage port -a -t http_port_t -p tcp 8088</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --add-port=808/tcp</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --add-port=8088/tcp</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">或者systemctl restart firewalld</span><br><span class="line"></span><br><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><h3 id="https-www-bbsmax-com-A-E35pVm3Yzv-防火墙详细讲解"><a href="#https-www-bbsmax-com-A-E35pVm3Yzv-防火墙详细讲解" class="headerlink" title="https://www.bbsmax.com/A/E35pVm3Yzv/防火墙详细讲解"></a><a href="https://www.bbsmax.com/A/E35pVm3Yzv/%E9%98%B2%E7%81%AB%E5%A2%99%E8%AF%A6%E7%BB%86%E8%AE%B2%E8%A7%A3">https://www.bbsmax.com/A/E35pVm3Yzv/防火墙详细讲解</a></h3><h2 id="个人用户主页"><a href="#个人用户主页" class="headerlink" title="个人用户主页"></a><strong>个人用户主页</strong></h2><h3 id="vim-x2F-etc-x2F-httpd-x2F-conf-d-x2F-userdir-conf"><a href="#vim-x2F-etc-x2F-httpd-x2F-conf-d-x2F-userdir-conf" class="headerlink" title="vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;userdir.conf"></a>vim &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;userdir.conf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#UserDir disable</span><br><span class="line"></span><br><span class="line">UserDir public_html</span><br><span class="line"></span><br><span class="line">&lt;Directory &quot;/home/*/public_html&quot;&gt;</span><br><span class="line">  #AllowOverride FileInfo AuthConfig Limit Indexes</span><br><span class="line">  AllowOverride all</span><br><span class="line">   # 添加一些认证的配置，使得用户可以用账号，密码访问该目录</span><br><span class="line">  authuserfile &quot;/etc/httpd/passwd&quot;     </span><br><span class="line">  authname &quot;input your account&quot;</span><br><span class="line">  authtype basic</span><br><span class="line">  require user chao</span><br><span class="line">  #Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec</span><br><span class="line">  #Require method GET POST OPTIONS</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">useradd webmaster</span><br><span class="line"></span><br><span class="line">su webmaster</span><br><span class="line"></span><br><span class="line">mkdir public_html</span><br><span class="line"></span><br><span class="line">echo “webmaster” /home/webmaster/public_html/index.html</span><br><span class="line"></span><br><span class="line">chmod 755 /home/webmaster</span><br><span class="line"></span><br><span class="line">getsebool -a | grep httpd</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">httpd_enable_cgi --&gt; on</span><br><span class="line"></span><br><span class="line">httpd_enable_ftp_server --&gt; off</span><br><span class="line"></span><br><span class="line">httpd_enable_homedirs --&gt; off</span><br><span class="line"></span><br><span class="line">httpd_execmem --&gt; off</span><br><span class="line"></span><br><span class="line">httpd_graceful_shutdown --&gt; on</span><br><span class="line"></span><br><span class="line">httpd_manage_ipa --&gt; off</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">setsebool -P httpd_enable_homedirs on</span><br><span class="line"></span><br><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br><span class="line"></span><br><span class="line">systemctl restart httpd</span><br><span class="line"></span><br><span class="line">linux检测网站可以用curl命令</span><br><span class="line"></span><br><span class="line">curl 192.168.10.56/~webmaster</span><br></pre></td></tr></table></figure><h3 id="SSL网站："><a href="#SSL网站：" class="headerlink" title="SSL网站："></a>SSL网站：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yum install -y mod_ssl     地址：https://your.homename/</span><br></pre></td></tr></table></figure><h3 id="可以颁发证书也可以不用"><a href="#可以颁发证书也可以不用" class="headerlink" title="可以颁发证书也可以不用"></a>可以颁发证书也可以不用</h3><h3 id="搭建凭证："><a href="#搭建凭证：" class="headerlink" title="搭建凭证："></a>搭建凭证：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cd /etc/httpd/conf/ssl.key</span><br><span class="line"></span><br><span class="line">Mv Server.key Server.key.raw</span><br><span class="line"></span><br><span class="line">Openssl genersa/req -out filename  [\\建立PUblic](http://建立PUblic) Key</span><br><span class="line"></span><br><span class="line">Cd /etc/httpd/conf/ssl.crt</span><br><span class="line"></span><br><span class="line">Mv Server.crt Server.crt.raw</span><br><span class="line"></span><br><span class="line">Openssl req -new -x509 -key ../ssl.key/Server.key  \&gt;-out Server.crt [\\建立凭证](http://建立凭证)</span><br><span class="line"></span><br><span class="line">Vi /etc/httpd/conf.d/ssl.conf</span><br><span class="line"></span><br><span class="line">Listen 443                   \\,端口号</span><br><span class="line"></span><br><span class="line">SSLEngine on                 \\支持SSL</span><br><span class="line"></span><br><span class="line">SSLCipherSuite              \\允许Client联机要求</span><br><span class="line"></span><br><span class="line">SSLCertificateFile              \\凭证文件  私钥</span><br><span class="line"></span><br><span class="line">SSLCertificateKeyFile           \\Public Key  公钥</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">Systemctl  restart httpd</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">Vi /etc/httpd/conf.d/ssl.conf</span><br><span class="line"></span><br><span class="line">DocumentRoot “/var/www/www”</span><br><span class="line"></span><br><span class="line">ServerName *:443   [\\任何主机名称都是到上述的目录</span><br></pre></td></tr></table></figure><h3 id="http-x2F-x2F-任何主机名称都是到上述的目录"><a href="#http-x2F-x2F-任何主机名称都是到上述的目录" class="headerlink" title="http:&#x2F;&#x2F;任何主机名称都是到上述的目录)"></a>http:&#x2F;&#x2F;任何主机名称都是到上述的目录)</h3><h2 id="复合型日志："><a href="#复合型日志：" class="headerlink" title="复合型日志："></a>复合型日志：</h2><h3 id="x2F-etc-x2F-http-x2F-conf-x2F-httpd-conf"><a href="#x2F-etc-x2F-http-x2F-conf-x2F-httpd-conf" class="headerlink" title="&#x2F;etc&#x2F;http&#x2F;conf&#x2F;httpd.conf"></a>&#x2F;etc&#x2F;http&#x2F;conf&#x2F;httpd.conf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> *CustomLog /usr/local/apache/logs/access_log common* [*\\common是普通型*](http://common是普通型)</span><br><span class="line"></span><br><span class="line">[*\\*combined是复合型](http://combined是复合型)</span><br><span class="line"></span><br><span class="line">Semanage port -m -t http_port_t -p tcp 8081改占用的端口</span><br></pre></td></tr></table></figure><h3 id="虚拟目录：-x2F-Mkdir-p-x2F-默认文件夹"><a href="#虚拟目录：-x2F-Mkdir-p-x2F-默认文件夹" class="headerlink" title="虚拟目录：&#x2F;Mkdir -p &#x2F;默认文件夹"></a>虚拟目录：&#x2F;Mkdir -p &#x2F;默认文件夹</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Echo “” &gt;/文件夹/index.html</span><br><span class="line"></span><br><span class="line">Vim /etc/httpd/conf.d/vdir.conf</span><br><span class="line"></span><br><span class="line">&lt;Directory&gt;</span><br><span class="line">Alias /data1 &quot;/data1/&quot;</span><br><span class="line">&lt;Directory &quot;/data1/&quot;&gt;</span><br><span class="line">Options Indexes FollowSymlinks</span><br><span class="line">AllowOverride None</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">Semanage fcontext -a -t httpd_sys_content_t ‘文件夹（/.*)?’</span><br><span class="line">Restorecon -Rf /文件夹</span><br><span class="line">Systemctl restart httpd</span><br><span class="line">http://ip/xxgcx(虚拟用户名）</span><br></pre></td></tr></table></figure><h3 id="修改配置文件，在配置文件最下方加入如下内容："><a href="#修改配置文件，在配置文件最下方加入如下内容：" class="headerlink" title="修改配置文件，在配置文件最下方加入如下内容："></a>修改配置文件，在配置文件最下方加入如下内容：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@CentOS-3 ~]<span class="comment"># vim /usr/local/apache/conf/httpd.conf</span></span><br><span class="line">&lt;Directory&gt;</span><br><span class="line">Alias /test <span class="string">&quot;/yum&quot;</span>  //定义虚拟目录“/test”，物理路径为“/yum”！</span><br><span class="line">&lt;Directory <span class="string">&quot;/yum&quot;</span>&gt;    //定义目录访问权限</span><br><span class="line">Options Indexes MultiViews FollowSymLinks    //固定格式</span><br><span class="line">AllowOverride None       //固定格式</span><br><span class="line">Order allow,deny  //匹配顺序为先允许，后拒绝</span><br><span class="line">Allow from all    //设置允许所有人访问</span><br><span class="line">Require all granted  //对这个目录给予授权</span><br><span class="line">&lt;/Directory&gt;</span><br></pre></td></tr></table></figure><h2 id="Web偏门题目："><a href="#Web偏门题目：" class="headerlink" title="Web偏门题目："></a>Web偏门题目：</h2><p><img src="/2022/06/01/http/1.png" alt="img">  </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;IfModule worker.c&gt;</span><br><span class="line"></span><br><span class="line">Timeout 300  \\设置超时时间</span><br><span class="line"></span><br><span class="line">KeepAlive On   \\保持连接，off为不保持</span><br><span class="line"></span><br><span class="line">MaxKeepAliveRequests 100   \\最大传输数据量</span><br><span class="line"></span><br><span class="line">KeepAliveTimeout 5   \\\\ 连接保持超时时间</span><br><span class="line"></span><br><span class="line">**//如果加载了这个模块，就实现一下配置，一个条件化模块加载**</span><br><span class="line"></span><br><span class="line">Startservers 8  **//服务在启动时默认启动几个子进程**</span><br><span class="line"></span><br><span class="line">Minspareservers 5  **//最小空闲进程数量**</span><br><span class="line"></span><br><span class="line">Maxspareservers 20  **//最大空闲进程数量**</span><br><span class="line"></span><br><span class="line">Serverlimit 256  //限制MaxClients</span><br><span class="line"></span><br><span class="line">Maxclients 256   **//最大并发量，就是同时访问数量**</span><br><span class="line"></span><br><span class="line">Maxrequestsperchild 4000  //每个子进程最多能处理的请求数量</span><br><span class="line"></span><br><span class="line">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/06/01/http/2.png" alt="img"> </p><h2 id="1-ip访问"><a href="#1-ip访问" class="headerlink" title="1.ip访问"></a>1.ip访问</h2><h3 id="禁用ip访问-只能对应端口有效"><a href="#禁用ip访问-只能对应端口有效" class="headerlink" title="禁用ip访问 只能对应端口有效"></a>禁用ip访问 只能对应端口有效</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerName xx.xx.xx.xx</span><br><span class="line">ServerAlias *</span><br><span class="line">&lt;Location /&gt;</span><br><span class="line">Order Allow,Deny</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost *:8511&gt;</span><br><span class="line">ServerName xx.xx.xx.xx</span><br><span class="line">ServerAlias *</span><br><span class="line">&lt;Location /&gt;</span><br><span class="line">Order Allow,Deny</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="2-非法域名-本地设置host-将ip绑定为服务器ip"><a href="#2-非法域名-本地设置host-将ip绑定为服务器ip" class="headerlink" title="2.非法域名 本地设置host 将ip绑定为服务器ip"></a>2.非法域名 本地设置host 将ip绑定为服务器ip</h3><h3 id="禁用方法"><a href="#禁用方法" class="headerlink" title="禁用方法"></a>禁用方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在httpd.conf的末尾加上</span><br><span class="line">这种方法还可以防止使用xx.xx.xx.xx直接访问</span><br><span class="line">#禁止所有非法域名</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerName xx.xx.xx.xx</span><br><span class="line">ServerAlias *</span><br><span class="line">&lt;Location /&gt;</span><br><span class="line">Order Allow,Deny</span><br><span class="line">Deny from all</span><br><span class="line">&lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="3-允许访问的域名"><a href="#3-允许访问的域名" class="headerlink" title="3.允许访问的域名"></a>3.允许访问的域名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerAdmin xx@xx.com</span><br><span class="line">DocumentRoot “/home/wwwroot/xx”</span><br><span class="line">ServerName www.xx.com</span><br><span class="line">ServerAlias *.xx.com</span><br><span class="line">ErrorLog “logs/www.xx.com-error_log”</span><br><span class="line">CustomLog “logs/www.xx.com-access_log” common</span><br><span class="line">&lt;Directory “/home/wwwroot/xx”&gt;</span><br><span class="line">Options FollowSymLinks</span><br><span class="line">AllowOverride All</span><br><span class="line">[Require](http://www.chhua.com/web-notetag/require) all granted</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="在配置文件中增加跳转代码"><a href="#在配置文件中增加跳转代码" class="headerlink" title="在配置文件中增加跳转代码"></a>在配置文件中增加跳转代码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#在apache配置文件中增加下面代码</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerAdmin ASorb</span><br><span class="line">DocumentRoot /var/www/html/[wordpress](http://www.chhua.com/web-notetag/wordpress) #网站目录</span><br><span class="line">ServerName www.chhua.com #修改为自己的域名</span><br><span class="line"></span><br><span class="line">RewriteEngine on</span><br><span class="line">RewriteCond %&#123;HTTPS&#125; !=on</span><br><span class="line">RewriteRule ^(.*) https://%&#123;SERVER_NAME&#125;$1 [L,R]</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vsftp</title>
      <link href="/2022/06/01/vsftp/"/>
      <url>/2022/06/01/vsftp/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="vsftpd-conf"><a href="#vsftpd-conf" class="headerlink" title="vsftpd.conf"></a>vsftpd.conf</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">anonymous_enable=YES # 是否允许匿名用户登入</span><br><span class="line">local_enable=YES # 是否允许本地用户登入</span><br><span class="line">write_enable=YES # 是否可写</span><br><span class="line">local_umask=022 # 上传文件的umask码。</span><br><span class="line">dirmessage_enable=YES # 是否开启信息提示</span><br><span class="line"># 可以在目录下创建.message文件，当用户进入该目录是会将.message中的文件返回给客户端。</span><br><span class="line">xferlog_enable=YES # 开启日志记录</span><br><span class="line">connect_from_port_20=YES # 固定数据传输端口为20</span><br><span class="line">ftp_data_port=1025 # 如果开启了connect_from_port_2o 那么可以用这一条更改为其他固定端口</span><br><span class="line">xferlog_std_format=YES # 将会以xferlog标准格式计入日志，但是不便于观察</span><br><span class="line">listen=NO # 监听IPv4</span><br><span class="line">listen_ipv6=YES # 监听IPv6</span><br><span class="line">pam_service_name=vsftpd # pam认证模块的文件名称</span><br><span class="line">userlist_enable=YES # 这个配置是是有关于用户是否可登入的配置。</span><br><span class="line"># vsftpd 共有2各文件用于控制用户登入，分别是：fusers 和 user_list</span><br><span class="line"># fusers就是一个黑名单，完全不受配置影像。</span><br><span class="line"># 而user_list 是受 userlist_enbale 和 userlist_deny 控制的。</span><br><span class="line"># 这里与官方的解释不同，但是这样理解也是可是正常使用 vsftpd 的。</span><br><span class="line"># userlist_enable 为是否启用 user_list 文件。</span><br><span class="line"># 而 userlist_deny 则为控制 user_list 是白名单还是黑名单。</span><br><span class="line"># 如果 userlist_deny = yes, 那么 userlist_list 为黑名单，如果为 NO 就是白名单。</span><br><span class="line">tcp_wrappers=YES # 是否受 tcp_wrappers 控制。</span><br><span class="line"># 这里的指定就是 /etc/hosts.allow 和 /etc/hosts.deny</span><br><span class="line">vsftpd 其他的一些常用配置参数：</span><br><span class="line"></span><br><span class="line"># 被动连接</span><br><span class="line">pasv_enbale # 是否开启被动连接</span><br><span class="line">pasv_min_port # 被动连接最小端口大小</span><br><span class="line">pasv_max_port # 被动连接最小端口大小</span><br><span class="line"># SSL连接</span><br><span class="line">ssl_enable # 是否启用SSl加密连接</span><br><span class="line">rsa_cert_file # rsa证书，该文件需要将证书和密钥存储在同时文件。</span><br><span class="line">ssl_ciphers # 使用的加密类型，详细查询 man ciphers</span><br><span class="line">force_local_data_ssl # 启用数据加密</span><br><span class="line">force_local_logins_ssl # 启用用户登入加密</span><br><span class="line">ssl_tlsv1 # 允许使用tls加密,下面分别是sslv2 和 sslv3</span><br><span class="line">ssl_sslv2</span><br><span class="line">ssl_sslv3</span><br><span class="line"># 来宾用户</span><br><span class="line">guest_enable # 允许来宾用户登入，一般用于虚拟用户登入。</span><br><span class="line">guest_username # 将来宾用户映射为指定用户。</span><br><span class="line">user_config_dir # 单个用户的配置文件目录路径。</span><br></pre></td></tr></table></figure><p>vsftpd 的默认配置不需要开启任何SELinux的bool值，除非有一下几点需求才需要打开：</p><p>1.匿名用户文件上传：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftpd_anon_write</span><br><span class="line">ftpd_full_access</span><br></pre></td></tr></table></figure><p>2.服务器使用主动连接模式：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ftpd_connect_all_unreserved</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pxe自动化部署</title>
      <link href="/2022/05/31/pxe%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/"/>
      <url>/2022/05/31/pxe%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="PXE服务器的大致安装流程：DHCP-TFTP-FTP"><a href="#PXE服务器的大致安装流程：DHCP-TFTP-FTP" class="headerlink" title="PXE服务器的大致安装流程：DHCP+TFTP+FTP"></a>PXE服务器的大致安装流程：DHCP+TFTP+FTP</h1><p><img src="/2022/05/31/pxe%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2/1.png" alt="请求流程"></p><h2 id="1-DHCP服务器搭建"><a href="#1-DHCP服务器搭建" class="headerlink" title="1. DHCP服务器搭建"></a>1. DHCP服务器搭建</h2><h3 id="安装DHCP服务器"><a href="#安装DHCP服务器" class="headerlink" title="安装DHCP服务器"></a>安装DHCP服务器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install dhcp-server # 安装dhcp服务器</span><br></pre></td></tr></table></figure><h3 id="编辑服务器配置文件。"><a href="#编辑服务器配置文件。" class="headerlink" title="编辑服务器配置文件。"></a>编辑服务器配置文件。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># file:/etc/dhcpd/dhcpd.conf</span><br><span class="line"></span><br><span class="line">subnet 10.0.1.0 netmask 255.255.255.0 &#123; # 指定网段</span><br><span class="line">range 10.0.1.100 10.0.1.200; # 指定地址池</span><br><span class="line">max-lease-time 120; # 指定最长租约时间</span><br><span class="line">default-lease-time 120; # 指定最短租约时间</span><br><span class="line">next-server 10.0.1.1; # 指定TFTP服务器地址</span><br><span class="line">filename &quot;pxelinux.0&quot;; # 指定需要加载的启动文件。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动服务，并配置防火墙"><a href="#启动服务，并配置防火墙" class="headerlink" title="启动服务，并配置防火墙"></a>启动服务，并配置防火墙</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start dhcpd</span><br><span class="line">systemctl enable dhcpd</span><br><span class="line">firewall-cmd --add-service=dhcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="2-TFTP服务器搭建CentOS8是不用配置的"><a href="#2-TFTP服务器搭建CentOS8是不用配置的" class="headerlink" title="2. TFTP服务器搭建CentOS8是不用配置的"></a>2. TFTP服务器搭建CentOS8是不用配置的</h2><h3 id="安装直接启动tftp服务器即可"><a href="#安装直接启动tftp服务器即可" class="headerlink" title="安装直接启动tftp服务器即可"></a>安装直接启动tftp服务器即可</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install tftp-server # 安装tftp服务器</span><br><span class="line"># 启动服务</span><br><span class="line">systemctl start tftp</span><br><span class="line">systemctl enable tftp</span><br><span class="line"># 配置防火墙</span><br><span class="line">firewall-cmd --add-service=tftp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="3-FTP服务器搭建"><a href="#3-FTP服务器搭建" class="headerlink" title="3. FTP服务器搭建"></a>3. FTP服务器搭建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install vsftpd # 安装ftp服务器</span><br></pre></td></tr></table></figure><h3 id="配置vsftpd的配置文件"><a href="#配置vsftpd的配置文件" class="headerlink" title="配置vsftpd的配置文件"></a>配置vsftpd的配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># file: /etc/vsftpd/vsftpd.conf</span><br><span class="line"></span><br><span class="line">anonymous_enable=YES # 允许匿名用户登入</span><br><span class="line">local_enable=NO # 拒绝本地用户登入</span><br><span class="line">pasv_enable=YES # 指定启用被动连接模式。</span><br><span class="line">pasv_min_port=30000 # 指定被动连接的最小端口号</span><br><span class="line">pasv_max_port=40000 # 指定被动连接的最大端口号</span><br><span class="line">write_enable=NO # 禁止写入</span><br><span class="line">listen=YES # 指定为daemon模式启动，并且监听在IPv4端口上。</span><br><span class="line">dual_log_enable=YES # 开启日志记录，以方便排查问题。</span><br></pre></td></tr></table></figure><h3 id="配置启动服务"><a href="#配置启动服务" class="headerlink" title="配置启动服务"></a>配置启动服务</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start vsftpd</span><br><span class="line">systemctl enable vsftpd</span><br><span class="line"># 配置防火墙</span><br><span class="line">firewall-cmd --add-service=ftp --permanent</span><br><span class="line">firewall-cmd --add-port=30000-40000/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br><span class="line"># 配置SELinux Bool值</span><br><span class="line">setsebool ftpd_connect_all_unreserved on -P</span><br></pre></td></tr></table></figure><h2 id="4-文件部署"><a href="#4-文件部署" class="headerlink" title="4. 文件部署"></a>4. 文件部署</h2><h3 id="PXE引导文件部署"><a href="#PXE引导文件部署" class="headerlink" title="PXE引导文件部署"></a>PXE引导文件部署</h3><h3 id="PXE的引导程序在syslinux包中，这里直接安装即可。"><a href="#PXE的引导程序在syslinux包中，这里直接安装即可。" class="headerlink" title="PXE的引导程序在syslinux包中，这里直接安装即可。"></a>PXE的引导程序在<code>syslinux</code>包中，这里直接安装即可。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install syslinux <span class="comment"># 安装syslinux</span></span><br><span class="line"><span class="comment"># 注意，这里会依赖安装 syslinux-nonlinux,实际上所需要的文件在 syslinux-nonlinux 包中。</span></span><br></pre></td></tr></table></figure><h3 id="将PXE的引导程序部署到TFTP服务器中。"><a href="#将PXE的引导程序部署到TFTP服务器中。" class="headerlink" title="将PXE的引导程序部署到TFTP服务器中。"></a>将PXE的引导程序部署到TFTP服务器中。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -r /usr/share/syslinux/ /var/lib/tftpboot/</span><br><span class="line">mkdir /usr/share/syslinux/pxelinux.cfg</span><br></pre></td></tr></table></figure><h3 id="编写PXE引导的配置文件"><a href="#编写PXE引导的配置文件" class="headerlink" title="编写PXE引导的配置文件."></a>编写PXE引导的配置文件.</h3><h3 id="注：以下这个文件我是直接从-CentOS8-中的镜像复制过来并修改的文件。"><a href="#注：以下这个文件我是直接从-CentOS8-中的镜像复制过来并修改的文件。" class="headerlink" title="注：以下这个文件我是直接从 CentOS8 中的镜像复制过来并修改的文件。"></a>注：以下这个文件我是直接从 CentOS8 中的镜像复制过来并修改的文件。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># file:/var/lib/tftpboot/pxelinux.cfg/default</span><br><span class="line"></span><br><span class="line">default centos8/vesamenu.c32</span><br><span class="line">timeout 600</span><br><span class="line"></span><br><span class="line">display centos8/boot.msg</span><br><span class="line"></span><br><span class="line"># Clear the screen when exiting the menu, instead of leaving the menu displayed.</span><br><span class="line"># For vesamenu, this means the graphical background is still displayed without</span><br><span class="line"># the menu itself for as long as the screen remains in graphics mode.</span><br><span class="line">menu clear</span><br><span class="line">menu background centos8/splash.png</span><br><span class="line">menu title CentOS Linux 8.0.1905</span><br><span class="line">menu vshift 8</span><br><span class="line">menu rows 18</span><br><span class="line">menu margin 8</span><br><span class="line">#menu hidden</span><br><span class="line">menu helpmsgrow 15</span><br><span class="line">menu tabmsgrow 13</span><br><span class="line"></span><br><span class="line"># Border Area</span><br><span class="line">menu color border  #00000000 #00000000 none</span><br><span class="line"></span><br><span class="line"># Selected item</span><br><span class="line">menu color sel 0 #ffffffff #00000000 none</span><br><span class="line"></span><br><span class="line"># Title bar</span><br><span class="line">menu color title 0 #ff7ba3d0 #00000000 none</span><br><span class="line"></span><br><span class="line"># Press [Tab] message</span><br><span class="line">menu color tabmsg 0 #ff3a6496 #00000000 none</span><br><span class="line"></span><br><span class="line"># Unselected menu item</span><br><span class="line">menu color unsel 0 #84b8ffff #00000000 none</span><br><span class="line"></span><br><span class="line"># Selected hotkey</span><br><span class="line">menu color hotsel 0 #84b8ffff #00000000 none</span><br><span class="line"></span><br><span class="line"># Unselected hotkey</span><br><span class="line">menu color hotkey 0 #ffffffff #00000000 none</span><br><span class="line"></span><br><span class="line"># Help text</span><br><span class="line">menu color help 0 #ffffffff #00000000 none</span><br><span class="line"></span><br><span class="line"># A scrollbar of some type? Not sure.</span><br><span class="line">menu color scrollbar 0 #ffffffff #ff355594 none</span><br><span class="line"></span><br><span class="line"># Timeout msg</span><br><span class="line">menu color timeout 0 #ffffffff #00000000 none</span><br><span class="line">menu color timeout_msg 0 #ffffffff #00000000 none</span><br><span class="line"></span><br><span class="line"># Command prompt text</span><br><span class="line">menu color cmdmark 0 #84b8ffff #00000000 none</span><br><span class="line">menu color cmdline 0 #ffffffff #00000000 none</span><br><span class="line"></span><br><span class="line"># Do not display the actual menu unless the user presses a key. All that is displayed is a timeout message.</span><br><span class="line"></span><br><span class="line">menu tabmsg Press Tab for full configuration options on menu items.</span><br><span class="line"></span><br><span class="line">menu separator # insert an empty line</span><br><span class="line">menu separator # insert an empty line</span><br><span class="line"># 最重要的就是以下的label段了，这个才是真正的引导选项。</span><br><span class="line">label linux</span><br><span class="line">menu label Install CentOS Linux 8.0.1905 by ^Manual</span><br><span class="line">menu default # 默认将启用这个label，如果有需求可以将此标签移动到以下任意一个中。</span><br><span class="line">kernel centos8/vmlinuz</span><br><span class="line">append initrd=centos8/initrd.img inst.repo=ftp://10.0.1.1/media</span><br><span class="line"></span><br><span class="line">label vnc</span><br><span class="line">menu label install CentOS Linux 8.0.1905 by ^Vnc</span><br><span class="line">kernel centos8/vmlinuz</span><br><span class="line">append initrd=centos8/initrd.img inst.repo=ftp://10.0.1.1/media inst.vnc inst.vncconnect=10.0.1.254</span><br><span class="line"></span><br><span class="line">label kickstart</span><br><span class="line">menu label install CentOS Linux 8.0.1905 by ^KickStart</span><br><span class="line">kernel centos8/vmlinuz</span><br><span class="line">append initrd=centos8/initrd.img inst.repo=ftp://10.0.1.1/media inst.ks=ftp://10.0.1.1/ks.cfg</span><br></pre></td></tr></table></figure><h3 id="内核文件部署"><a href="#内核文件部署" class="headerlink" title="内核文件部署"></a>内核文件部署</h3><h4 id="现在开始部署内核文件。"><a href="#现在开始部署内核文件。" class="headerlink" title="现在开始部署内核文件。"></a>现在开始部署内核文件。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount /dev/cdrom /media/</span><br><span class="line">mkdir /var/lib/tftpboot/centos8/</span><br><span class="line">for i in boot.msg initrd.img splash.png vesamenu.c32 vmlinuz; do</span><br><span class="line">cp /media/isolinux/$i /var/lib/tftpboot/centos8/</span><br><span class="line">done</span><br><span class="line"># 注：最重要的文件就是 initrd.img 和 vmlinuz 文件了，其他文件并不是必要文件。</span><br><span class="line"># 这些文件都是根据 /var/lib/tftpboot/pxelinux.cfg/default 中需要的文件来进行配置的。</span><br></pre></td></tr></table></figure><h4 id="x2F-var-x2F-lib-x2F-tftpboot-中的文件权限配置"><a href="#x2F-var-x2F-lib-x2F-tftpboot-中的文件权限配置" class="headerlink" title="&#x2F;var&#x2F;lib&#x2F;tftpboot 中的文件权限配置"></a>&#x2F;var&#x2F;lib&#x2F;tftpboot 中的文件权限配置</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 配置SELinux</span><br><span class="line">yum install policycoreutils-python-utils # 安装SELinux的管理工具</span><br><span class="line">semanage fcontext -m -t tftpdir_t &#x27;/var/lib/tftpboot(/.)?&#x27; #去除tftp目录的写入权限。</span><br><span class="line">restorecon -R /var/lib/tftpboot/</span><br><span class="line"># 由于修改了tftp服务器的工作目录的SELinux，以下选项可能需要开启。</span><br><span class="line">setsebool tftp_home_dir on -P</span><br></pre></td></tr></table></figure><h4 id="镜像部署"><a href="#镜像部署" class="headerlink" title="镜像部署"></a>镜像部署</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /var/ftp/media</span><br><span class="line">mount /dev/cdrom /var/ftp/media/</span><br><span class="line"># 配置SELinux，以允许vsftpd读取 iso 中的文件。</span><br><span class="line">setsebool ftpd_full_access on -P</span><br></pre></td></tr></table></figure><h4 id="编写挂载配置文件，使其永久生效"><a href="#编写挂载配置文件，使其永久生效" class="headerlink" title="编写挂载配置文件，使其永久生效"></a>编写挂载配置文件，使其永久生效</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># file: /etc/fstab</span><br><span class="line"></span><br><span class="line">……</span><br><span class="line">/dev/cdrom /var/ftp/media iso9660 ro 0 0</span><br></pre></td></tr></table></figure><h4 id="kickstart-文件编写"><a href="#kickstart-文件编写" class="headerlink" title="kickstart 文件编写"></a>kickstart 文件编写</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># file:/var/ftp/ks.cfg</span><br><span class="line"></span><br><span class="line">ignoredisk --only-use=sda # 忽略磁盘</span><br><span class="line">autopart --type=lvm # 自动划分分区为LVM格式。</span><br><span class="line">clearpart --drives=sda --initlabel # 请求磁盘，并且自动初始化</span><br><span class="line">graphical # 图形化安装，这里可以改成文本化安装 text</span><br><span class="line">url --url ftp://10.0.1.1/media # 指定镜像URL路径</span><br><span class="line">keyboard --vckeymap=cn --xlayouts=&#x27;cn&#x27; # 指定键盘格式</span><br><span class="line">lang zh_CN.UTF-8 # 指定操作系统语言格式</span><br><span class="line">network --bootproto=dhcp --device=ens33 --onboot=yes --ipv6=no # 配置网卡信息</span><br><span class="line">network --hostname=localhost.localdomain</span><br><span class="line">rootpw --iscrypted $6$vWrO/QvhTZdsiSOe$eodg5O1KrdqZbxenHfqbBtz0eULiVWK8.YEV8ZFrgREroZD.pf6vB3LSh5.kaCH5QXXFhIOvIWOI04R52iTP//</span><br><span class="line"># 密码可以通过 openssl passwd -6 -salt `openssl rand -hex 4` ，这个命令生成。这里的密码为 123456</span><br><span class="line">firstboot --enable</span><br><span class="line">skipx # 跳过图形化配置</span><br><span class="line">services --enabled=&quot;chronyd&quot;</span><br><span class="line">timezone Asia/Shanghai # 设置上海时区</span><br><span class="line">%packages # 指定安装包,这里选择的是最小化安装，同时还安装了 kdump 工具。</span><br><span class="line">@minimal-environment</span><br><span class="line">kexec-tools</span><br><span class="line">%end</span><br><span class="line">%addon com_redhat_kdump --enable --reserve-mb=&#x27;auto&#x27;</span><br><span class="line">%end</span><br><span class="line">%anaconda</span><br><span class="line">pwpolicy root --minlen=6 --minquality=1 --notstrict --nochanges --notempty</span><br><span class="line">pwpolicy user --minlen=6 --minquality=1 --notstrict --nochanges --emptyok</span><br><span class="line">pwpolicy luks --minlen=6 --minquality=1 --notstrict --nochanges --notempty</span><br><span class="line">%end</span><br></pre></td></tr></table></figure><h2 id="5-测试可用"><a href="#5-测试可用" class="headerlink" title="5. 测试可用"></a>5. 测试可用</h2><h3 id="注：-这里需要强调一点，用于测试的虚拟机内存大小一点要大于等于2G，否则无法正常安装操作系统！！！！！！"><a href="#注：-这里需要强调一点，用于测试的虚拟机内存大小一点要大于等于2G，否则无法正常安装操作系统！！！！！！" class="headerlink" title="注： 这里需要强调一点，用于测试的虚拟机内存大小一点要大于等于2G，否则无法正常安装操作系统！！！！！！"></a>注： 这里需要强调一点，用于测试的虚拟机内存大小一点要大于等于2G，否则无法正常安装操作系统！！！！！！</h3><h1 id="DHCP-TFTP-HTTP"><a href="#DHCP-TFTP-HTTP" class="headerlink" title="DHCP+TFTP+HTTP"></a>DHCP+TFTP+HTTP</h1><h2 id="安装dhcp"><a href="#安装dhcp" class="headerlink" title="安装dhcp"></a>安装dhcp</h2><h2 id="x2F-etc-x2F-dhcp-x2F-dhcpd-conf简化可以同上"><a href="#x2F-etc-x2F-dhcp-x2F-dhcpd-conf简化可以同上" class="headerlink" title="&#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf简化可以同上"></a>&#x2F;etc&#x2F;dhcp&#x2F;dhcpd.conf简化可以同上</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow booting;</span><br><span class="line"></span><br><span class="line">allow bootp;</span><br><span class="line"></span><br><span class="line">ddns-update-style interim;</span><br><span class="line"></span><br><span class="line">ignore client-updates;</span><br><span class="line"></span><br><span class="line">subnet 192.168.10.0 netmask 255.255.255.0 &#123;</span><br><span class="line"></span><br><span class="line">option subnet-mask 255.255.255.0;</span><br><span class="line"></span><br><span class="line">option domain-name-servers 192.168.10.10;</span><br><span class="line"></span><br><span class="line">range dynamic-bootp 192.168.10.100 192.168.10.200;</span><br><span class="line"></span><br><span class="line">default-lease-time 21600;</span><br><span class="line"></span><br><span class="line">max-lease-time 43200;</span><br><span class="line"></span><br><span class="line">next-server 192.168.10.10;</span><br><span class="line"></span><br><span class="line">filename &quot;pxelinux.0&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Systemctl restart dhcpd</span><br><span class="line"></span><br><span class="line">Systemctl enable dhcpd</span><br></pre></td></tr></table></figure><h2 id="3-安装tftpCentOS8不用配置"><a href="#3-安装tftpCentOS8不用配置" class="headerlink" title="3. 安装tftpCentOS8不用配置"></a>3. 安装tftpCentOS8不用配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yum install -y tftp-server xinetd</span><br><span class="line"></span><br><span class="line">Vim /etc/xinetd.d/tftp</span><br><span class="line"></span><br><span class="line">service tftp&#123;</span><br><span class="line"></span><br><span class="line">socket_type = dgram</span><br><span class="line"></span><br><span class="line">protocol = udpwait = yes</span><br><span class="line"></span><br><span class="line">user = root</span><br><span class="line"></span><br><span class="line">server = /usr/sbin/in.tftpd</span><br><span class="line"></span><br><span class="line">server_args = -s /var/lib/tftpboot</span><br><span class="line"></span><br><span class="line">disable = no   把YES改为NO</span><br><span class="line"></span><br><span class="line">per_source = 11</span><br><span class="line"></span><br><span class="line">cps = 100 2</span><br><span class="line"></span><br><span class="line">flags = IPv4&#125;</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><h2 id="3-安装加载引导服务程序"><a href="#3-安装加载引导服务程序" class="headerlink" title="3.安装加载引导服务程序"></a>3.安装加载引导服务程序</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Yum install -y syslinux </span><br><span class="line"></span><br><span class="line">cd /var/lib/tftpboot</span><br><span class="line"></span><br><span class="line">cp /usr/share/syslinux/pxelinux.0 .</span><br><span class="line">cp/mnt/cdrom/images/pxeboot/&#123;vmlinuz,initrd.img&#125;. </span><br><span class="line">cp/mnt/cdrom/isolinux/&#123;vesamenu.c32,boot.msg&#125; .</span><br><span class="line"></span><br><span class="line">mkdir /var/lib/tftpboot/pxelinux.cfg</span><br><span class="line"></span><br><span class="line">cp /mnt/cdrom/isolinux/isolinux.cfg /var/lib/tftpboot/pxelinux.cfg/default</span><br></pre></td></tr></table></figure><h3 id="Vim-x2F-var-x2F-lib-x2F-tftpboot-x2F-pxelinux-cfg-x2F-default"><a href="#Vim-x2F-var-x2F-lib-x2F-tftpboot-x2F-pxelinux-cfg-x2F-default" class="headerlink" title="Vim &#x2F;var&#x2F;lib&#x2F;tftpboot&#x2F;pxelinux.cfg&#x2F;default"></a>Vim &#x2F;var&#x2F;lib&#x2F;tftpboot&#x2F;pxelinux.cfg&#x2F;default</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">default linux#default vesamenu.c32 名称改</span><br><span class="line"></span><br><span class="line">label linux</span><br><span class="line"></span><br><span class="line">menu label ^Install Red Hat Enterprise Linux 7.2</span><br><span class="line"></span><br><span class="line">kernel vmlinuz</span><br><span class="line"></span><br><span class="line">append initrd=initrd.img inst.stage2=http://192.168.10.10/cdrom ks=http://192.168.10.10/ks.cfg quiet  把地址改为HTTP的CDROM</span><br><span class="line"></span><br><span class="line">#append initrd=initrd.img inst.stage2=hd:LABEL=RHEL-7.2x20Server.x86_64 quiet</span><br></pre></td></tr></table></figure><h2 id="4-安装HTTP"><a href="#4-安装HTTP" class="headerlink" title="4. 安装HTTP"></a>4. 安装HTTP</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp -r /mnt/cdrom/ /var/www/html/cdrom</span><br><span class="line"></span><br><span class="line">cp ~/anaconda-ks.cfg /var/www/html/ks.cfg</span><br><span class="line"></span><br><span class="line">chown apache:apache /var/www/html/ks.cfg</span><br></pre></td></tr></table></figure><h3 id="vim-x2F-var-x2F-www-x2F-html-x2F-ks-cfg"><a href="#vim-x2F-var-x2F-www-x2F-html-x2F-ks-cfg" class="headerlink" title="vim &#x2F;var&#x2F;www&#x2F;html&#x2F;ks.cfg"></a>vim &#x2F;var&#x2F;www&#x2F;html&#x2F;ks.cfg</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Use CDROM installation media</span><br><span class="line"></span><br><span class="line">#cdrom</span><br><span class="line"></span><br><span class="line">url --url=http://192.168.10.10/cdrom </span><br><span class="line">...</span><br><span class="line">..</span><br><span class="line"># Partition clearing information</span><br><span class="line"></span><br><span class="line">#clearpart --none --initlabel</span><br><span class="line"></span><br><span class="line">clearpart --all --initlabel</span><br></pre></td></tr></table></figure><h3 id="新建虚拟机-完成"><a href="#新建虚拟机-完成" class="headerlink" title="新建虚拟机  完成"></a>新建虚拟机  完成</h3>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat</title>
      <link href="/2022/05/31/tomcat/"/>
      <url>/2022/05/31/tomcat/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><h2 id="tomcat是一个基于java的web服务软件，其支持使用jsp或servelt来进行网页的搭建。"><a href="#tomcat是一个基于java的web服务软件，其支持使用jsp或servelt来进行网页的搭建。" class="headerlink" title="tomcat是一个基于java的web服务软件，其支持使用jsp或servelt来进行网页的搭建。"></a>tomcat是一个基于java的web服务软件，其支持使用jsp或servelt来进行网页的搭建。</h2><h2 id="tomcat默认不在CentOS8的软件源中，需要自己手动下载安装，tomcat官网。"><a href="#tomcat默认不在CentOS8的软件源中，需要自己手动下载安装，tomcat官网。" class="headerlink" title="tomcat默认不在CentOS8的软件源中，需要自己手动下载安装，tomcat官网。"></a>tomcat默认不在CentOS8的软件源中，需要自己手动下载安装，tomcat官网。</h2><h3 id="tomcat9-0-37作为样例演示，不同版本的tomcat使用操作略有不同，需要注意。"><a href="#tomcat9-0-37作为样例演示，不同版本的tomcat使用操作略有不同，需要注意。" class="headerlink" title="tomcat9.0.37作为样例演示，不同版本的tomcat使用操作略有不同，需要注意。"></a>tomcat9.0.37作为样例演示，不同版本的tomcat使用操作略有不同，需要注意。</h3><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="在进行tomcat安装之前先安装一些依赖的软件包"><a href="#在进行tomcat安装之前先安装一些依赖的软件包" class="headerlink" title="在进行tomcat安装之前先安装一些依赖的软件包"></a>在进行tomcat安装之前先安装一些依赖的软件包</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dnf install java-1.8.0-openjdk <span class="comment"># tomcat的运行环境</span></span><br><span class="line">dnf install apr-devel java-1.8.0-openjdk-devel redhat-rpm-config openssl-devel </span><br><span class="line"><span class="comment"># 编译tomcat-native所需要的头文件</span></span><br></pre></td></tr></table></figure><h3 id="配置java的环境变量，然后使用命令source-java-openjdk-sh执行生效即可。"><a href="#配置java的环境变量，然后使用命令source-java-openjdk-sh执行生效即可。" class="headerlink" title="配置java的环境变量，然后使用命令source java-openjdk.sh执行生效即可。"></a>配置java的环境变量，然后使用命令<code>source java-openjdk.sh</code>执行生效即可。</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">file: /etc/profile</span></span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/App#指定工作目录</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH #用于指定JAVA系统查询命令的路径</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">类的路径，在编译运行JAVA程序时，如果有调用到其他类的时候，在CLASSPATH中寻找需要的类。</span></span><br><span class="line"></span><br><span class="line">source /etc/profile </span><br></pre></td></tr></table></figure><h3 id="解压安装tomcat二进制包。"><a href="#解压安装tomcat二进制包。" class="headerlink" title="解压安装tomcat二进制包。"></a>解压安装tomcat二进制包。</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -xf apache-tomcat-9.0.37.tar.gz -C /opt/ # 解压二进制安装包</span><br><span class="line">cd /opt/ # 切换到/opt目录</span><br><span class="line">ln -s apache-tomcat-9.0.37/ tomcat # 创建一个软连接，方便操作使用</span><br><span class="line">ln -s /opt/tomcat/bin/catalina.sh /usr/sbin/catalina # 创建一个管理程序的软连接，方便使用</span><br><span class="line">useradd -r -s /sbin/nologin -M -d /opt/tomcat/ -c tomcat tomcat # 创建用户</span><br><span class="line">cd tomcat &amp;&amp; chown tomcat:tomcat -R ./</span><br><span class="line">现在安装tomcat-native，该软件包的源码默认存放在 bin 目录下，自行解压编译安装即可。</span><br><span class="line">如果不想编译安装也可以直接使用epel库中的tomcat-native。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd $(mktemp -d) # 进入到一个临时目录</span><br><span class="line">cp /opt/tomcat/bin/tomcat-native.tar.gz ./</span><br><span class="line">tar -xf tomcat-native.tar.gz</span><br><span class="line">cd tomcat-native-1.2.24-src/native/</span><br><span class="line">./configure --libdir=/usr/lib64/ --with-ssl # 应为我使用的是64位操作系统，所以这里需要指定安装到lib64目录中</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h3 id="如何开启和关闭"><a href="#如何开启和关闭" class="headerlink" title="如何开启和关闭"></a>如何开启和关闭</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/sbin/catalina start##开启tomcat</span><br><span class="line">/usr/sbin/catalina stop##关闭tomcat</span><br></pre></td></tr></table></figure><h3 id="编写一个systemd的unit，方便使用"><a href="#编写一个systemd的unit，方便使用" class="headerlink" title="编写一个systemd的unit，方便使用"></a>编写一个systemd的unit，方便使用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># file: /etc/systemd/system/tomcat.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Tomcat web server</span><br><span class="line">After=syslog.target network.target</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line"></span><br><span class="line">User=tomcat</span><br><span class="line">Group=tomcat</span><br><span class="line"></span><br><span class="line">ExecStart=/usr/sbin/catalina start</span><br><span class="line">ExecStop=/usr/sbin/catalina stop</span><br></pre></td></tr></table></figure><h3 id="现在安装完了tomcat，可以尝试以下启动程序了"><a href="#现在安装完了tomcat，可以尝试以下启动程序了" class="headerlink" title="现在安装完了tomcat，可以尝试以下启动程序了"></a>现在安装完了tomcat，可以尝试以下启动程序了</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start tomat</span><br><span class="line">net -ltn # 查询是否监听在8080端口</span><br><span class="line">firewall-cmd --add-port=8080/tcp --permanent</span><br></pre></td></tr></table></figure><h3 id="目录结构："><a href="#目录结构：" class="headerlink" title="目录结构："></a>目录结构：</h3><ol><li>bin：管理脚本</li><li>lib：运行库</li><li>conf：配置文件</li><li>logs：日志</li><li>temp：临时目录</li><li>webapps：站点应用目录，其中由一个ROOT目录，作为默认的根页面。</li><li>work：webapps中的源码编译完后存放位置，无需改动，tomcat会根据请求自动加载更新</li></ol><h3 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h3><p>这里使用openssl来搭建，tomcat同时支持keystore，本文不过多讨论。<br>首先创建证书。注意：这里创建的是自签证书，仅作实验使用。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p conf/certs/ &amp;&amp; cd conf/certs/</span><br><span class="line">openssl genrsa -out tomcat.key 1024</span><br><span class="line">openssl req -new -x509 -key tomcat.key -out tomcat.pem</span><br></pre></td></tr></table></figure><h4 id="然后在server-xml中的service属性中添加子属性，内容如下："><a href="#然后在server-xml中的service属性中添加子属性，内容如下：" class="headerlink" title="然后在server.xml中的service属性中添加子属性，内容如下："></a>然后在server.xml中的service属性中添加子属性，内容如下：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;Connector port=<span class="string">&quot;8443&quot;</span> protocol=<span class="string">&quot;org.apache.coyote.http11.Http11AprProtocol&quot;</span></span><br><span class="line">               maxThreads=<span class="string">&quot;150&quot;</span> SSLEnabled=<span class="string">&quot;true&quot;</span> &gt;</span><br><span class="line">        &lt;UpgradeProtocol className=<span class="string">&quot;org.apache.coyote.http2.Http2Protocol&quot;</span> /&gt;</span><br><span class="line">        &lt;SSLHostConfig&gt;</span><br><span class="line">            &lt;Certificate certificateKeyFile=<span class="string">&quot;conf/certs/tomcat.pem&quot;</span></span><br><span class="line">                         certificateFile=<span class="string">&quot;conf/certs/tomcat.key&quot;</span></span><br><span class="line">                         <span class="built_in">type</span>=<span class="string">&quot;RSA&quot;</span> /&gt;</span><br><span class="line">        &lt;/SSLHostConfig&gt;</span><br><span class="line">    &lt;/Connector&gt;</span><br></pre></td></tr></table></figure><h4 id="然后重启服务器即可"><a href="#然后重启服务器即可" class="headerlink" title="然后重启服务器即可"></a>然后重启服务器即可</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart tomcat</span><br><span class="line">firewall-cmd --add-port=8443/tcp --permanent</span><br></pre></td></tr></table></figure><h1 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h1><h3 id="启用web管理界面"><a href="#启用web管理界面" class="headerlink" title="启用web管理界面"></a>启用web管理界面</h3><h4 id="启动web管理界面分两步："><a href="#启动web管理界面分两步：" class="headerlink" title="启动web管理界面分两步："></a>启动web管理界面分两步：</h4><ol><li>创建tomcat管理员用户</li><li>配置允许其他网段访问管理界面(默认只允许网址访问)</li></ol><h4 id="首先添加tomcat用户，这需要在conf-x2F-tomcat-user-xml文件中进行配置"><a href="#首先添加tomcat用户，这需要在conf-x2F-tomcat-user-xml文件中进行配置" class="headerlink" title="首先添加tomcat用户，这需要在conf&#x2F;tomcat-user.xml文件中进行配置"></a>首先添加tomcat用户，这需要在conf&#x2F;tomcat-user.xml文件中进行配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">!--file: /opt/tomcat/conf/tomcat-user.xml --&gt;</span><br><span class="line"></span><br><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;tomcat-users xmlns=&quot;http://tomcat.apache.org/xml&quot;</span><br><span class="line"></span><br><span class="line">xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">xsi:schemaLocation=&quot;http://tomcat.apache.org/xml tomcat-users.xsd&quot;</span><br><span class="line">version=&quot;1.0&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--添加以下部分即可--&gt;</span><br><span class="line"></span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line"></span><br><span class="line"> &lt;role rolename=&quot;manager-script&quot;/&gt;</span><br><span class="line"></span><br><span class="line"> &lt;role rolename=&quot;manager-jmx&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;role rolename=&quot;manager-status&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;role rolename=&quot;admin-script&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;123456&quot; roles=&quot;manager-gui,manager-script,manager-status,admin-gui,admin-script&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/tomcat-users&gt;</span><br></pre></td></tr></table></figure><h3 id="然后在每个webapps中修改访问规则"><a href="#然后在每个webapps中修改访问规则" class="headerlink" title="然后在每个webapps中修改访问规则"></a>然后在每个webapps中修改访问规则</h3><h3 id="例如host-manager就需要如下进行修改，编辑文件webapps-host-manager-META-INF-context-xml"><a href="#例如host-manager就需要如下进行修改，编辑文件webapps-host-manager-META-INF-context-xml" class="headerlink" title="例如host-manager就需要如下进行修改，编辑文件webapps/host-manager/META-INF/context.xml"></a>例如<code>host-manager</code>就需要如下进行修改，编辑文件<code>webapps/host-manager/META-INF/context.xml</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="line"></span><br><span class="line"> &lt;Context antiResourceLocking=<span class="string">&quot;false&quot;</span> privileged=<span class="string">&quot;true&quot;</span> &gt; </span><br><span class="line"></span><br><span class="line"> &lt;Valve className=<span class="string">&quot;org.apache.catalina.valves.RemoteAddrValve&quot;</span></span><br><span class="line"></span><br><span class="line">        allow=<span class="string">&quot;^.*$&quot;</span> /&gt;&lt;!--只需要修改这一行即可--&gt;</span><br><span class="line"></span><br><span class="line">  &lt;Manager sessionAttributeValueClassNameFilter=<span class="string">&quot;java\.lang\.(?:Boolean|Integer|Long|Number|String)|org\.apache\.catalina\.filters\.CsrfPreventionFilter\$LruCache(?:\$1)?|java\.util\.(?:Linked)?HashMap&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line"> &lt;/Context&gt;</span><br></pre></td></tr></table></figure><h4 id="这样就可以访问使用web管理界面了"><a href="#这样就可以访问使用web管理界面了" class="headerlink" title="这样就可以访问使用web管理界面了"></a>这样就可以访问使用web管理界面了</h4><h3 id="配置多虚拟主机"><a href="#配置多虚拟主机" class="headerlink" title="配置多虚拟主机"></a>配置多虚拟主机</h3><p>在server.xml文件中的engine属性下添加子属性，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Host name=&quot;server2.somata.net&quot; appBase=&quot;myapps&quot;</span><br><span class="line">        unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">  &lt;Context path=&quot;/rewrite&quot; docBase=&quot;/opt/tomcat/others/rewrite&quot; /&gt;</span><br><span class="line">  &lt;!--默认 docBase 使用的路径是相对于 appBase 的，所以这里需要使用绝对路径--&gt;</span><br><span class="line">  &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">         prefix=&quot;server2_somata_net_access_log&quot; suffix=&quot;.txt&quot;</span><br><span class="line">         pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">&lt;/Host&gt;</span><br></pre></td></tr></table></figure><h4 id="这里添加了一台server2-somata-net的虚拟主机，同时设置日志和路径重写。"><a href="#这里添加了一台server2-somata-net的虚拟主机，同时设置日志和路径重写。" class="headerlink" title="这里添加了一台server2.somata.net的虚拟主机，同时设置日志和路径重写。"></a>这里添加了一台<code>server2.somata.net</code>的虚拟主机，同时设置日志和路径重写。</h4><h4 id="待会访问的时候需要使用域名访问，不可以使用IP进行访问，否则将因为匹配不到虚拟主机而重定向到默认虚拟主机localhost中。"><a href="#待会访问的时候需要使用域名访问，不可以使用IP进行访问，否则将因为匹配不到虚拟主机而重定向到默认虚拟主机localhost中。" class="headerlink" title="待会访问的时候需要使用域名访问，不可以使用IP进行访问，否则将因为匹配不到虚拟主机而重定向到默认虚拟主机localhost中。"></a>待会访问的时候需要使用域名访问，不可以使用IP进行访问，否则将因为匹配不到虚拟主机而重定向到默认虚拟主机localhost中。</h4><h4 id="然后创建以下网页文件："><a href="#然后创建以下网页文件：" class="headerlink" title="然后创建以下网页文件："></a>然后创建以下网页文件：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p myapps/&#123;ROOT,normal,default&#125; others/rewrite</span><br></pre></td></tr></table></figure><h3 id="这里在每个目录中都创建一个index-jsp"><a href="#这里在每个目录中都创建一个index-jsp" class="headerlink" title="这里在每个目录中都创建一个index.jsp"></a>这里在每个目录中都创建一个index.jsp</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=UTF-8&quot;</span></span><br><span class="line">   pageEncoding=<span class="string">&quot;UTF-8&quot;</span>%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;<span class="built_in">head</span>&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;主页&lt;/title&gt;&lt;!-可以对这个文件做出不同的修改以区别不同文件--&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;p&gt;请求地址：&lt;%=request.getRequestURL()%&gt;&lt;p&gt;</span><br><span class="line">        &lt;p&gt;客户端IP：&lt;%=request.getRemoteAddr()%&gt;&lt;p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h4 id="tomcat的路径匹配机制和httpd略有不同，如果访问根目录资源，将重定向到ROOT目录下，其他目录中的资源照常。可以参考下图："><a href="#tomcat的路径匹配机制和httpd略有不同，如果访问根目录资源，将重定向到ROOT目录下，其他目录中的资源照常。可以参考下图：" class="headerlink" title="tomcat的路径匹配机制和httpd略有不同，如果访问根目录资源，将重定向到ROOT目录下，其他目录中的资源照常。可以参考下图："></a>tomcat的路径匹配机制和httpd略有不同，如果访问根目录资源，将重定向到ROOT目录下，其他目录中的资源照常。可以参考下图：</h4><p><img src="/2022/05/31/tomcat/1.png" alt="tomcat路径机制"></p><h4 id="效果如下："><a href="#效果如下：" class="headerlink" title="效果如下："></a>效果如下：</h4><p><img src="/2022/05/31/tomcat/2.png" alt="效果"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mariadb数据库</title>
      <link href="/2022/05/31/mariadb%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2022/05/31/mariadb%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="配置-MySQL-服务器"><a href="#配置-MySQL-服务器" class="headerlink" title="配置 MySQL 服务器"></a><strong>配置 MySQL 服务器</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install mysql-server</span><br></pre></td></tr></table></figure><h3 id="配置-root-密码"><a href="#配置-root-密码" class="headerlink" title="配置 root 密码"></a>配置 root 密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root -p password Aa1        // 设置 root 密码</span><br><span class="line">&gt; Enter password :                        // 输入旧密码，5.5 默认为空</span><br></pre></td></tr></table></figure><h3 id="登陆-MySQL-命令行"><a href="#登陆-MySQL-命令行" class="headerlink" title="登陆 MySQL 命令行"></a>登陆 MySQL 命令行</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -pAa1                        // 参数 跟 用户名，密码 之间无空格</span><br></pre></td></tr></table></figure><h3 id="命令行-导入-x2F-导出-数据库"><a href="#命令行-导入-x2F-导出-数据库" class="headerlink" title="命令行 导入&#x2F;导出 数据库"></a>命令行 导入&#x2F;导出 数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysqldump -uroot -p 数据库名 &gt; /文件路径    // 导出 数据库 到 玩家</span><br><span class="line">mysql -uroot -p 数据库名 &lt; /路径/文件名.sql // 从 文件 导入 数据库</span><br></pre></td></tr></table></figure><h3 id="MySQL-5-6-查看-初始密码"><a href="#MySQL-5-6-查看-初始密码" class="headerlink" title="MySQL 5.6 查看 初始密码"></a>MySQL 5.6 查看 初始密码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat ~/.mysql_secret</span><br></pre></td></tr></table></figure><ul><li><h4 id="Tips：-从-MySQL-5-6-起，初始密码不再为空"><a href="#Tips：-从-MySQL-5-6-起，初始密码不再为空" class="headerlink" title="Tips： 从 MySQL 5.6 起，初始密码不再为空"></a>Tips： 从 MySQL 5.6 起，初始密码不再为空</h4></li></ul><h3 id="MySQL-常用语句"><a href="#MySQL-常用语句" class="headerlink" title="MySQL 常用语句"></a><strong>MySQL 常用语句</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. create database dbname;                // 创建 dbname 数据库</span><br><span class="line">2. create database dbname default charset utf8 collate utf8_general_ci;</span><br><span class="line">3.                                        // 创建数据库 并 指定默认编码</span><br><span class="line">4. 　</span><br><span class="line">5. use dbname;                            // 使用 dbname 数据库</span><br><span class="line">6. 　</span><br><span class="line">7. create table <span class="built_in">test</span> (                    // 创建 <span class="built_in">test</span> 表</span><br><span class="line">8. ID int NOT NULL AUTO_INCREMENT,      // ID，int 类型，不能为空，自动增值</span><br><span class="line">9. Name varchar(10),                    // Name，varchar 类型，长度 10 位</span><br><span class="line">10. birthday datetime,                   // birthd，日期类型</span><br><span class="line">11. sex char(5),                         // sex，char 类型，长度 5 位</span><br><span class="line">12. Password char(200),                  // Password，char 类型，长度 200 位</span><br><span class="line">13. PRIMARY KEY (ID)                       // 设置 ID 为主键</span><br><span class="line">14. );                                     // 完成创建语句</span><br><span class="line">15. 　</span><br><span class="line">16. show databases;                        // 列出所有数据库</span><br><span class="line">17. show tables;                           // 列出数据库所有表</span><br><span class="line">18. select * from 表名;                    // 列出表所有内容</span><br><span class="line">19. desc 表名;                             // 显示数据表结构</span><br><span class="line">20. drop database 库名;                    // 删除数据库</span><br><span class="line">21. drop table 表名;                       // 删除数据表</span><br><span class="line">22. delete from 表名;                      // 清除表内所有数据</span><br><span class="line">23. 　</span><br><span class="line">24. <span class="built_in">source</span> /路径/文件名.sql                // 从文件读取 数据库语句 并执行</span><br><span class="line">25. 　</span><br><span class="line">26. </span><br><span class="line">27. insert into 表名(Name,birthday,sex,Password) values(<span class="string">&#x27;myuser1&#x27;</span>,<span class="string">&#x27;1995-07-01&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;myuser1&#x27;</span>));</span><br><span class="line">28.                                        // 往 数据表 插入内容</span><br><span class="line">29. 　</span><br><span class="line">30. update 表名 <span class="built_in">set</span> birthday=<span class="string">&#x27;1996-10-25&#x27;</span> <span class="built_in">where</span> Name=<span class="string">&#x27;myuser2&#x27;</span>;</span><br><span class="line">31.                                        // 更新 数据表 内容</span><br><span class="line">32. update 表名 <span class="built_in">set</span> Password=password(<span class="string">&#x27;密码&#x27;</span>) <span class="built_in">where</span> Name=<span class="string">&#x27;myuser1&#x27;</span>;</span><br><span class="line">33.                                        // 利用 MySQL 自带函数 生成密文</span><br></pre></td></tr></table></figure><h3 id="MySQL-常用操作语句"><a href="#MySQL-常用操作语句" class="headerlink" title="MySQL 常用操作语句"></a><strong>MySQL 常用操作语句</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. # 查找 所有用户 及 登录地址</span><br><span class="line">2. select user,host from mysql.user;</span><br><span class="line">3. 　</span><br><span class="line">4. # 删除匿名用户</span><br><span class="line">5. delete from mysql.user where user=&#x27;&#x27;;</span><br><span class="line">6. 　</span><br><span class="line">7. # 改变 root 用户名</span><br><span class="line">8. update mysql.user set user=&#x27;admin&#x27; where user=&#x27;root&#x27;;</span><br><span class="line">9. 　</span><br><span class="line">10. # 创建用户</span><br><span class="line">11. create user &#x27;username&#x27;@&#x27;localhost&#x27; identified by &#x27;password&#x27;;</span><br><span class="line">12. 　</span><br><span class="line">13. # 更改密码</span><br><span class="line">14. set password for &#x27;root&#x27;@&#x27;localhost&#x27;=password(&#x27;passwd&#x27;);</span><br><span class="line">15. 　</span><br><span class="line">16. # 删除用户</span><br><span class="line">17. drop user username;</span><br><span class="line">18. 　</span><br><span class="line">19. # 赋予权限</span><br><span class="line">20. grant all on *.* to username@localhost;    // 允许 本地登陆 的 username 用户 完全控制 所有数据库</span><br><span class="line">21. grant select on testdb.* to username@localhost;</span><br><span class="line">22.                                            // 允许 本地登陆 的 username 用户 完全控制 testdb 数据库</span><br><span class="line">23. 　</span><br><span class="line">24. # 回收权限</span><br><span class="line">25. revoke all on *.* from username@localhost; // 移除 本地登陆 的 username 用户 的 所有权限</span><br><span class="line">26. 　</span><br><span class="line">27. # 刷新权限</span><br><span class="line">28. flush privileges;                          // 修改完权限 后 刷新生效</span><br></pre></td></tr></table></figure><h3 id="MySQL-重置-root-密码"><a href="#MySQL-重置-root-密码" class="headerlink" title="MySQL 重置 root 密码"></a><strong>MySQL 重置 root 密码</strong></h3><ol><li><p>修改 MySQL 配置文件 vim &#x2F;etc&#x2F;my.cnf</p></li><li><p>在 [mysqld] 下添加 skip-grant-tables</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]skip-grant-tables</span><br></pre></td></tr></table></figure></li><li><p>重启 MySQL 服务 service mysqld restart</p></li><li><p>免密码 登陆 MySQL mysql -uroot</p></li><li><p>修改 root 用户密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set password for &#x27;root&#x27;@&#x27;localhost&#x27;=password(&#x27;passwd&#x27;);</span><br></pre></td></tr></table></figure></li><li><p>配置文件移除 skip-grant-tables，重启 MySQL，完成</p></li></ol><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><h4 id="查看-MySQL-版本"><a href="#查看-MySQL-版本" class="headerlink" title="查看 MySQL 版本"></a>查看 MySQL 版本</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">从 RPM 包 升级 MySQL</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt/smb_share                      // 从共享拖入 rpm 包rpm -ivh --nodeps --force mysqld-*     </span><br><span class="line"><span class="comment">#// 忽略依赖检查和冲突，强行安装</span></span><br></pre></td></tr></table></figure><h4 id="mysqld-相关"><a href="#mysqld-相关" class="headerlink" title="[mysqld] 相关"></a><strong>[mysqld] 相关</strong></h4><h4 id="vim-x2F-etc-x2F-my-cnf-修改-MySQL-配置文件"><a href="#vim-x2F-etc-x2F-my-cnf-修改-MySQL-配置文件" class="headerlink" title="vim &#x2F;etc&#x2F;my.cnf 修改 MySQL 配置文件"></a>vim &#x2F;etc&#x2F;my.cnf 修改 MySQL 配置文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mysqld]　</span><br><span class="line">skip-networking                           // 关闭外部访问</span><br><span class="line">local-infile=0                            // 禁止读取本地文件</span><br><span class="line">wait_timeout=100                          // 非交互式链接 超时等待 秒数</span><br><span class="line">interactive_timeout=100                   // 交互式链接 超时等待 秒数</span><br><span class="line">log=/usr/local/mysql/log/mysql.log        // 启用日志记录</span><br></pre></td></tr></table></figure><h4 id="Tips：-修改-x2F-etc-x2F-my-cnf-后需要-重启服务-才能-生效配置"><a href="#Tips：-修改-x2F-etc-x2F-my-cnf-后需要-重启服务-才能-生效配置" class="headerlink" title="* Tips： 修改 &#x2F;etc&#x2F;my.cnf 后需要 重启服务 才能 生效配置"></a>* Tips： 修改 &#x2F;etc&#x2F;my.cnf 后需要 重启服务 才能 生效配置</h4><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a><strong>重启</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart mariadb 重启 MySQL 服务</span><br></pre></td></tr></table></figure><h3 id="端口"><a href="#端口" class="headerlink" title="端口"></a><strong>端口</strong></h3><h4 id="防火墙开放端口"><a href="#防火墙开放端口" class="headerlink" title="防火墙开放端口"></a>防火墙开放端口</h4><ul><li><h4 id="TCP-x2F-3306-MySQL-默认端口"><a href="#TCP-x2F-3306-MySQL-默认端口" class="headerlink" title="TCP&#x2F;3306 - MySQL 默认端口"></a>TCP&#x2F;3306 - MySQL 默认端口</h4></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation     初始化数据表，填写root进入密码</span><br><span class="line"></span><br><span class="line">mysql -uroot -p                       以root密码进入</span><br><span class="line"></span><br><span class="line">show databases;                    列出全部数据库</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> password = password(<span class="string">&quot;new password&quot;</span>);        为root重设数据库密码</span><br><span class="line"></span><br><span class="line">creat user  [user@loaclhost](user@whl.com)  identified by <span class="string">&#x27;密码&#x27;</span>         创建用户以及密码</span><br><span class="line"></span><br><span class="line">use mysql                                                                      使用“ ”数据库</span><br><span class="line"></span><br><span class="line">select host,user,password from user <span class="built_in">where</span> user=<span class="string">&quot;name&quot;</span>;       查询账户权限</span><br><span class="line"></span><br><span class="line">grant all privileges on *.* to [user@localhost](user@localhost)                              </span><br><span class="line">为用户user开放全部的数据库和表单的权限</span><br><span class="line"></span><br><span class="line">grant select,update,delete,insert on mysql.user to [user@localhost](user@localhost)       </span><br><span class="line">为用户user开放插入、更新、删除、查询的权限</span><br><span class="line"></span><br><span class="line">revoke select,update,delete,insert on mysql.user from [user@localhost](user@localhost)         </span><br><span class="line">移除用户user的插入、更新、删除、查询的权限</span><br><span class="line"></span><br><span class="line">create database             创建数据库</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create table name  (</span><br><span class="line"></span><br><span class="line">name char(15),</span><br><span class="line"></span><br><span class="line">price int,</span><br><span class="line"></span><br><span class="line">pages int);</span><br><span class="line"></span><br><span class="line">describe name                       创建表单数据</span><br><span class="line"></span><br><span class="line">insert into name(name,price,pages)  values(<span class="string">&#x27;mary&#x27;</span>,<span class="string">&#x27;80&#x27;</span>,<span class="string">&#x27;788&#x27;</span>);       插入数据</span><br><span class="line"></span><br><span class="line">select * from name;                         **选择name的全部表单内容**</span><br><span class="line"></span><br><span class="line">update name <span class="built_in">set</span> price=<span class="string">&#x27;22&#x27;</span>;                    **修改插入的表单内容**</span><br><span class="line"></span><br><span class="line">delete from name           清空表单内容</span><br><span class="line"></span><br><span class="line">select * from name <span class="built_in">where</span> price&gt;75;          </span><br><span class="line"></span><br><span class="line">select * from name <span class="built_in">where</span> price!=80;     在 name表单查找出价格大于 75 元或价格不等于 80 元的图书</span><br><span class="line"></span><br><span class="line">flush privileges  刷新</span><br><span class="line"></span><br><span class="line">mysql -h10.10.10.1 -uroot -p123 远程连接数据库</span><br></pre></td></tr></table></figure><h3 id="查看端口号"><a href="#查看端口号" class="headerlink" title="查看端口号"></a><strong>查看端口号</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show global variables like &#x27;port&#x27;;  </span><br></pre></td></tr></table></figure><h3 id="远程连接数据库"><a href="#远程连接数据库" class="headerlink" title="远程连接数据库"></a>远程连接数据库</h3><ol><li><h4 id="创建能远程连接的用户，并且设置用户的权限来访问数据"><a href="#创建能远程连接的用户，并且设置用户的权限来访问数据" class="headerlink" title="创建能远程连接的用户，并且设置用户的权限来访问数据"></a>创建能远程连接的用户，并且设置用户的权限来访问数据</h4></li><li><pre><code class="bash">1. grant all privileges on *.* to &#39;jack&#39;@&#39;%&#39; identified by &#39;123&#39; with grant option;2. 授权全部的数据库给jack用户全部的电脑可以连接使用123的密码连接3. flush privileges;命令立刻生效,刷新<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">3. #### 查询数据库的用户</span><br><span class="line"></span><br><span class="line">4. ```</span><br><span class="line">   select distinct concat(&#x27;User: &#x27;&#x27;&#x27;,user,&#x27;&#x27;&#x27;@&#x27;&#x27;&#x27;,host,&#x27;&#x27;&#x27;;&#x27;) as query from mysql.user;</span><br><span class="line">   ---中间是三个 &#x27; 来组成的</span><br></pre></td></tr></table></figure></code></pre></li><li><p><img src="/2022/05/31/mariadb%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" alt="截图"></p></li><li><h4 id="查询出jack用户有对全部计算机连接数据库的权限"><a href="#查询出jack用户有对全部计算机连接数据库的权限" class="headerlink" title="查询出jack用户有对全部计算机连接数据库的权限"></a>查询出jack用户有对全部计算机连接数据库的权限</h4></li><li><h4 id="配置数据库允许其他计算机访问"><a href="#配置数据库允许其他计算机访问" class="headerlink" title="配置数据库允许其他计算机访问"></a>配置数据库允许其他计算机访问</h4></li><li><pre><code class="bash">1. vim /etc/my.conf.d/mariadb.server.conf2. bind-address = 127.0.0.1   (本地连接地址）是主机的IP不是127.0.0.1</code></pre></li><li><h4 id="重启服务，开放3306防火墙"><a href="#重启服务，开放3306防火墙" class="headerlink" title="重启服务，开放3306防火墙"></a>重启服务，开放3306防火墙</h4></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCSI Linux</title>
      <link href="/2022/05/30/ISCSI-Linux/"/>
      <url>/2022/05/30/ISCSI-Linux/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><strong>ISCSI先了解IQN</strong></p><p>IQN (iSCSI qualified name)最多支持255个字符，格式如下：</p><p><strong>iqn.yyyy-mm.naming-authority:unique name</strong></p><p><strong>yyyy-mm</strong> 是公司域名注册的年月</p><p>naming-authority 是<strong>域名的逆转格式</strong>，例如： iqn.1998-01.com.vmware.iscsi  这个说明<strong>vmware.com</strong>这个域名，是<strong>1998.01</strong>注册的，<strong>iscsi</strong>是子域名，即<strong>iscsi.vmware.com</strong>的逆转格式。</p><p><strong>unique name</strong>  可以是你想用的任何名字，例如主机名，但必须确保冒号后边的名字是唯一的，例如:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">iqn.1998-01.com.vmware.iscsi:name1</span><br><span class="line"></span><br><span class="line">iqn.1998-01.com.vmware.iscsi:name2</span><br><span class="line"></span><br><span class="line">iqn.1998-01.com.vmware.iscsi:name999</span><br></pre></td></tr></table></figure><p><strong>理论：</strong></p><p>1.先安装软件targetd targetcli</p><p>2.启动targetd</p><p>3.把共享的磁盘写入 –&#x2F;backstores  (可以把真实共享的磁盘改为其他的名字，从而隐藏磁盘）</p><p>4.一般没要求可以使用系统默认的target(IQN)</p><p>5.直接创建虚拟磁盘IQN&#x2F;tgp1&#x2F;luns</p><p>6.设置访问控制列表</p><p>7.开启端口3260</p><p><strong>实操：</strong></p><p><img src="/2022/05/30/ISCSI-Linux/1.png" alt="截图"></p><p><strong>客户端：</strong></p><p>先<strong>发现</strong>，在<strong>登录</strong>，最后<strong>挂载</strong></p><p><img src="/2022/05/30/ISCSI-Linux/2.png" alt="截图"></p><p><strong>最后</strong>，要<strong>开机挂载</strong>的</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">blkid | grep /dev/sdb     --查看磁盘信息（UUID也在）</span><br><span class="line"></span><br><span class="line">vim /etc/fstab</span><br><span class="line"></span><br><span class="line">       UUID=看上面的信息 /iscsi xfs defaults,_netdev 0 0</span><br><span class="line"></span><br><span class="line">不用可以卸载设备</span><br><span class="line"></span><br><span class="line">iscsiadm -m node -T iqn..... -u</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NIS</title>
      <link href="/2022/05/30/NIS/"/>
      <url>/2022/05/30/NIS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NIS"><a href="#NIS" class="headerlink" title="NIS"></a>NIS</h1><p><img src="/2022/05/30/NIS/1.png" alt="截图"></p><table><thead><tr><th><strong>伺服器端档案名称</strong></th><th><strong>档案内容</strong></th></tr></thead><tbody><tr><td><strong>&#x2F;etc&#x2F;passwd</strong></td><td><strong>提供使用者帐号、UID、GID、家目录所在、Shell 等等</strong></td></tr><tr><td><strong>&#x2F;etc&#x2F;group</strong></td><td><strong>提供群组资料以及GID 的对应，还有该群组的加入人员</strong></td></tr><tr><td><strong>&#x2F;etc&#x2F;hosts</strong></td><td><strong>主机名称与IP 的对应，常用于private IP 的主机名称对应</strong></td></tr><tr><td><strong>&#x2F;etc&#x2F;services</strong></td><td><strong>每一种服务(daemons) 所对应的埠口(port number)</strong></td></tr><tr><td><strong>&#x2F;etc&#x2F;protocols</strong></td><td><strong>基础的TCP&#x2F;IP 封包协定，如TCP, UDP, ICMP 等</strong></td></tr><tr><td><strong>&#x2F;etc&#x2F;rpc</strong></td><td><strong>每种RPC 伺服器所对应的程式号码</strong></td></tr><tr><td><strong>&#x2F;var&#x2F;yp&#x2F;ypservers</strong></td><td><strong>NIS 伺服器所提供的资料库</strong></td></tr></tbody></table><p><img src="/2022/05/30/NIS/2.png" alt="截图"></p><h4 id="整个NIS-的运作就如同上图，首先必须要有NIS-server-的存在，之后才会有NIS-Client-的存在。那么当使用者有登入的需求时，整个NIS-的运作程序是："><a href="#整个NIS-的运作就如同上图，首先必须要有NIS-server-的存在，之后才会有NIS-Client-的存在。那么当使用者有登入的需求时，整个NIS-的运作程序是：" class="headerlink" title="整个NIS 的运作就如同上图，首先必须要有NIS server 的存在，之后才会有NIS Client 的存在。那么当使用者有登入的需求时，整个NIS 的运作程序是："></a>整个NIS 的运作就如同上图，首先必须要有NIS server 的存在，之后才会有NIS Client 的存在。那么当使用者有登入的需求时，整个NIS 的运作程序是：</h4><ol><li><h4 id="关于NIS-Server-master-x2F-slave-的运作程序："><a href="#关于NIS-Server-master-x2F-slave-的运作程序：" class="headerlink" title="关于NIS Server (master&#x2F;slave) 的运作程序："></a>关于NIS Server (master&#x2F;slave) 的运作程序：</h4><ol><li><h4 id="NIS-Master-先将本身的帐号密码相关档案制作成为资料库档案；"><a href="#NIS-Master-先将本身的帐号密码相关档案制作成为资料库档案；" class="headerlink" title="NIS Master 先将本身的帐号密码相关档案制作成为资料库档案；"></a>NIS Master 先将本身的<strong>帐号密码</strong>相关档案制作成为资料库档案；</h4></li><li><h4 id="NIS-Master-可以主动的告知NIS-slave-server-来更新；"><a href="#NIS-Master-可以主动的告知NIS-slave-server-来更新；" class="headerlink" title="NIS Master 可以主动的告知NIS slave server 来更新；"></a>NIS Master 可以主动的告知NIS slave server 来更新；</h4></li><li><h4 id="NIS-slave-亦可主动的前往NIS-master-server-取得更新后的资料库档案；"><a href="#NIS-slave-亦可主动的前往NIS-master-server-取得更新后的资料库档案；" class="headerlink" title="NIS slave 亦可主动的前往NIS master server 取得更新后的资料库档案；"></a>NIS slave 亦可主动的前往NIS master server 取得更新后的资料库档案；</h4></li><li><h4 id="若有帐号密码的异动时，需要重新制作database-与重新同步化master-x2F-slave。"><a href="#若有帐号密码的异动时，需要重新制作database-与重新同步化master-x2F-slave。" class="headerlink" title="若有帐号密码的异动时，需要重新制作database 与重新同步化master&#x2F;slave。"></a>若有帐号密码的异动时，需要重新制作database 与重新同步化master&#x2F;slave。</h4></li></ol></li><li><h4 id="关于当NIS-Client-有任何登入查询的需求时："><a href="#关于当NIS-Client-有任何登入查询的需求时：" class="headerlink" title="关于当NIS Client 有任何登入查询的需求时："></a>关于当NIS Client 有任何登入查询的需求时：</h4><ol><li><h4 id="NIS-client-若有登入需求时，会先查询其本机的-x2F-etc-x2F-passwd-x2F-etc-x2F-shadow-等档案；"><a href="#NIS-client-若有登入需求时，会先查询其本机的-x2F-etc-x2F-passwd-x2F-etc-x2F-shadow-等档案；" class="headerlink" title="NIS client 若有登入需求时，会先查询其本机的&#x2F;etc&#x2F;passwd, &#x2F;etc&#x2F;shadow 等档案；"></a>NIS client 若有登入需求时，会先查询其本机的&#x2F;etc&#x2F;passwd, &#x2F;etc&#x2F;shadow 等档案；</h4></li><li><h4 id="若在NIS-Client-本机找不到相关的帐号资料，才开始向整个NIS-网域的主机广播查询；"><a href="#若在NIS-Client-本机找不到相关的帐号资料，才开始向整个NIS-网域的主机广播查询；" class="headerlink" title="若在NIS Client 本机找不到相关的帐号资料，才开始向整个NIS 网域的主机广播查询；"></a>若在NIS Client 本机找不到相关的帐号资料，才开始向整个NIS 网域的主机广播查询；</h4></li><li><h5 id="每部NIS-server-不论master-x2F-slave-都可以回应，基本上是『先回应者优先』。"><a href="#每部NIS-server-不论master-x2F-slave-都可以回应，基本上是『先回应者优先』。" class="headerlink" title="每部NIS server (不论master&#x2F;slave) 都可以回应，基本上是『先回应者优先』。"></a>每部NIS server (不论master&#x2F;slave) 都可以回应，基本上是『先回应者优先』。</h5></li></ol></li></ol><h2 id="实验开始："><a href="#实验开始：" class="headerlink" title="实验开始："></a>实验开始：</h2><h2 id="网络环境："><a href="#网络环境：" class="headerlink" title="网络环境："></a><strong>网络环境：</strong></h2><table><thead><tr><th>节点</th><th>主机</th></tr></thead><tbody><tr><td>node1(nis主服务器)</td><td>192.168.10.222</td></tr><tr><td>node2(nis客户机)</td><td>192.168.10.223</td></tr></tbody></table><h2 id="1-环境准备-两个节点都要"><a href="#1-环境准备-两个节点都要" class="headerlink" title="1.环境准备(两个节点都要)"></a><strong>1.环境准备(两个节点都要)</strong></h2><h5 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld setenforce 0</span><br></pre></td></tr></table></figure><h5 id="添加主机名解析"><a href="#添加主机名解析" class="headerlink" title="添加主机名解析"></a>添加主机名解析</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line">192.168.10.222 node1 </span><br><span class="line">192.168.10.223 node2</span><br></pre></td></tr></table></figure><h2 id="2-nis主服务器配置"><a href="#2-nis主服务器配置" class="headerlink" title="2.nis主服务器配置"></a><strong>2.nis主服务器配置</strong></h2><h4 id="下载软件包"><a href="#下载软件包" class="headerlink" title="下载软件包"></a>下载软件包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y installrpcbind ypserv ypbind yp-tools </span><br></pre></td></tr></table></figure><h4 id="添加nis域名"><a href="#添加nis域名" class="headerlink" title="添加nis域名"></a>添加nis域名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nisdomainname skills.com </span></span><br><span class="line">vim /etc/sysconfig/network</span><br><span class="line">NISDOMAIN skills.com</span><br></pre></td></tr></table></figure><h4 id="开机自动挂载nis域名"><a href="#开机自动挂载nis域名" class="headerlink" title="开机自动挂载nis域名"></a>开机自动挂载nis域名</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vim /etc/rc.d/rc.local</span></span><br><span class="line"><span class="built_in">touch</span>/var/lock/subsys/local</span><br><span class="line">/bin/nisdomainnameskills.com</span><br><span class="line">[root@localhost ~]<span class="comment"># chmod 777 /etc/rc.d/rc.local</span></span><br></pre></td></tr></table></figure><h4 id="修改主配置文件限制权限"><a href="#修改主配置文件限制权限" class="headerlink" title="修改主配置文件限制权限"></a>修改主配置文件限制权限</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ypserv.conf</span><br><span class="line">192.168.10.0/24:*:*:none  //给与该网段访问权限</span><br><span class="line">192.168.10.222:*:*:none  //给与该本机访问权限       </span><br><span class="line">:*:*:deny   //拒绝其他服务器</span><br></pre></td></tr></table></figure><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart yppasswdd rpcbind ypserv </span><br><span class="line">systemctl <span class="built_in">enable</span>yppasswdd rpcbind ypserv</span><br></pre></td></tr></table></figure><h4 id="建立资料库"><a href="#建立资料库" class="headerlink" title="建立资料库"></a>建立资料库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# /usr/lib64/yp/ypinit -m</span><br><span class="line"></span><br><span class="line">At this point, we have to construct a list of the hosts which will run NIS</span><br><span class="line">servers.  localhost is in the list of NIS server hosts.  Please continue to add</span><br><span class="line">the names for the other hosts, one per line.  When you are done with the</span><br><span class="line">list, type a &lt;control D&gt;.</span><br><span class="line">        next host to add:  localhost</span><br><span class="line">        next host to add:  </span><br><span class="line">The current list of NIS servers looks like this:</span><br><span class="line"></span><br><span class="line">localhost</span><br><span class="line"></span><br><span class="line">Is this correct?  [y/n: y]  y</span><br><span class="line">We need a few minutes to build the databases...</span><br><span class="line">Building /var/yp/skills.com/ypservers...</span><br><span class="line">Running /var/yp/Makefile...</span><br><span class="line">gmake[1]: Entering directory &#x27;/var/yp/skills.com&#x27;</span><br><span class="line">Updating passwd.byname...</span><br><span class="line">Updating passwd.byuid...</span><br><span class="line">Updating group.byname...</span><br><span class="line">Updating group.bygid...</span><br><span class="line">Updating hosts.byname...</span><br><span class="line">Updating hosts.byaddr...</span><br><span class="line">Updating rpc.byname...</span><br><span class="line">Updating rpc.bynumber...</span><br><span class="line">Updating services.byname...</span><br><span class="line">Updating services.byservicename...</span><br><span class="line">Updating netid.byname...</span><br><span class="line">Updating protocols.bynumber...</span><br><span class="line">Updating protocols.byname...</span><br><span class="line">Updating mail.aliases...</span><br><span class="line">gmake[1]: Leaving directory &#x27;/var/yp/skills.com&#x27;</span><br><span class="line"></span><br><span class="line">localhost has been set up as a NIS master server.</span><br><span class="line"></span><br><span class="line">Now you can run ypinit -s localhost on all slave server.</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><h4 id="新建nis账户"><a href="#新建nis账户" class="headerlink" title="新建nis账户"></a>新建nis账户</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd nis1 -p123 </span><br><span class="line">useradd nis2 -p123 </span><br><span class="line">当主机发生了更改就cd到/var/yp make </span><br><span class="line">[root@localhost ~]# cd /var/yp/</span><br><span class="line">[root@localhost yp]# make</span><br><span class="line">gmake[1]: Entering directory &#x27;/var/yp/skills.com&#x27;</span><br><span class="line">Updating passwd.byname...</span><br><span class="line">Updating passwd.byuid...</span><br><span class="line">Updating group.byname...</span><br><span class="line">Updating group.bygid...</span><br><span class="line">Updating netid.byname...</span><br><span class="line">gmake[1]: Leaving directory &#x27;/var/yp/skills.com&#x27;</span><br><span class="line">[root@localhost yp]# </span><br></pre></td></tr></table></figure><h4 id="重启服务-1"><a href="#重启服务-1" class="headerlink" title="重启服务"></a>重启服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart yppasswdd rpcbind ypserv </span><br><span class="line">systemctl <span class="built_in">enable</span>yppasswdd rpcbind ypserv</span><br></pre></td></tr></table></figure><h2 id="3-nis客户端设置"><a href="#3-nis客户端设置" class="headerlink" title="3.nis客户端设置"></a>3.nis客户端设置</h2><h4 id="下载软件包-1"><a href="#下载软件包-1" class="headerlink" title="下载软件包"></a>下载软件包</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y installypbind rpcbind yp-tools</span><br></pre></td></tr></table></figure><h4 id="添加nis域名-1"><a href="#添加nis域名-1" class="headerlink" title="添加nis域名"></a>添加nis域名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# nisdomainname skills.com </span><br><span class="line">vim /etc/sysconfig/network</span><br><span class="line">NISDOMAIN skills.com</span><br></pre></td></tr></table></figure><h4 id="开机自动挂载nis域名-1"><a href="#开机自动挂载nis域名-1" class="headerlink" title="开机自动挂载nis域名"></a>开机自动挂载nis域名</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# vim /etc/rc.d/rc.local</span><br><span class="line"> touch /var/lock/subsys/local</span><br><span class="line">/bin/nisdomainname skills.com</span><br><span class="line">[root@localhost ~]# chmod 777 /etc/rc.d/rc.local </span><br></pre></td></tr></table></figure><h4 id="编辑yp-conf文件，设置主服务。"><a href="#编辑yp-conf文件，设置主服务。" class="headerlink" title="编辑yp.conf文件，设置主服务。"></a>编辑yp.conf文件，设置主服务。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">domain skills.com server 192.168.10.222</span><br></pre></td></tr></table></figure><h4 id="重启服务-2"><a href="#重启服务-2" class="headerlink" title="重启服务"></a>重启服务</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart ypbind rpcbind</span><br></pre></td></tr></table></figure><h4 id="yptest查看是否加入成功"><a href="#yptest查看是否加入成功" class="headerlink" title="yptest查看是否加入成功"></a>yptest查看是否加入成功</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# yptest</span><br><span class="line">Test 1: domainname</span><br><span class="line">Configured domainname is &quot;skills.com&quot;</span><br><span class="line"> </span><br><span class="line">Test 2: ypbind</span><br><span class="line">Use Protocol V1: Used NIS server: 192.168.10.222</span><br><span class="line">Use Protocol V2: Used NIS server: 192.168.10.222</span><br><span class="line">Use Protocol V3:</span><br><span class="line">ypbind_nconf:</span><br><span class="line">        nc_netid: udp</span><br><span class="line">        nc_semantics: 1</span><br><span class="line">        nc_flag: 1</span><br><span class="line">        nc_protofmly: &#x27;inet&#x27;</span><br><span class="line">        nc_proto: &#x27;udp&#x27;</span><br><span class="line">        nc_device: &#x27;-&#x27;</span><br><span class="line">        nc_nlookups: 0</span><br><span class="line">ypbind_svcaddr: 192.168.10.222:740</span><br><span class="line">ypbind_servername: 192.168.10.222</span><br><span class="line">ypbind_hi_vers: 2</span><br><span class="line">ypbind_lo_vers: 2</span><br><span class="line"> </span><br><span class="line">Test 3: yp_match</span><br><span class="line">WARNING: No such key in map (Map passwd.byname, key nobody)</span><br><span class="line"> </span><br><span class="line">Test 4: yp_first</span><br><span class="line">nis1 nis1:123:1000:1000::/home/nis1:/bin/bash</span><br><span class="line"> </span><br><span class="line">Test 5: yp_next</span><br><span class="line">nis2 nis2:123:1001:1001::/home/nis2:/bin/bash</span><br><span class="line"> </span><br><span class="line">Test 6: yp_master</span><br><span class="line">localhost</span><br><span class="line"> </span><br><span class="line">Test 7: yp_order</span><br><span class="line">1639387530</span><br><span class="line"> </span><br><span class="line">Test 8: yp_maplist</span><br><span class="line">netid.byname</span><br><span class="line">group.bygid</span><br><span class="line">group.byname</span><br><span class="line">passwd.byuid</span><br><span class="line">passwd.byname</span><br><span class="line">mail.aliases</span><br><span class="line">protocols.byname</span><br><span class="line">protocols.bynumber</span><br><span class="line">services.byservicename</span><br><span class="line">services.byname</span><br><span class="line">rpc.bynumber</span><br><span class="line">rpc.byname</span><br><span class="line">hosts.byaddr</span><br><span class="line">hosts.byname</span><br><span class="line">ypservers</span><br><span class="line"> </span><br><span class="line">Test 9: yp_all</span><br><span class="line">nis1 nis1:123:1000:1000::/home/nis1:/bin/bash</span><br><span class="line">nis2 nis2:123:1001:1001::/home/nis2:/bin/bash</span><br><span class="line">1 tests failed</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><h4 id="配置域用户登陆"><a href="#配置域用户登陆" class="headerlink" title="配置域用户登陆"></a>配置域用户登陆</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# authselect select nis --force</span><br><span class="line">Backup stored at /var/lib/authselect/backups/2021-12-13-09-34-52.8NFKZD</span><br><span class="line">Profile &quot;nis&quot; was selected.</span><br><span class="line">The following nsswitch maps are overwritten by the profile:</span><br><span class="line">- aliases</span><br><span class="line">- automount</span><br><span class="line">- ethers</span><br><span class="line">- group</span><br><span class="line">- hosts</span><br><span class="line">- initgroups</span><br><span class="line">- netgroup</span><br><span class="line">- networks</span><br><span class="line">- passwd</span><br><span class="line">- protocols</span><br><span class="line">- publickey</span><br><span class="line">- rpc</span><br><span class="line">- services</span><br><span class="line">- shadow</span><br><span class="line"> </span><br><span class="line">Make sure that NIS service is configured and enabled. See NIS documentation for more information.</span><br><span class="line"> </span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><h4 id="主服务器配置nfs，将home目录共享。"><a href="#主服务器配置nfs，将home目录共享。" class="headerlink" title="主服务器配置nfs，将home目录共享。"></a>主服务器配置nfs，将home目录共享。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@localhost yp]# vim /etx/exports</span><br><span class="line">/home/ *(rw,sync)</span><br><span class="line">[root@localhost yp]# exportfs -rv</span><br><span class="line">exporting *:/home</span><br></pre></td></tr></table></figure><h4 id="客户端挂载主服务器home目录"><a href="#客户端挂载主服务器home目录" class="headerlink" title="客户端挂载主服务器home目录"></a>客户端挂载主服务器home目录</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart nfs-server </span><br><span class="line">[root@localhost ~]# mount 192.168.10.222:/home/ /home/</span><br><span class="line">[root@localhost ~]# df</span><br><span class="line">Filesystem           1K-blocks    Used Available Use% Mounted on</span><br><span class="line">devtmpfs                379852       0    379852   0% /dev</span><br><span class="line">tmpfs                   399816       0    399816   0% /dev/shm</span><br><span class="line">tmpfs                   399816    5688    394128   2% /run</span><br><span class="line">tmpfs                   399816       0    399816   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/cl-root   17811456 1615988  16195468  10% /</span><br><span class="line">/dev/sda1              1038336  196688    841648  19% /boot</span><br><span class="line">/dev/sr0               9046654 9046654         0 100% /media</span><br><span class="line">tmpfs                    79960       0     79960   0% /run/user/0</span><br><span class="line">192.168.10.222:/home  17811456 1644672  16166784  10% /home</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><h4 id="添加开机自动挂载主服务home目录。"><a href="#添加开机自动挂载主服务home目录。" class="headerlink" title="添加开机自动挂载主服务home目录。"></a>添加开机自动挂载主服务home目录。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/fstab</span><br><span class="line">192.168.10.222:/home    /home                   nfs     defaults        0 0</span><br><span class="line">[root@localhost ~]# mount -a </span><br><span class="line">[root@localhost ~]# df</span><br><span class="line">Filesystem           1K-blocks    Used Available Use% Mounted on</span><br><span class="line">devtmpfs                379852       0    379852   0% /dev</span><br><span class="line">tmpfs                   399816       0    399816   0% /dev/shm</span><br><span class="line">tmpfs                   399816    5688    394128   2% /run</span><br><span class="line">tmpfs                   399816       0    399816   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/cl-root   17811456 1613680  16197776  10% /</span><br><span class="line">/dev/sda1              1038336  196688    841648  19% /boot</span><br><span class="line">/dev/sr0               9046654 9046654         0 100% /media</span><br><span class="line">192.168.10.222:/home  17811456 1644544  16166912  10% /home</span><br><span class="line">tmpfs                    79960       0     79960   0% /run/user/0</span><br><span class="line">[root@localhost ~]# </span><br></pre></td></tr></table></figure><h4 id="到这nis配置完成。"><a href="#到这nis配置完成。" class="headerlink" title="到这nis配置完成。"></a>到这nis配置完成。</h4>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kerberos</title>
      <link href="/2022/05/30/kerberos/"/>
      <url>/2022/05/30/kerberos/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="Kerberos-工作原理的基础知识"><a href="#Kerberos-工作原理的基础知识" class="headerlink" title="Kerberos 工作原理的基础知识"></a>Kerberos 工作原理的基础知识</h3><p>Kerberos 使用对称加密和受信任的第三方（<em>密钥分发中心</em>或 KDC）对一组网络服务的用户进行身份验证，而不是像使用简单的密码身份验证那样单独对每个用户进行身份验证。由该 KDC 管理的计算机和任何辅助 KDC 构成一个<em>领域</em>。</p><p>当用户向 KDC 进行身份验证时，KDC 会将一组特定于该会话的<strong>凭据</strong>（<em>票证</em>）发送回用户的计算机，并且任何支持 Kerberos 的服务都会在<strong>用户的计算机</strong>上查找票证，而不是要求用户进行身份验证使用密码。</p><p>如图<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system-level_authentication_guide/Using_Kerberos#fig.kerberos-process">11.1 “Kerberos 身份验证”</a>所示，<strong>每个用户</strong>都被 KDC 识别为具有唯一身份，称为<strong>主体</strong>。当 Kerberos 感知网络上的用户登录到他的工作站时，他的主体将作为来自<strong>身份验证服务器的授权票证</strong>（或 TGT）请求的一部分发送到 KDC 。该请求可以由登录程序发送，对用户透明，也可以<strong>kinit</strong>在用户登录后由用户通过程序手动发送。</p><p>KDC 然后检查其数据库中的<strong>主体</strong>。如果找到<strong>主体</strong>，KDC 会创建一个 TGT，使用用户的密钥对其进行<strong>加密</strong>，然后将 TGT 发送给该用户。</p><p><img src="https://access.redhat.com/webassets/avalon/d/Red_Hat_Enterprise_Linux-7-System-Level_Authentication_Guide-en-US/images/cdb399930e73d56dc025bdeb4d35f745/kerberos.png" alt="Kerberos 身份验证"></p><p><strong>Kerberos 身份验证</strong></p><p>客户端上的登录或<code>kinit</code>程序使用用户密钥解密 TGT，该密钥是根据用户密码计算得出的。</p><p>用户的密钥仅在客户端机器上使用，<strong>不通过网络传输</strong>。KDC 发送的票证（或凭据）存储在本地存储中，即*<strong>凭据缓存</strong> (ccache)*中，可以通过 Kerberos 感知服务进行检查。</p><h3 id="Kerberos单点登录："><a href="#Kerberos单点登录：" class="headerlink" title="Kerberos单点登录："></a>Kerberos单点登录：</h3><p>原理图：</p><p><img src="/2022/05/30/kerberos/1.png" alt="截图"></p><blockquote><p>Kerberos提供了一个集中式的认证服务器结构，认证服务器的功能式实现用户与其访问的服务器间的相互鉴别。（采用的是对称密钥加密技术）</p></blockquote><ul><li>AS：认证服务器AS（authenticator server）</li><li>TGS：票据许可服务器TGS（ticket granting server）</li><li>Client：客户端</li><li>Server：服务器</li></ul><h4 id="Kerberos凭证"><a href="#Kerberos凭证" class="headerlink" title="Kerberos凭证"></a>Kerberos凭证</h4><h5 id="票据（ticket）："><a href="#票据（ticket）：" class="headerlink" title="票据（ticket）："></a>票据（ticket）：</h5><p>ticket用来安全的在认证服务器和用户请求的服务器之间传递用户的身份，同时也传递附加信息。用来保证使用ticket的用户必须是ticket中指定用户。ticket一旦生产，在生存时间指定的时间内可以被client多次使用，并申请同一个server服务。</p><h5 id="鉴别码（authenticator）："><a href="#鉴别码（authenticator）：" class="headerlink" title="鉴别码（authenticator）："></a>鉴别码（authenticator）：</h5><p>提供信息与ticket中的信息进行比较，一起保证发出ticket的用户信息就是ticket中指定的用户。authenticator只能在一次服务请求中使用，每当client向server申请服务时，必须重新生成authenticator</p><h4 id="Kerberos票据："><a href="#Kerberos票据：" class="headerlink" title="Kerberos票据："></a>Kerberos票据：</h4><p>两种票据：</p><h5 id="服务许可票据（server-granting-ticket）："><a href="#服务许可票据（server-granting-ticket）：" class="headerlink" title="服务许可票据（server granting ticket）："></a>服务许可票据（server granting ticket）：</h5><p>是客户端请求服务时需要提供的票据</p><p>用ticket-A表示访问应用服务器X的票据，通过TGS发放</p><h5 id="票据许可票据（ticket-granting-ticket）："><a href="#票据许可票据（ticket-granting-ticket）：" class="headerlink" title="票据许可票据（ticket granting ticket）："></a>票据许可票据（ticket granting ticket）：</h5><p>客户端访问TGS服务器需要提供的票据，目的是为了申请某一个应用服务器（如nfs，ftp，nis，pcs等）的“服务许可票据”</p><p>票据由AS发放 用ticket-B表示访问TGS服务器票据 ticket-B在用户登录时向AS申请一次，可以多次重复使用</p><h4 id="Kerberos域（realm）"><a href="#Kerberos域（realm）" class="headerlink" title="Kerberos域（realm）"></a>Kerberos域（realm）</h4><p>构成：一个完整的Kerberos环境包含一个Kerberos服务器，一组工作站和一组应用服务器</p><p>Kerberos服务器数据库中拥有所有参与用户的UID和口令列表</p><p>Kerberos服务器必须与每一个服务器之间共享一个保密密钥（keytab文件）</p><p>所有用户均在Kerberos服务器上注册</p><p>所有服务器均在Kerberos服务器上注册</p><p>领域划分是根据网络的管理边界来划分（网段）</p><h4 id="服务端配置kerberos-NFS"><a href="#服务端配置kerberos-NFS" class="headerlink" title="服务端配置kerberos+NFS"></a>服务端配置kerberos+NFS</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装时间同步 kdc服务端 nfs服务端 </span></span><br><span class="line">yum install krb5-server krb5-libs nfs-utils -y</span><br><span class="line"><span class="comment">#设置hosts</span></span><br><span class="line">10.10.70.101 kdc.skills.com</span><br><span class="line">10.10.70.102 client.skills.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改kdc配置文件</span></span><br><span class="line"><span class="comment">#/etc/krb5.conf</span></span><br><span class="line"><span class="comment"># To opt out of the system crypto-policies configuration of krb5, remove the</span></span><br><span class="line"><span class="comment"># symlink at /etc/krb5.conf.d/crypto-policies which will not be recreated.</span></span><br><span class="line">includedir /etc/krb5.conf.d/</span><br><span class="line"></span><br><span class="line">[logging]</span><br><span class="line">    default = FILE:/var/log/krb5libs.<span class="built_in">log</span></span><br><span class="line">    kdc = FILE:/var/log/krb5kdc.<span class="built_in">log</span></span><br><span class="line">    admin_server = FILE:/var/log/kadmind.log</span><br><span class="line"></span><br><span class="line">[libdefaults]</span><br><span class="line">    dns_lookup_realm = <span class="literal">false</span></span><br><span class="line">    ticket_lifetime = 24h</span><br><span class="line">    renew_lifetime = 7d</span><br><span class="line">    forwardable = <span class="literal">true</span></span><br><span class="line">    rdns = <span class="literal">false</span></span><br><span class="line">    default_realm = SKILLS.COM</span><br><span class="line"></span><br><span class="line">[realms]</span><br><span class="line"> SKILLS.COM = &#123;</span><br><span class="line">     kdc = kdc.skills.com</span><br><span class="line">     admin_server = kdc.skills.com</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line">[domain_realm]</span><br><span class="line"> .skills.com = SKILLS.COM</span><br><span class="line"> skills.com = SKILLS.COM</span><br><span class="line"></span><br><span class="line"><span class="comment">#/var/kerberos/krb5kdc</span></span><br><span class="line"><span class="comment"># kadm5.acl</span></span><br><span class="line">*/admin@SKILLS.COM      *</span><br><span class="line"><span class="comment"># kdc.conf</span></span><br><span class="line">[kdcdefaults]</span><br><span class="line">    kdc_ports = 88</span><br><span class="line">    kdc_tcp_ports = 88</span><br><span class="line">    spake_preauth_kdc_challenge = edwards25519</span><br><span class="line"></span><br><span class="line">[realms]</span><br><span class="line">SKILLS.COM = &#123;</span><br><span class="line">     <span class="comment">#master_key_type = aes256-cts</span></span><br><span class="line">     acl_file = /var/kerberos/krb5kdc/kadm5.acl</span><br><span class="line">     dict_file = /usr/share/dict/words</span><br><span class="line">     admin_keytab = /var/kerberos/krb5kdc/kadm5.keytab</span><br><span class="line">     supported_enctypes = aes256-cts:normal aes128-cts:normal arcfour-hmac:normal camellia256-cts:normal camellia128-cts:normal</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#初始化kdc数据库</span></span><br><span class="line">kdb5_util create -s</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入kdc数据库</span></span><br><span class="line">kadmin.local </span><br><span class="line">Authenticating as principal nfs/admin@SKILLS.COM with password.</span><br><span class="line"><span class="comment">#创建kdc本机凭据</span></span><br><span class="line">kadmin.local:  addprinc -randkey nfs/kdc.skills.com</span><br><span class="line"><span class="comment">#创建客户端凭据</span></span><br><span class="line">kadmin.local:  addprinc -randkey nfs/client.skills.com</span><br><span class="line"><span class="comment">#导出凭据</span></span><br><span class="line"><span class="comment">#第一个直导出到本地</span></span><br><span class="line">ktadd -kt /etc/krb5.keytab nfs/kdc.skills.com</span><br><span class="line"><span class="comment">#第二个先导出到本地tmp下，再导出到另一台服务器</span></span><br><span class="line">ktadd -kt /tmp/client nfs/client.skills.com</span><br><span class="line"><span class="comment">#把客户端凭据传给客户端</span></span><br><span class="line">scp /tmp/client client.skills.com:/etc/krb5.keytab</span><br><span class="line"><span class="comment">#把kdc主配置文件传送给客户端</span></span><br><span class="line">scp /etc/krb5.conf client.skills.com:/etc/krb5.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置nfs /etc/exports</span></span><br><span class="line">/mnt *(rw,sec=krb5p)</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改hosts文件</span></span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">10.10.70.101 kdc.skills.com</span><br><span class="line">10.10.70.102 client.skills.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#把hosts穿给客户端服务器</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#把 kadmin.service krb5kdc.service nfs-server.service 服务启动</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装凭据</span></span><br><span class="line">kinit -kt /etc/krb5.keytab </span><br></pre></td></tr></table></figure><h4 id="客户端配置："><a href="#客户端配置：" class="headerlink" title="客户端配置："></a>客户端配置：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#配置/etc/chrony.conf</span></span><br><span class="line">server 10.10.70.101 iburst</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装kdc工作站 nfs </span></span><br><span class="line">yum install krb5-workstation.x86_64  krb5-libs nfs-utils -y</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装凭据</span></span><br><span class="line">kinit -kt /etc/krb5.keytab </span><br><span class="line"></span><br><span class="line"><span class="comment">#挂载</span></span><br><span class="line">mount kdc.skills.com:/mnt /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看挂载</span></span><br><span class="line">mount | grep krb5p</span><br><span class="line">kdc.skills.com:/mnt on /mnt <span class="built_in">type</span> nfs4 (rw,relatime,vers=4.2,rsize=131072,wsize=131072,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=krb5p,clientaddr=10.10.70.102,local_lock=none,addr=10.10.70.101)</span><br></pre></td></tr></table></figure><blockquote><p>kerberos nfs 挂载不上的原因有</p></blockquote><ol><li><p>使用IP和域名简写挂载</p><p>例如主机名为 client1.skills.com ip地址为 10.10.70.102 的实例，挂载时用的是client1或是 10.10.70.102 进行挂载，结果导致挂载失败，没有用主机的完全域名就无法进行挂载。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win打印机</title>
      <link href="/2022/05/30/%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
      <url>/2022/05/30/%E6%89%93%E5%8D%B0%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h5 id="添加一台虚拟打印机，名称为”HP-Print”-，将“HP-Print”发布到AD域"><a href="#添加一台虚拟打印机，名称为”HP-Print”-，将“HP-Print”发布到AD域" class="headerlink" title="添加一台虚拟打印机，名称为”HP-Print” ，将“HP-Print”发布到AD域"></a>添加一台虚拟打印机，名称为”HP-Print” ，将“HP-Print”发布到AD域</h5><p>客户端访问<strong>网络打印服务器</strong>，能够通过访问**”<a href="http://print.skills.com&quot;**查看打印机,证书由windows-1进行颁发/">http://print.skills.com&quot;**查看打印机，证书由windows-1进行颁发</a></p><p><img src="/2022/05/30/%E6%89%93%E5%8D%B0%E6%9C%BA/1.png" alt="截图"></p><h5 id="配置物理路径为C-Windows-web-printers"><a href="#配置物理路径为C-Windows-web-printers" class="headerlink" title="配置物理路径为C:\Windows\web\printers"></a>配置物理路径为C:\Windows\web\printers</h5><p><img src="/2022/05/30/%E6%89%93%E5%8D%B0%E6%9C%BA/2.png" alt="截图"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Samba服务</title>
      <link href="/2022/05/29/samba%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/05/29/samba%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">主要配置文件：</span><br><span class="line">/etc/samba/smb.conf</span><br><span class="line">配置：</span><br><span class="line">[global]    <span class="comment"># 全局配置</span></span><br><span class="line">        workgroup = SAMBA    <span class="comment"># 工作组的名称，注意主机群要相同。</span></span><br><span class="line">        security = user    <span class="comment"># 定义（安全级别）数据共享方式（user、share、server、domain）</span></span><br><span class="line">        <span class="comment">#user:使用SAMBA本身的密码数据库，密码数据库和下面的smb passwd file有关</span></span><br><span class="line">        <span class="comment">#share:分享的数据不需要密码即可分享</span></span><br><span class="line">        <span class="comment">#Server和domain：使用外部主机的密码，SAMBA是客户端之意</span></span><br><span class="line"><span class="comment">#        如果设置这个项目，还要提供password Server=IP的设置值</span></span><br><span class="line">        printing = cups</span><br><span class="line">        printcap name = cups</span><br><span class="line">        cups options = raw  <span class="comment"># 设置打印机使用的方式</span></span><br><span class="line">        netbios name = zkserver   <span class="comment">#用于在 Windows 网上邻居上显示的主机名，跟hostname不是一个概念</span></span><br><span class="line"><span class="comment">#           在同一个组中，netbios name必须唯一</span></span><br><span class="line">        serverstring = <span class="built_in">test</span>   <span class="comment">#查看共享时的提示符，内容无关紧要</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#与登录文件有关的设置</span></span><br><span class="line">        <span class="built_in">log</span> file = /var/log/samba/log.%m    <span class="comment">#日志文件的存储文件名，每个访问的主机会产生独立的日志文件，</span></span><br><span class="line"><span class="comment">#         %m代表的是client端Internet主机名，就是hostname</span></span><br><span class="line">        max <span class="built_in">log</span> size = 50   <span class="comment">#日志文件最大的大小为50Kb</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#与密码相关的设置</span></span><br><span class="line">        security = share       <span class="comment">#表示不需要密码，可设置的值为share、user和server</span></span><br><span class="line">        passdb backend = tdbsam<span class="comment">#passdb backend就是用户后台的意思。</span></span><br><span class="line"><span class="comment">#目前有三种后台：smbpasswd、tdbsam和ldapsam。</span></span><br><span class="line"><span class="comment">#        Samba 用户的存储方式，smbpasswd 表示明文存储，tdbsam 表示密文存储</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#打印机加载方式</span></span><br><span class="line">        load printer = no <span class="comment">#不加载打印机</span></span><br><span class="line">        load printers = <span class="built_in">yes</span>  <span class="comment">#加载打印机（默认）</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">        hosts allow = 127. 192.168.12. 192.168.13. EXCEPT 192.168.13.13       </span><br><span class="line">        <span class="comment"># 指定允许访问 samba 服务器的主机 </span></span><br><span class="line">        deadtime = 10         <span class="comment"># 客户端在10分钟内没有打开任何 Samba 资源，服务器将自动关闭会话</span></span><br><span class="line">        display charset = UTF8      <span class="comment"># 设置显示的字符集</span></span><br><span class="line">        max connections = 0         <span class="comment"># 设置最大连接数，0表示无限制，如果超过最大连接数则拒绝连接</span></span><br><span class="line">        </span><br><span class="line">        guest account = nobody      <span class="comment"># 设置匿名账户为nobody</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">[homes]</span><br><span class="line">        comment = Home Directories</span><br><span class="line">        valid <span class="built_in">users</span> = %S, %D%w%S</span><br><span class="line">        browseable = No</span><br><span class="line">        <span class="built_in">read</span> only = No</span><br><span class="line">        inherit acls = Yes</span><br><span class="line"></span><br><span class="line">[printers]</span><br><span class="line">        comment = All Printers</span><br><span class="line">        path = /var/tmp    <span class="comment"># 共享目录</span></span><br><span class="line">        printable = Yes</span><br><span class="line">        create mask = 0600</span><br><span class="line">        browseable = <span class="built_in">yes</span><span class="comment">#可以被所有用户浏览到资源名称</span></span><br><span class="line"></span><br><span class="line">[<span class="built_in">print</span>$]<span class="comment">#[分享目录]</span></span><br><span class="line">        comment = Printer Drivers<span class="comment">#这个目录的说明</span></span><br><span class="line">        path = /var/lib/samba/drivers<span class="comment">#实际的共享目录</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#[文件访问权限]</span></span><br><span class="line">        <span class="built_in">read</span> only = <span class="built_in">yes</span><span class="comment">#是否允许只读</span></span><br><span class="line">        public= <span class="built_in">yes</span><span class="comment">#设置是否让所有可以登录的用户看到这个项目</span></span><br><span class="line">        writable= <span class="built_in">yes</span><span class="comment">#设置是否可以写入</span></span><br><span class="line">        guest ok  = <span class="built_in">yes</span><span class="comment">#可以让用户随意登录</span></span><br><span class="line">        available = <span class="built_in">yes</span>/no<span class="comment">#available用来指定该共享资源是否可用</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#[用户访问的权限]</span></span><br><span class="line">        admin <span class="built_in">users</span> = 该共享的管理者<span class="comment">#用来指定该共享的管理员（对该共享具有完全控制权限）。</span></span><br><span class="line">        <span class="comment">#在samba 3.0中，如果用户验证方式设置成“security=share”时，此项无效。</span></span><br><span class="line">        valid <span class="built_in">users</span> =用户    <span class="comment">#用来指定允许访问该共享资源的用户</span></span><br><span class="line">        invalid <span class="built_in">users</span> = 用户   <span class="comment">#用来指定不允许访问该共享资源的用户</span></span><br><span class="line">        write <span class="built_in">users</span> = 用户  <span class="comment">#用来指定可以在该共享下写入文件的用户</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">#[用户组访问的权限]</span></span><br><span class="line">        write list = @printadmin root<span class="comment">#只允许用户printadmin和root可以访问</span></span><br><span class="line">        force group = @printadmin<span class="comment">#只允许printadmin组访问</span></span><br><span class="line">        create mask = 0664<span class="comment">#客户端上传文件的默认权限为664</span></span><br><span class="line">        directory mask = 0775<span class="comment">#客户端创建目录的默认权限为775</span></span><br></pre></td></tr></table></figure><h3 id="简化设置：变量"><a href="#简化设置：变量" class="headerlink" title="简化设置：变量"></a>简化设置：变量</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[home]</span><br><span class="line">vaild <span class="built_in">users</span>=%S<span class="comment">## 因为valid users是允许的登录者，设置%S表示任何可登录的用户都能够登录，%S会自动替换&quot;[]&quot;里的内容</span></span><br><span class="line">...</span><br><span class="line">%S:取代目前的设置项目值，所谓的”设置项目值“就是在”[共享]”里面的内容。</span><br><span class="line">%m:代表Client端的NetBIOS主机名称</span><br><span class="line">%M:代表Client端的Internet主机名称，即Host Name.</span><br><span class="line">%L:代表SAMBA主机的NetBIOS主机名称</span><br><span class="line">%H:代表用户的默认目录。</span><br><span class="line">%g:代表登录的用户的群组名称</span><br><span class="line">%h:代表目前这台SAMBA主机的Host Name.</span><br><span class="line">%I:代表Client的IP</span><br><span class="line">%T:代表目前的日期和时间</span><br></pre></td></tr></table></figure><h3 id="没用密码的smb-conf设置"><a href="#没用密码的smb-conf设置" class="headerlink" title="没用密码的smb.conf设置"></a>没用密码的smb.conf设置</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[temp]</span><br><span class="line">comment=Test</span><br><span class="line">path=/tmp</span><br><span class="line"><span class="built_in">read</span> only=no</span><br><span class="line">public=<span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h5 id="使用testparm命令来查询语法是否正确"><a href="#使用testparm命令来查询语法是否正确" class="headerlink" title="使用testparm命令来查询语法是否正确"></a>使用<strong>testparm</strong>命令来查询语法是否正确</h5><h3 id="samba的端口有：139-x2F-tcp445-x2F-tcp138-x2F-udp137-x2F-udp"><a href="#samba的端口有：139-x2F-tcp445-x2F-tcp138-x2F-udp137-x2F-udp" class="headerlink" title="samba的端口有：139&#x2F;tcp445&#x2F;tcp138&#x2F;udp137&#x2F;udp"></a>samba的端口有：139&#x2F;tcp445&#x2F;tcp138&#x2F;udp137&#x2F;udp</h3><h5 id="更改端口："><a href="#更改端口：" class="headerlink" title="更改端口："></a>更改端口：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/samba/smb.conf</span><br><span class="line">smb ports=139</span><br></pre></td></tr></table></figure><h5 id="smbClient"><a href="#smbClient" class="headerlink" title="smbClient"></a>smbClient</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-L  仅查询后面接的主机所共享的目录资源</span><br><span class="line"></span><br><span class="line">-U通过后面接的账号来尝试取得该主机的使用资源</span><br></pre></td></tr></table></figure><h5 id="一些配置："><a href="#一些配置：" class="headerlink" title="一些配置："></a>一些配置：</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public = yes</span><br><span class="line">writable = yes</span><br><span class="line">#一起用就是所有账号能够访问对方，但不能够编辑或者删除对方建立的文件</span><br></pre></td></tr></table></figure><p><strong>在&#x2F;etc&#x2F;samba&#x2F;smb.conf文件中引用子配置文件。在引用子配置文件时有二种方法：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1）第一种方法：config file</span><br><span class="line">在[global]标签下加入如下参数(/etc/samba/smb.conf)：</span><br><span class="line">[global]  </span><br><span class="line">config file= /etc/samba/%U.smb.conf</span><br><span class="line"></span><br><span class="line">2）第二种方法：include</span><br><span class="line">在[global]标签下加入如下参数(/etc/samba/smb.conf)：</span><br><span class="line">[global]  </span><br><span class="line">include = /etc/samba/%U.smb.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">config file和include的区别是：</span><br><span class="line"><span class="comment">#使用config file时，当以kevin的身份访问Samba服务器，只能看到kevin，其他在smb.conf中定义的共享资源都无法看到。</span></span><br><span class="line"><span class="comment">#使用include时，当以kevin的身份访问Samba服务器，除了可以看到kevin，其他在smb.conf中定义的共享资源也可以看到；</span></span><br></pre></td></tr></table></figure><h5 id="security-x3D-share报错"><a href="#security-x3D-share报错" class="headerlink" title="security &#x3D; share报错"></a>security &#x3D; share报错</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">搜索后发现, 目前&quot;**security = share**&quot;参数已被弃用, 取而代之的是</span><br><span class="line"></span><br><span class="line">security = user map to guest = Bad User</span><br><span class="line"></span><br><span class="line">SAMBA4版本同时也弃用&quot;security = server&quot;参数</span><br></pre></td></tr></table></figure><h5 id="smbpasswd：Failed-to-find-entry-for-user-user101"><a href="#smbpasswd：Failed-to-find-entry-for-user-user101" class="headerlink" title="smbpasswd：Failed to find entry for user user101."></a>smbpasswd：Failed to find entry for user user101.</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">使用smbpasswd -a user101即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滚动升级Win</title>
      <link href="/2022/05/28/%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7Win/"/>
      <url>/2022/05/28/%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7Win/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="滚动升级，就是把ws2012升级到2016-或者2016升级到2019的域"><a href="#滚动升级，就是把ws2012升级到2016-或者2016升级到2019的域" class="headerlink" title="滚动升级，就是把ws2012升级到2016 或者2016升级到2019的域"></a>滚动升级，就是把ws2012升级到2016 或者2016升级到2019的域</h3><h5 id="迁移域，配置直接命令"><a href="#迁移域，配置直接命令" class="headerlink" title="迁移域，配置直接命令"></a>迁移域，配置直接命令</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在cmd里面输入regsvr32 schmmgmt.dll，如图，这是转移主域控制器的准备</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7Win/1.png" alt="截图"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">接着输入命令：ntdsutil 回车后：在输入roles，回车后，在接着输入connections</span><br><span class="line">再输入connect to domain aaa.com  后输入quit 如图，此图显示就是表示已经连接到了这个AD域里面了，（windows server 2016 r2）</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7Win/2.png" alt="截图"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SchemaMaster,DomainNamingMaster,PDCEmulator,RIDMaster,InfrastructureMaster</span><br><span class="line"></span><br><span class="line">此后，开始搬迁主域，主要搬迁5个角色：，</span><br><span class="line"></span><br><span class="line">第一个搬迁的  seize infrastructure master</span><br><span class="line"></span><br><span class="line">第二个角色：架构主机角色:schema master，完整的命令：seize schema master 如图按下“是”,执行</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7Win/3.png" alt="截图"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第三个搬迁是：域命名主机角色；naming master，完整的命令：seize naming master</span><br><span class="line"></span><br><span class="line">第四个搬迁是：RID主机角色，完整的命令：seize RID master</span><br><span class="line"></span><br><span class="line">第五个搬迁是：PDC主机角色，完整命令：seize PDC</span><br><span class="line"></span><br><span class="line">搬迁完后，输入两次quit退出后，验证一下：netdom query fsmo   ;Netdom query PDC,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2012升级配置，在降级完成后，从域中把计算机删除，再去升级"><a href="#2012升级配置，在降级完成后，从域中把计算机删除，再去升级" class="headerlink" title="2012升级配置，在降级完成后，从域中把计算机删除，再去升级"></a>2012升级配置，在降级完成后，从域中把计算机删除，再去升级</h5><p><img src="/2022/05/28/%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7Win/4.png" alt="截图"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS for Win</title>
      <link href="/2022/05/28/DNS-for-Win/"/>
      <url>/2022/05/28/DNS-for-Win/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2022/05/28/DNS-for-Win/1.png" alt="截图"></p><h4 id="对PC1的cm-cc区域中的test主机记录提供完整性验证，来确保数据在传输的过程中不被篡改"><a href="#对PC1的cm-cc区域中的test主机记录提供完整性验证，来确保数据在传输的过程中不被篡改" class="headerlink" title="对PC1的cm.cc区域中的test主机记录提供完整性验证，来确保数据在传输的过程中不被篡改"></a>对PC1的cm.cc区域中的test主机记录提供完整性验证，来确保数据在传输的过程中不被篡改</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方法：右键cm.cc框&gt;DNSSEC&gt;对区域进行签名</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/DNS-for-Win/2.png" alt="截图"></p><p>这里还有一点要注意，签名好以后</p><p>dns服务器会在<strong>C:\Windows\System32\Dns</strong>下有一个文件，这个文件要做<strong>dns转发器</strong>导入用</p><p>所以system32下的dns目录要<strong>共享</strong></p><p><img src="/2022/05/28/DNS-for-Win/3.png" alt="截图"></p><h4 id="在PC2上设置转发器为PC1的服务器，负责转发PC3的域名解析的查询请求"><a href="#在PC2上设置转发器为PC1的服务器，负责转发PC3的域名解析的查询请求" class="headerlink" title="在PC2上设置转发器为PC1的服务器，负责转发PC3的域名解析的查询请求"></a>在PC2上设置转发器为PC1的服务器，负责转发PC3的域名解析的查询请求</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方法：右键DNS2选框，点击高级，进入下面界面设置DNS转发器</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/DNS-for-Win/4.png" alt="截图"></p><h4 id="在PC2上导入skillschina-com区域的DNSKEY签名，来保证数据来自正确的名称服务器"><a href="#在PC2上导入skillschina-com区域的DNSKEY签名，来保证数据来自正确的名称服务器" class="headerlink" title="在PC2上导入skillschina.com区域的DNSKEY签名，来保证数据来自正确的名称服务器"></a>在PC2上导入skillschina.com区域的DNSKEY签名，来保证数据来自正确的名称服务器</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方法：右键信任点&gt;导入DNSKEY</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/DNS-for-Win/5.png" alt="截图"></p><h5 id="使用PowerShell禁用DNS递归功能"><a href="#使用PowerShell禁用DNS递归功能" class="headerlink" title="使用PowerShell禁用DNS递归功能"></a>使用PowerShell禁用DNS递归功能</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">我们可以使用以下命令禁用DNS递归。</span><br><span class="line">dnscmd &lt;ServerName&gt; /Config /NoRecursion &#123;1|0&#125;</span><br><span class="line">如您的DNS服务器名称为DNSserver, IP 地址为192.168.2.51，可以参考以下命令。</span><br><span class="line">dnscmd 192.16.2.51 /Config /NoRecursion 1</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/DNS-for-Win/6.png" alt="截图"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows实现raid10</title>
      <link href="/2022/05/28/Windows%E5%AE%9E%E7%8E%B0raid10/"/>
      <url>/2022/05/28/Windows%E5%AE%9E%E7%8E%B0raid10/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>raid10 是由<strong>四块磁盘</strong>组成的磁盘整列，其原理就是四块磁盘，两个为一组组成<strong>raid1</strong>（带区卷）,另外一组作为第一组的镜像</p><p>由于windows 设计的原因,在windows server 的磁盘管理中并没有raid10 的选项</p><p>其实windows server中有提供储存池，和虚拟磁盘的磁盘管理方式</p><p>我们可以将两块磁盘添加到<strong>一个储存池</strong>中，另外两个磁盘也组为<strong>一个储存池</strong></p><p>然后在储存池的基础上新建带有<strong>raid0模式</strong>（带区卷）的虚拟磁盘，就完成了两个raid0磁盘的建设</p><p>最后在windows磁盘管理中将两块虚拟磁盘设置为<strong>镜像盘</strong>即可</p><p><strong>磁盘要支持scsi形式,不然iscsi不能用</strong></p><p>下面进行演示：新建两个储蓄池</p><p><img src="/2022/05/28/Windows%E5%AE%9E%E7%8E%B0raid10/1.png" alt="题目"></p><p>再把两个磁盘变成镜像卷</p><p><img src="/2022/05/28/Windows%E5%AE%9E%E7%8E%B0raid10/2.png" alt="题目"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DFS更改端口</title>
      <link href="/2022/05/28/DFS%E6%9B%B4%E6%94%B9%E7%AB%AF%E5%8F%A3/"/>
      <url>/2022/05/28/DFS%E6%9B%B4%E6%94%B9%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="配置-Windows-3-的-DFS-IPv4-使用-34567-端口；限制所有服务的IPv4-动态-RPC-端口从-8000-开始，共-1000-个端口号"><a href="#配置-Windows-3-的-DFS-IPv4-使用-34567-端口；限制所有服务的IPv4-动态-RPC-端口从-8000-开始，共-1000-个端口号" class="headerlink" title="配置 Windows-3 的 DFS IPv4 使用 34567 端口；限制所有服务的IPv4 动态 RPC 端口从 8000 开始，共 1000 个端口号"></a>配置 Windows-3 的 DFS IPv4 使用 34567 端口；限制所有服务的IPv4 动态 RPC 端口从 8000 开始，共 1000 个端口号</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dfsrdiag staticRPC /port:34567</span><br><span class="line">DFSRDIAGStaticRPC /Port:34567</span><br></pre></td></tr></table></figure><h3 id="如果无法执行此程序，先安装DFS管理工具"><a href="#如果无法执行此程序，先安装DFS管理工具" class="headerlink" title="如果无法执行此程序，先安装DFS管理工具"></a>如果无法执行此程序，先安装DFS管理工具</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Set-DfsrServiceConfiguration -RPCPort 34567</span><br></pre></td></tr></table></figure><h5 id="也能达到要求"><a href="#也能达到要求" class="headerlink" title="也能达到要求"></a>也能达到要求</h5><h3 id="查看当前动态RPC端口范围："><a href="#查看当前动态RPC端口范围：" class="headerlink" title="查看当前动态RPC端口范围："></a>查看当前动态RPC端口范围：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netsh int ipv4 show dynamicport tcp</span><br><span class="line"></span><br><span class="line">netsh int ipv4 show dynamicport udp</span><br></pre></td></tr></table></figure><h5 id="ipv4可以改为ipv6"><a href="#ipv4可以改为ipv6" class="headerlink" title="ipv4可以改为ipv6"></a>ipv4可以改为ipv6</h5><h3 id="限制动态RPC端口的使用范围："><a href="#限制动态RPC端口的使用范围：" class="headerlink" title="限制动态RPC端口的使用范围："></a>限制动态RPC端口的使用范围：</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netsh int ipv4 set dynamicport tcp start = 8000 num = 1000</span><br><span class="line"></span><br><span class="line">netsh int ipv4 set dynamicport udp start = 8000 num = 1000</span><br></pre></td></tr></table></figure><h5 id="重新启动DFS服务就行"><a href="#重新启动DFS服务就行" class="headerlink" title="重新启动DFS服务就行"></a>重新启动DFS服务就行</h5><p><img src="/2022/05/28/DFS%E6%9B%B4%E6%94%B9%E7%AB%AF%E5%8F%A3/%E6%88%AA%E5%9B%BE.png" alt="截图"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>批量创建用户(命令)</title>
      <link href="/2022/05/28/%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7/"/>
      <url>/2022/05/28/%E6%89%B9%E9%87%8F%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for /l %i  in (1,1,50) do net user  test%i  123456  /add</span><br><span class="line"></span><br><span class="line">for /l %i    in (1,1,50)  do  net user test%i   /del</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for /l %i---- %i为变量</span><br><span class="line"></span><br><span class="line">in (1,1,50)----(1 从1开始，1 每次加上一, 50 到50结束）</span><br><span class="line"></span><br><span class="line">do</span><br><span class="line"></span><br><span class="line">net user test%i 123456 /add</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux:"></a>Linux:</h3><h5 id="vim-bash-sh"><a href="#vim-bash-sh" class="headerlink" title="vim bash.sh"></a>vim bash.sh</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/bin/bash</span></span><br><span class="line">for i in &#123;101..120&#125;</span><br><span class="line">do</span><br><span class="line">useradd user$i </span><br><span class="line">echo user$i:1 | chpasswd</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自签名证书</title>
      <link href="/2022/05/16/%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/"/>
      <url>/2022/05/16/%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="centos7一键生成方式"><a href="#centos7一键生成方式" class="headerlink" title="centos7一键生成方式"></a>centos7一键生成方式</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入该目录 执行make命令一键生出带密码的公钥和私钥 </span></span><br><span class="line">/etc/pki/tls/certs </span><br><span class="line">make ca.crt </span><br><span class="line"><span class="built_in">umask</span> 77 ; \ </span><br><span class="line">/usr/bin/openssl genrsa -aes128 2048 &gt; ca.key </span><br><span class="line">Generating RSA private key, 2048 bit long modulus </span><br><span class="line">...+++ </span><br><span class="line">.........+++ </span><br><span class="line">e is 65537 (0x10001) </span><br><span class="line">Enter pass phrase: </span><br><span class="line"><span class="comment">#密码 </span></span><br><span class="line">Verifying - Enter pass phrase: </span><br><span class="line"></span><br><span class="line"><span class="comment">#密码 </span></span><br><span class="line"><span class="built_in">umask</span> 77 ; \ </span><br><span class="line">/usr/bin/openssl req -utf8 -new -key ca.key -x509 -days 365 -out ca.crt </span><br><span class="line">Enter pass phrase <span class="keyword">for</span> ca.key: </span><br><span class="line"></span><br><span class="line"><span class="comment">#密码 </span></span><br><span class="line">You are about to be asked to enter information that will be incorporated </span><br><span class="line">into your certificate request. </span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN. </span><br><span class="line">There are quite a few fields but you can leave some blank </span><br><span class="line">For some fields there will be a default value, </span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank. </span><br><span class="line">\----- </span><br><span class="line">Country Name (2 letter code) [XX]:CN </span><br><span class="line">State or Province Name (full name) []:Henan </span><br><span class="line">Locality Name (eg, city) [Default City]:Zhengzhou </span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:skills </span><br><span class="line">Organizational Unit Name (eg, section) []:skills </span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:www.test.com </span></span><br><span class="line"><span class="string">Email Address []: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#取消私钥密码 </span></span><br><span class="line"><span class="string">openssl rsa -in ca.key -out ca.key1 </span></span><br><span class="line"><span class="string">Enter pass phrase for ca.key: </span></span><br><span class="line"><span class="string">writing RSA key </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#查看证书信息 </span></span><br><span class="line"><span class="string">openssl x509 -in ca.crt -noout -text </span></span><br><span class="line"><span class="string">Certificate: </span></span><br><span class="line"><span class="string">Data:</span></span><br><span class="line"><span class="string">Version: 3 (0x2) </span></span><br><span class="line"><span class="string">Serial Number: </span></span><br><span class="line"><span class="string">ff:aa:92:0b:bb:ff:a4:06 </span></span><br><span class="line"><span class="string">Signature Algorithm: sha256WithRSAEncryption </span></span><br><span class="line"><span class="string">Issuer: C=CN, ST=Henan, L=Zhengzhou, O=skills, OU=skills, </span></span><br><span class="line"><span class="string">CN=www.test.com </span></span><br><span class="line"><span class="string">Validity </span></span><br><span class="line"><span class="string">Not Before: Mar 23 09:49:47 2021 GMT </span></span><br><span class="line"><span class="string">Not After : Mar 23 09:49:47 2022 GMT </span></span><br><span class="line"><span class="string">Subject: C=CN, ST=Henan, L=Zhengzhou, O=skills, OU=skills, </span></span><br><span class="line"><span class="string">CN=www.test.com </span></span><br><span class="line"><span class="string">Subject Public Key Info: </span></span><br><span class="line"><span class="string">Public Key Algorithm: rsaEncryption </span></span><br><span class="line"><span class="string">Public-Key: (2048 bit</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Postfix&amp;&amp;dovecot</title>
      <link href="/2022/05/16/postfix/"/>
      <url>/2022/05/16/postfix/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Postfix"><a href="#Postfix" class="headerlink" title="Postfix"></a>Postfix</h1><p>在这个邮件服务器的架设中，我们首先谈论 Mail 与 DNS 的重要相关性，然后依序介绍 Mail Server 的相关名词，以及 Mail Server 的运作基本流程与协议，也会谈到相关的 Relay 与邮件认证机制等项目， 这些项目对于未来邮件服务器的管理与设定是重要的，请不要忽略了这方面问题的讨论喔。 由于 Postfix 的配置文件内容较具有亲和性，因此我们单纯介绍了 Postfix 不再介绍 sendmail 了。</p><h4 id="邮件服务器的功能与运作原理"><a href="#邮件服务器的功能与运作原理" class="headerlink" title="邮件服务器的功能与运作原理"></a>邮件服务器的功能与运作原理</h4><p> 电子邮件是个啥玩意儿？它是利用网络传递一些信息给远程服务器的一种信息传递行为，虽然消息正文是很冷很硬的计算机文字， 确实比不上手写信件来的让人觉得温暖，不过，对于具有时效性的信息来说，电子邮件可是个不可多得的好帮手！ 但是，电子邮件系统蓬勃发展的现在却被某些少部分的特定人士所乱用，导致垃圾信件、色情广告信件等等的泛滥！真是啊～伤脑筋～底下我们就先来谈一谈这个电子邮件相关的功能吧！</p><p><strong>Tips</strong>:</p><p> 时至今日，Google 与几个大型的网络公司都有提供免费或者是付费的邮件服务器，其中，免费的电子邮件账号甚至已经提供高达数个 GB 的邮件储存量！对于一般用户来说真是非常够用了！因此，除非必要，现在我们都『不建议您架设 mail server』的！ 因为玩过邮件主机的朋友都很清楚，在现在的环境当中想要搞定 Mail server 是很难的一件事情， 除了目前网络社会的广告信、垃圾信、病毒信实在是多的不象话，所以各主要的 ISP 对于邮件控管上面越来越严格， 而且基本功当中的 mail vs. DNS 相关性又太高！很难理解～</p><h5 id="电子邮件的功能与问题"><a href="#电子邮件的功能与问题" class="headerlink" title="电子邮件的功能与问题"></a>电子邮件的功能与问题</h5><p> 在目前的社会当中，没有电子邮件 (e-mail) 似乎是蛮奇怪的一件事！可以说，现在 e-mail 已经成为一个很普遍的人与人之间的沟通管道了， 电子邮件可以很快速的帮你将文件或讯息传送到地球上的任何一个有网络存在的角落，当然，你也可以在任何有网络的地方，连上 Internet去收取你的信件！ 不过，遗憾的是，只要是有人类的地方，就会有很多你意想不到的事情会出现了， 当然 e-mail 也不例外，怎么说呢？ 我们来慢慢的分析一下电子邮件产生的一些问题吧：</p><h6 id="夹带病毒的电子邮件问题："><a href="#夹带病毒的电子邮件问题：" class="headerlink" title="夹带病毒的电子邮件问题："></a>夹带病毒的电子邮件问题：</h6><p> 你可以常常听到电子邮件可能夹带病毒对吧！没错，利用电子邮件以及人们对于电子邮件的漫不经心的态度， 使得以电子邮件为媒介的计算机病毒更容易『深入人群』当中吶！</p><h6 id="怪客透过邮件程序入侵："><a href="#怪客透过邮件程序入侵：" class="headerlink" title="怪客透过邮件程序入侵："></a>怪客透过邮件程序入侵：</h6><p> 只要在 Internet 上面跑的数据就没有绝对保密的！你可以轻易的使用怪客软件 (Cracker) 就可以取得使用者在利用 e-mail 传送过程当中所输入的账号与密码，若经过分析之后，还可能破解对方的邮件主机～哇！真是乱可怕一把的！</p><h6 id="广告信与垃圾信等："><a href="#广告信与垃圾信等：" class="headerlink" title="广告信与垃圾信等："></a>广告信与垃圾信等：</h6><p> 这个可说是目前各大 ISP 心中永远的痛～这些垃圾信件可以占掉很多那少的可怜的带宽， 使得正常用户连接速度与质量下降，更可能造成网络的停顿～当然， 常常收到垃圾信件的你，大概也不好过吧！</p><h6 id="主机被大量不明信件塞爆："><a href="#主机被大量不明信件塞爆：" class="headerlink" title="主机被大量不明信件塞爆："></a>主机被大量不明信件塞爆：</h6><p> 万一你没有将邮件服务器设定好，嘿嘿！送信者可以藉由你主机收信的功能，发送大量的信件， 让你『一次收个够！』灌爆你的服务器硬盘，想要不宕机都很难～</p><h6 id="真实社会的讨厌情事："><a href="#真实社会的讨厌情事：" class="headerlink" title="真实社会的讨厌情事："></a>真实社会的讨厌情事：</h6><p> 『匿名信函』！听到会不会很害怕？当然很害怕啦！偏偏使用 e-mail 就可以作很多的坏事～这真是太不道德了～</p><h6 id="不实的信件内容："><a href="#不实的信件内容：" class="headerlink" title="不实的信件内容："></a>不实的信件内容：</h6><p> 只要注意到消基会的讯息就可以知道啦，不明来源的电子邮件说的内容，不要轻易的相信！ 因为很多可是以讹传讹，结果，大家都被耍了的～例如，你的朋友收到一封信，认为『哇！这是大事情』， 所以在没有求证的情况下，将信『转寄』给你看，嘿！你的朋友寄给你的，当然要相信他啦！ 立刻再转寄，如此一再地循环，嘿嘿！这个错误内容的讯息马上就让大家知道， 更可怕的是『还会让大家接受～』所以，看到任何讯息时，请千万要记得求证一下吶！</p><p> 可怕吧！电子邮件会衍生出这么多的问题说～另外，这个 email 服务器的设定与管理真的是网管人员心中永远的痛！ 为什么呢？因为人都是想要越便利越简单越好， 但越便利越不管制的邮件服务器就越容易被攻击或遭利用！ 反过来说，如果你针对邮 件服务器管得太严厉，那就不太人性化，相信至少您的主管可能就不太满意，怎么办？ 呵呵！没错啦！邮件服务器就是这么回事，让人又爱又怕的一个玩意儿，搞定他， 恭喜您啊一切顺利圆满！ 搞不定他，服务器被当成垃圾信件转运站事小，丢掉工作那 可是『兹事体大』呦！就因为他是这么重要又难以搞定， 所以我们可得好好的学学他吶！</p><h5 id="Mail-server-与-DNS-之间的关系"><a href="#Mail-server-与-DNS-之间的关系" class="headerlink" title="Mail server 与 DNS 之间的关系"></a>Mail server 与 DNS 之间的关系</h5><p> 既然要使用 e-mail ，当然就需要邮件服务器啰 (Mail Server)！不然你的信要怎样寄出去呢？事实上，mail server 的原理说难不难，但是说简单吗～似乎又有点难以理解～，所以，底下我们要来谈一谈他的原理部分，然后再针对服务器的设定来进行说明咯！我们首先要讲的就是『 Mail server 系统与 DNS 系统有什么关连性？』 这 个部分新手最容易被搞混哩，是否要架设 mail server 就『宿命』的一定得架设 DNS server 在你的主机上面吗？</p><p> Mail server 与合法的主机名 事实上目前已经没有人会使用 IP 来寄信了，我们通常接收到的 email 都是使用 『账号@主机名』的方式来处理的， 所以说，你的邮件服务器『就一定要有一个合法注册过的主机名』才可以。为什么呢？ 因为网络恶意使用与垃圾邮件泛滥的种种因素， 导致我们不允许直接利用主机的 IP 来寄信了，否则每部有 IP 的主机都能寄信… 因此，你想要架设 mail server 就『必需』要有合法的主机名啰。</p><p> OK！既然我只要一个合法的主机名即可，那么表示我不需要架设一部 DNS 主机啰？ 是的，你可以这样认为！只要你拥有合法的主机名，亦即在 DNS 的查询系统当中你的主机名拥有一个 A 的标志， 理论上你的 mail server 就可以架设成功。只不过由于目前因特网上面的广告信、 垃圾信与病毒信等占用了太多的带宽，导致整个网络社会花费过多的成本在消耗这些垃圾资料。 所以为了杜绝可恶的垃圾信件，目前的大型网络供货商 (ISP) 都会针对不明来源的邮件加以限制，这也就是说『想要架设一部简单 可以运作的 mail server 越来越难了』。</p><p> DNS 的反解也很重要！ 对于一般的服务器来说，我们只要使用正解让客户端可以正确的找到我们服务器的 IP 即可架站，举例来说 WWW 服务器就是这样。不过，由于目前收信端的邮件服务器会针对邮件来源的 IP 进行反解，而如果你的网络环境是由拨接取得非固定的 IP 时，该 种 IP 在 ISP 方面通常会主动的以 xxx.dynamic.xxx 之类的主机名来管理，偏偏这样的主机名会被主要的大型邮件服务器 (例如 hotmail, yahoo 等) 视为垃圾信件， 所以你的邮件服务器所发出的信件将可能被丢弃，那可就伤脑筋了！ 所以啊，如果你想要架设一部 Mail server 的话，请『务必』向您的上层 ISP 申 请 IP 反解的对应， 不要再使用预设的反解主机名，否则很容易导致您的邮件服务器 所发出的信件会在 Internet 上面流浪啊！</p><p><strong>Tips</strong>:</p><p> 其实你还是可以不用申请 IP 的反解，不过就得要利用所谓的 relayhost 或者是 smarthost 来处理邮件转递的问题， 这个部分又涉及到上层 ISP 的问题，挺复杂！我们会在后续作说明！</p><p><strong>需要 DNS 的 MX 及 A 标志啊 (超重要的 MX)！</strong></p><p> 那么我们的邮件服务器系统到底是如何使用 DNS 的信息来进行邮件的传递的？还 记得在 DNS 里面谈到的 MX 这个标志吗？当时我们仅说过这个 MX 代表的是 Mail exchanger， 当一封邮件要传送出去时，邮件主机会先分析那封信的『目标主机 的 DNS 』，先取得 MX 标志 (注意，MX 标志可能会有多部主机喔) 然后以最优先 MX 主 机为准将信发送出去。看不懂吗？没关系，我们以底下这个 DNS 范例来说：</p><p>xyz.com.vbird IN MX 10 mail.xyz.com.vbird</p><p>xyz.com.vbird IN MX 20 mail2.xyz.com.vbird</p><p>xyz.com.vbird IN A aaa.bbb.ccc.ddd</p><p>假如上述的 DNS 设定是正常的，那么：</p><p> 当有一封信要传给 <a href="mailto:user@xyz.com.vbird">user@xyz.com.vbird</a> 时，由于 MX 标志最低者优先，所以该封信会先传送到 mail.xyz.com.vbird 那部主机。</p><p> 如果 mail.xyz.com.vbird 由于种种原因，导致无法收下该封信时，该封信将以次要 MX 主机来传送，那就是传送到 mail2.xyz.com.vbird 那部主机上头；</p><p> 如果两部 MX 主机都无法负责的话，那么该封信会直接以 A 的标志，亦即直接传送到 aaa.bbb.ccc.ddd 那个 IP 上头去， 也就是 xyz.com.vbird 本身 啦！</p><p> 在这个过程当中，你必需要注意到：mail.xyz.com.vbird 及 mail2.xyz.com.vbird 必需要是可以帮 xyz.com.vbird 转信的主机才行，也就是说，那两部主机通常是你公司的最上游的邮件主机， 并不是你随意填写的！那两部主机还需要针对你的 xyz.com.vbird 来设定『邮件转递』才行！否则你的信会被踢掉的。</p><p> 由于现在的很多邮件服务器会去搜寻 MX 这个标志来判断目标邮件服务器是否为合法，所以你要架设 Mail server 虽然不必自行设定 DNS 服务器，不过你最好要申请 一个 MX 的标志才行。此外，MX 标志一定要设定正确，否则你的信件将可能会直接被 MX服务器踢掉。为了要设定 MX 但是我们没有上层邮件服务器时，所以你可以指定 MX 为 自己，利用自己当 MX 服务器即可。</p><p> 那么你或许会想，这个 MX 有啥好处啊？一般来说，如果目标主机挂点时，你的邮件通常会直接退还给原发信者， 但如果有 MX 主机时，这部 MX 主机会先将该封信放 在他的队列 (queue) 当中，等到你的目标主机重新提供邮件服务后， MX 主机会将你 的信件传送给目标主机，如此一来你的信件就比较不会遗失啊！这样说，您可以了解吧！ ^_^</p><p><strong>Email 的地址写法</strong></p><p> 刚刚上头说过 email 通常是『账号@主机名』的方式来处理，举例来说鸟哥的 <a href="http://www.centos.vbird/">www.centos.vbird</a> 主机上面有个 dmtsai 的使用者，则我的 email 将会成为： 『<a href="mailto:dmtsai@www.centos.vbird">dmtsai@www.centos.vbird</a>』，当有人要寄信给我时， 他会分析 @ 后面的主机名， 亦即 <a href="http://www.centos.vbird/">www.centos.vbird</a> 的 MX&#x2F;A 标志等等，然后再透过刚刚说明的流程来传出信件。</p><p>而当我的 <a href="http://www.centos.vbird/">www.centos.vbird</a>. 收到这封信时，他会将信放到 dmtsai 的信箱当中啦！ 底下我们就来谈一谈这个流程吧！</p><h5 id="邮件传输所需要的组件-MTA-MUA-MDA-以及相关协议"><a href="#邮件传输所需要的组件-MTA-MUA-MDA-以及相关协议" class="headerlink" title="邮件传输所需要的组件 (MTA, MUA, MDA) 以及相关协议"></a>邮件传输所需要的组件 (MTA, MUA, MDA) 以及相关协议</h5><h6 id="邮件传输所需要的组件-MTA-MUA-MDA-以及相关协议-1"><a href="#邮件传输所需要的组件-MTA-MUA-MDA-以及相关协议-1" class="headerlink" title="邮件传输所需要的组件 (MTA, MUA, MDA) 以及相关协议"></a>邮件传输所需要的组件 (MTA, MUA, MDA) 以及相关协议</h6><p>在开始介绍邮件的传送过程之前，我们先来想一想，你是如何寄出电子邮件的？假设你要寄信给一个用户， 他的电子邮件是『<a href="mailto:a_user@gmail.com">a_user@gmail.com</a>』好了，也就是说，你要寄一封信到 gmail.com 这个主机上的意思。 那你的桌面计算机 (举例来说， Windows 系统) 是否能够将这封信『直接』透过网络送给 gmail.com 那个主机上？ 当然不行啦！你得要设定帮你转信的邮件服务器才行！也就是说，你必需要先向某一部邮件服务器注册， 以取得一个合法的电子邮件权限后，才能够发送邮件出去的。 所以说，你要寄出一封信件时是需要很多接口的帮忙的，底下列出一个简单的图示来说明</p><p><a href="https://imgtu.com/i/Iy57r9"><img src="https://z3.ax1x.com/2021/11/13/Iy57r9.png" alt="Iy57r9.png"></a></p><p>电子邮件的『传送』过程示意图</p><p>我们先来解释一些专有名词吧！然后再来说明传送的流程：</p><ul><li>MUA (Mail User Agent)：</li></ul><p>顾名思义 MUA 就是『邮件使用者代理人』的意思，因为除非你可以直接利用类似 telnet 之类的软件登入邮件服务器来主动发出信件，否则您就得要透过 MUA 来帮你送信到邮件服务器上头去。 最常见的 MUA 像是 Mozilla 推出的 Thunderbird (雷鸟) 自由软件， 或者是 Linux 桌面 KDE 常见的 Kmail ，及 Windows 内件的 Outlook Express (OE) 等。 MUA 主要的功能就是收受邮件主 机的电子邮件，以及提供用户浏览与编写邮件的功能！</p><ul><li>MTA (Mail Transfer Agent)：</li></ul><p>MUA 帮用户传送邮件到邮件主机上，那这部邮件主机如果能够帮用户将这封信寄出去，那他就是一部邮件传送主机 (MTA) 啦！这个MTA 就是『邮件传送代理人』的意思。也来顾名思义一下，既然是『传送代理人』，那么使用者寄出的信， 帮用户将属于该用户的信件收下时，就是找它 (MTA) 就对啦！基本上，MTA 的功能有这些：</p><ol><li><p>收受信件：</p><p>使用简单邮件传送协议(SMTP) MTA 主机最主要的功能就是：将来自客户端或者是其他 MTA 的来信收下来，这个时候 MTA 使用的是 Simple Mail Transfer Protocol (SMTP)， 他使用的是 port 25 啦！</p></li><li><p>转递信件：</p><p>如果该封信件的目的地并不是本身的用户，且该封信的相关数据符合使用 MTA 的权力， 那么咱们的 MTA 就会将该封信再传送到下一部主机上。这即是所谓的转递 (Relay) 的功能。 总之，我们一般提到的 Mail Server 就是 MTA 啦！而严格来说， MTA 其实仅是指 SMTP 这个协议而已。而达成 MTA 的 SMTP 功能的主要软件包括老牌 的 sendmail，后起之秀的 postfix，还有 qmail 等等。底下我们来看看，那么在 MTA 上头还有哪些重要的功能。</p></li></ol><ul><li>MDA (Mail Delivery Agent)：</li></ul><p>字面上的意思是『邮件递送代理人』的意思。事实上，这个 MDA 是挂在 MTA 底下的一个小程序， 最主要的功能就是：分析由 MTA 所收到的信件表头或内容等数据， 来决定这封邮件的去向。所以说，上面提到的 MTA 的信件转递功能，其实是由 MDA 达成的。 举例来说，如果 MTA 所收到的这封信目标是自己，那么 MDA 会将这封信给他转到使用者的信箱 (Mailbox) 去， 如果不是呢？那就准备要转递出去了。此外，MDA 还有分析与过滤邮件的功能喔！举例来说：</p><ol><li><p>过滤垃圾信件：</p><p>可以根据该封邮件的表头资料，或者是特定的信件内容来加以分析过滤。 例如某个广告信的主题都是固定的， 如『AV 情色…』等等，那就可以透过 MDA 来过滤并去除该邮件。</p></li><li><p>自动回复：</p><p>如果您出差了导致某一段时间内无法立即回信时，就可以透过 MDA 的功能让邮件主机可以自动发出回复信件， 如此您的朋友就不会认为你太大牌！^_^</p></li></ol><p>各主要的 MTA 程序 (sendmail,postfix…) 都有自己的 MDA 功能，不过有些外挂的程序功能更强大，举例来说 procmail 就是一个过滤的好帮手，另外 Mailscanner + Spamassassion 也是可以使用的一些 MDA 喔。</p><ul><li>Mailbox：</li></ul><p>就是电子邮件信箱嘛！简单的说，就是某个账号专用的信件收受档案啰。我们的 Linux 系统默认的信箱都是放在 &#x2F;var&#x2F;spool&#x2F;mail&#x2F;使用者账号中！ 若 MTA 所收到的信件是本机的使用者，MDA 就会将信件送到该 mailbox 当中去啰！ 好了，那么来想一想，你如何透过 MUA 来将信件送到对方的邮件信箱 (Mailbox)去呢？</p><ol><li>取得某部 MTA 的权限： 我们本地端的 MUA 想要使用 MTA 来传出信件时， 当然需要取得 MTA 的权限。通常就是说：我们必须要向 MTA 注册一组可使用 email 的账号与密码才行。</li><li>使用者在 MUA 上编写信件后，传送至 MTA 上头： 用户在 MUA 上面编写信件，信件的数据主要有：<ul><li>信件标头：包括发件人与收件者的 email 地址，还有该封信件的主旨 (subject) 等；</li><li>信件内容：就是你要跟对方说明的内容啦！</li></ul></li></ol><p>编写完毕之后只要按下传送钮，该封信就会送至你的 MTA 服务器上面了，注意： 是你的 MTA 而不是对方的 MTA ！ 如果你确定可以使用该部 MTA，那么你的这封信就会被放置到 MTA 的队列 (queue) 当中并等待传送出去了。</p><ol><li><p>如果该封信的目标是本地端 MTA 自己的账号：</p><p>你是可以寄信给你自己的，所以如果你的 MTA 收到该封信件的目标是自己的用户时，那就会透过 MDA 将这封信送到 Mailbox 去啰！</p></li><li><p>如果该封信目的为其他 MTA ，则开始转递 (Relay) 的流程：</p><p>那如果这封信的目标是其他的主机呢？这个时候我们的 MTA 就会开始分析该封信是否具有合法的权限， 若具有权限时，则我们的 MDA 会开始进行邮件转递，亦即该封信件会透过我们的 MTA 向下一部 MTA 的 smtp (port 25) 发送出去。 如果该封信件顺利的发送出去了，那么该封信件就会由队列当中移除掉了。</p></li><li><p>对方 MTA 服务器收受信件</p></li></ol><p>如果一切都没有问题的话，远程的 MTA 会收到我们 MTA 所发出的那封信，并将该信件放置到正确的使用者信箱当中， 等待使用者登入来读取或下载。 在这整个过程当中，你会发现你的信件是由我们的 MTA 帮忙发送出去的，此时 MTA 提供的协议是简单邮件传输协议 (Simple Mail Transfer Protocol, smtp)， 并且该封信最终是停留在对方主机的 MTA 上头！并不是你朋友的 MUA 上头啊！</p><p><strong>Tips</strong>:</p><p>为何特别强调这一点？因为以前有个朋有跟我说：『鸟哥啊，你要 寄 email 给我的时候记得跟我讲， 那我下班前将计算机开着，以免你信寄不到我的信箱』，此时额头三条线突然跑出来～很不好意 思～ 所以这里才要特别强调，你的 MUA 不必开着啦！要收信时再打开即可。 了解了传送信件时 MTA 需要启动 smtp (port 25) 之后，再来我们得要谈谈那这封信件对方要如何接收啊？</p><h5 id="使用者收信时服务器端所提供的相关协议：-MRA"><a href="#使用者收信时服务器端所提供的相关协议：-MRA" class="headerlink" title="使用者收信时服务器端所提供的相关协议： MRA"></a>使用者收信时服务器端所提供的相关协议： MRA</h5><p> 那使用者如果想要收信时，当然也可以透过 MUA 直接来联机取得自己的邮件信箱内的数据啊！整个过程有点像底下这样：</p><p><a href="https://imgtu.com/i/Iy7wZj"><img src="https://z3.ax1x.com/2021/11/13/Iy7wZj.png" alt="Iy7wZj.png"></a></p><p>客户端透过 MRA 收回信件的流程示意图</p><p>在上述的图示中，多了一个邮件组件，那就是 MRA：</p><ul><li>MRA (Mail Retrieval Agent)：</li></ul><p>使用者可以透过 MRA 服务器提供的邮政服务协议 (Post Office Protocol, POP) 来收下自己的信件， 也可以透过 IMAP (Internet Message Access Protocol) 协议将自己的信件保留在邮件主机上面， 并进一步建立邮件数据匣等进阶工作。 也就是说，当客户端收受信件时，使用的是 MRA 的 POP3, IMAP 等通讯协议， 并非 MTA 的 SMTP 喔！ 我们先谈一谈 POP3 的收信方式吧：</p><ol><li><p>MUA 透过 POP3 (Post Office Protocol version 3) 的协议连接到 MRA 的 port 110， 并且输入账号与密码来取得正确的认证与授权；</p></li><li><p>MRA 确认该用户账号&#x2F;密码没有问题后，会前往该使用者的 Mailbox (&#x2F;var&#x2F;spool&#x2F;mail&#x2F;使用者账号) 取得使用者的信件并传送给用户的 MUA 软件 上；</p></li><li><p>当所有的信件传送完毕后，用户的 mailbox 内的数据将会被删除！ 在上述的流程当中我们知道 MRA 必须要启动 POP3 这个协议才行，不过这个协议的收件方式比较有趣， 因为使用者收信是由第一封信件开始收下直到最后一封信件传输完毕为止。不过由于某些 MUA 程序撰写的问题，若有些邮件有病毒的可能性时，透 过防病毒软件将可能导致该 MUA 软件的断线！ 如此一来由于传输没有完毕，因此 MRA 主机并不会将用户的信件删除。 此时如果使用者又再一次的按下接收按键，呵呵！原 来已接收的信件又会重复收到，而没有收到的还是收不到！</p><p>这个时候或许你可以透过登入主机利用 mail 这个指令来处理你有问题的邮件， 或许换一种 MUA 也是个不错的思考方向，又或者暂时将防病毒软件关掉也是可以考虑的手段之一。 转头过来想一想，因为 POP3 的协议预设会将信件删除，那如果我今天在办公室将我的信收到办公室的计算机中， 当我回家时再度启动 MUA 时，是否能够收到已经被接收的信件？当然不行，对吧！</p><p>或许你需要更有帮助的协议，亦即 IMAP (Internet Messages Access Protocol) ， 这个协议可以让你将 mailbox 的数据转存到你主机上的家目录，亦即 &#x2F;home&#x2F;账号&#x2F; 那 个目录下， 那你不但可以建立邮件数据匣，也可以针对信件分类管理，而且在任何一 个可连上网络的地方你只要登入主机， 原本的信件就还是存在吶！真是好啊！ 不过，使用 IMAP 时，用户的目录最好能够加点限制，例如利用 quota 来管理用户的硬盘权限， 否则因为信件都在主机上头，如果用户过多且误用时，你的硬盘空间会被吃光光喔！注意注意！</p></li></ol><p>OK！透过上面的说明你要知道，要架设一部可以使用 MUA 进行收发信件的 MTA, MRA 服务器，你至少也需要启动 SMTP 以及 POP3 这两个协议才行！而这两个协议的启动程序并不相同， 所以架设上还是得要小心注意啊！</p><p> pop3s, imap2 与 SMTP 的困扰 邮件数据在因特网上面传输时，透过的 SMTP, POP3, IMAP 等通讯协议，通通是明码传输的！尤其 POP3, IMAP 这两个通讯协议中，使用者必须要输入账号&#x2F;密码才能收受信件！因为涉及帐密，所以当然加密这两个通讯协议的数据较佳！ 于是就有了 POP3s, IMAPs 通讯协议出现了！透过 SSL 加密嘛！那你会问，既然已经有 pop3s, imaps 了， 那有没有 smtps 呢？答案是，当然有！只不过没人用！</p><p> 从面两张图的流程来看，POP3, IMAP 只与 MRA 及自己的用户有关， 因此你只要跟你的用户说，你服务器使用的 MRA 协议为何，通知你的用户改变即可， 并不会影响到其他的服务器。 但是 MTA 就不同了！因为 MTA 必须与其他的 MTA 沟 通，</p><p> 因此，若你使用了 smtps ，那么全世界与你的 MTA 沟通者， 通通需要改变为 smtps 通讯协议才行！这个工程实在太浩大了！目前还没有任何一家 ISP 有能力进行！ 所以， 就造成目前没有 SMTPs 的协议啰。</p><p> 那么难道你的数据就一定要是明码吗？那倒不见得～既然你的 MTA 无法加密，那么你就自己将邮件数据加密后，再交由 MTA 传送即可！这也是目前很多急需加密数据 的邮件用户所使用的手段啦！^_^</p><h5 id="Relay-与认证机制的重要性"><a href="#Relay-与认证机制的重要性" class="headerlink" title="Relay 与认证机制的重要性"></a>Relay 与认证机制的重要性</h5><p> 当你需要 MTA 帮你将信寄送到下一部 MTA 去时，这个动作就称为邮件转递 (Relay) 啰，那就是电子邮件的『传送』过程示意图 当中的 Step 2.2 那个动作啦。那么我们来想一想，如 果『所有的人都可以藉由这一部 MTA 帮忙进行 Relay 时， 这个情况称之为 Open Relay 的动作』。当你的 MTA 发生 Open Relay 时，会有什么问题？ 问题可就大了！ 当你的 MTA 由于设定不良的关系导致具有 Open Relay 的状况，加上你的 MTA 确 实是连上因特网时， 由于因特网上面用 port scan 软件的闲人太多，你的 MTA 具有 Open Relay 的功能这件事情， 将会在短时间内就被很多人察觉，此时那些不法的广告信、色情垃圾信业者将会利用你的这部 Open Relay MTA 发送他们的广告，所以你会发生的问题至少有：</p><ul><li>你主机所在的网域正常使用的连接速度将会变慢，因为网络带宽都被广告、 垃圾信吃光了；</li><li>你的主机可能由于大量发送信件导致主机资源被耗尽，容易产生不明原因当机之类的问题；</li><li>你的 MTA 将会被因特网社会定义为『黑名单』，从此很多正常的邮件就会无法收发；</li><li>你 MTA 所在的这个 IP 将会被上层 ISP 所封锁，直到你解决这个 Open Relay 的问题为止；</li><li>某些用户将会对你的能力产生质疑，对您公司或者是你个人将会有信心障碍！ 甚至可能流失客源；</li><li>如果你的 MTA 被利用来发黑函，你是找不到原发信者的，所以你这部 MTA 将会被追踪为最终站！</li></ul><p>问题很大呦！所以啊，目前所有的 distributions 都一样，几乎都将 MTA 预设启动为仅监听内部循环接口 (lo) 而已，而且也将 Open Relay 的功能取消了。既然取消 Open Relay 的功能，那么怎么使用这部 MTA 的 Relay 来帮忙转信啊？呵呵！所以我们在上头才会一直说，你『必需』取得合法使用该 MTA 的权限啊！ 这也就是说，设定 谁可以使用 Relay 的功能就是我们管理员的任务啦！通常设定 Relay 的方法有这几种：</p><ul><li>规定某一个特定客户端的 IP 或网段，例如规定内部 LAN 的 192.168.1.0&#x2F;24 可使用 Relay；</li><li>若客户端的 IP 不固定时 (例如拨接取得的非固定 IP) 可以利用认证机制来处理。</li><li>将 MUA 架设在 MTA 上面，例如 OpenWebMail 之类的 web 接口的 MUA 功能。</li></ul><p>认证机制上面常见的有 SMTP 邮件认证机制，以及 SMTP after POP 两种，不论是 哪一种机制， 基本上都是透过让使用者输入认证用的账号与密码，来确定他有合法使 用该 MTA 的权限，然后针对通过认证者开启 Relay 的支持就是了。如此一来你的 MTA不再启动 Open Relay ，并且客户端还是可以正常的利用认证机制来收发信件， 身为 管理员的你可就轻松多啰！ ^_^</p><h5 id="电子邮件的数据内容"><a href="#电子邮件的数据内容" class="headerlink" title="电子邮件的数据内容"></a>电子邮件的数据内容</h5><p>看过上头的数据后，您应该对于 Mail server 有一些程度的认识了。再来要谈的是，那么一封 email 的内容有哪些部分呢？就跟人类社会的邮件有信封袋以及内部的信纸一样，email 也有所谓的标头 (header) 以及内容 (body) 两部份喔！ email 的标头部分 (类似邮件信封) 会有几个重要信息，包括：这封信来自那个 MTA、是由谁所发送出来的、要送给谁、 主旨为何等等，至于内容 (类似信封内的信纸) 则是发信者所填写的一些说明啰。如果你使用 dmtsai 的身份下达这个指令：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[dmtsai@www ~]$ echo &quot;HaHa..&quot; | mail -s &quot;from vbird&quot; dmtsai</span><br></pre></td></tr></table></figure><p>然后将自己的信箱内容叫出来，如下所示：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[dmtsai@www ~]$ cat /var/spool/mail/dmtsai</span><br><span class="line">From dmtsai@www.centos.vbird Mon Aug 8 18:53:32 2011 &lt;==发信者的email</span><br><span class="line">Return-Path: &lt;dmtsai@www.centos.vbird&gt; &lt;==这封信的来源</span><br><span class="line">X-Original-To: dmtsai</span><br><span class="line">Delivered-To: dmtsai@www.centos.vbird</span><br><span class="line">Received: by www.centos.vbird (Postfix, from userid 2007)</span><br><span class="line">id 6D1C8366A; Mon, 8 Aug 2011 18:53:32 +0800 (CST) &lt;==邮件ID</span><br><span class="line"># 这部份主要在讲这封 email 的来源与目标收件者 MTA 在哪里的信息～</span><br><span class="line">Date: Mon, 08 Aug 2011 18:53:32 +0800 &lt;==收到信件的日期</span><br><span class="line">To: dmtsai@www.centos.vbird &lt;==收件者是谁啊！</span><br><span class="line">Subject: from vbird &lt;==就是信件标题</span><br><span class="line">User-Agent: Heirloom mailx 12.4 7/29/08</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">Content-Type: text/plain; charset=us-ascii</span><br><span class="line">Content-Transfer-Encoding: 7bit</span><br><span class="line">Message-Id: &lt;20110808105332.6D1C8366A@www.centos.vbird&gt; &lt;==给机器看的邮件 ID</span><br><span class="line">From: dmtsai@www.centos.vbird &lt;==发信者是谁啊！</span><br><span class="line">HaHa..</span><br></pre></td></tr></table></figure><p>由原本的信件内容我们可以看到 email 确实是两部份，在标头部分记录了比较详细的收、发件者数据， 以及相关的来源、目标之 MTA 信息等等。但你要注意的是，那个 『Received:…』那一行资料是『会变动的』， 如同前面谈到的 MX 标志，如果一封信由 MUA 传送到 MTA 在由 MTA 传送到 MX 主机后，才传送到最终的 MTA 时， 那么这个 Received: 的数据将会记录每一部经手过的 MTA 信息喔！所以你可以借着这个记录数据慢慢的找回这封信的传递方向呢！</p><p>此外，这个邮件的标头以及内容的分析部分，你还可以藉由某些分析软件来进行过 滤， 这部份我们将在后头再慢慢的介绍给大家了解喔！ ^_^！您先知道一封邮件至少 有这些数据，以后咱们再慢慢的解释啰！</p><h4 id="MTA-服务器：-Postfix-基础设定"><a href="#MTA-服务器：-Postfix-基础设定" class="headerlink" title="MTA 服务器： Postfix 基础设定"></a>MTA 服务器： Postfix 基础设定</h4><p>可达成 MTA 的服务器软件非常多，例如我们的 CentOS 预设就提供了数十年老牌 子的 sendmail (<a href="http://www.sendmail.org/">http://www.sendmail.org</a>) 以及近期以来很热门的 Postfix (<a href="http://www.postfix.org/">http://www.postfix.org)。虽然</a>.xn–otxv76b&#x2F;) sendmail 曾是最为广泛使用的 mail server 软件， 但由于 sendmail 的配置文件太过于难懂，以及早期的程序漏洞问题导致的主机安全性 缺失；加上 sendmail 将所有的功能都统合在 &#x2F;usr&#x2F;sbin&#x2F;sendmail 这个程序当中，导 致程序太大可能会有效能方面的疑虑等等， 所以新版的 CentOS 已经将预设的 mail server 调整为 postfix 啰！我们这里也主要介绍 postfix。当然啦，原理方面都一样， 您也可以自己玩玩其他的 mail server。</p><h5 id="Postfix-的开发"><a href="#Postfix-的开发" class="headerlink" title="Postfix 的开发"></a>Postfix 的开发</h5><p> Postfix 是由 Wietse Zweitze Venema 先生(<a href="http://www.porcupine.org/wietse">http://www.porcupine.org/wietse</a>) 所发展的。早期的 mail server 都是使用 sendmail 架设的，还真的是『仅此一家， 绝无分号』！不过，Venema 博士觉得 sendmail 虽然很好用，但是毕竟不够安全，尤 其效能上面并不十分的理想，最大的困扰是…sendmail 的配置文件 sendmail.cf 真 的是太难懂了！对于网管人员来说，要设定好 sendmail.cf 这个档案，真不是人作的 工作。</p><p> 为了改善这些问题， Venema 博士就在 1998 年利用他老大在 IBM 公司的第一个休假年进行一个计划：『 设计一个可以取代 sendmail 的软件套件，可以提供网站管理员一个更快速、 更安全、而且完全兼容于 sendmail 的 mail server 软件！』这个计划还真的成功了！ 而且也成功的使用在 IBM 内部，在 IBM 内可以说是完全取代了 sendmail 这个邮件服务器！在这个计划成功之后， Venema 博士也在1998 年首次释出这个自行发展的邮件服务器，并定名为 VMailer。</p><p> 不过，IBM 的律师却发现一件事，那就是 VMailer 这个名字与其他已注册的商标很类似， 这样可能会引起一些注册上面的困扰。为了避免这个问题，所以 Venema 博士就将这个邮件软件名称改为 Postfix ！</p><p>『Post 有在什么什么之后』的意思，『fix 则 是修订』的意思，所以 postfix 有 『在修订之后』的意思。</p><p> 鸟哥个人认为， Venema 先生最早的构想并不是想要『创造一个全新的 Mail server 软件，而是想要制造一个可以完全兼容于 sendmail 的软件』，所以，Venema 先 生认为他自行发展的软件应该是『改良 sendmail 的缺失』，所以才称为 Postfix 吧！ 取其意为： 『改良了 sendmail 之后的邮件服务器软件！』</p><p> 所以啦，Postfix设计的理念上面，主要是针对『想要完全兼容于sendmail』所设计出来的一款『内在部分完全新颖』的一个邮件服务器软件。就是由于这个理念，因此Postfix改善了sendmail安全性上面的问题，改良了mailserver的工作效率，且让配置文件内容更具亲和力！因此，你可以轻易的由sendmail转换到Postfix上面！这也是当初Venema博士的最初构想啊！</p><p> 就是基于这个构想，所以Postfix在外部配置文件案的支持度，与sendmail几乎没有两样，同样的支持aliases这个档案，同样的支持~&#x2F;.forward这个档案，也同样的支持SASL的SMTP邮件认证功能等等！所以，呵呵！赶紧来学一学怎样架设Postfix这个相当出色的邮件服务器吧！^_^</p><h5 id="所需要的软件与软件结构"><a href="#所需要的软件与软件结构" class="headerlink" title="所需要的软件与软件结构"></a>所需要的软件与软件结构</h5><p>由于CentOS6.x预设就是提供postfix的！所以根本无须调整啥咚咚～直接来使用吧！那么postfix有哪些重要的配置文件呢？他主要的配置文件都在&#x2F;etc&#x2F;postfix&#x2F;当中，详细的档案内容就让我们来谈谈：</p><ul><li>&#x2F;etc&#x2F;postfix&#x2F;main.cf</li></ul><p>这就是主要的postfix配置文件啰，几乎所有的设定参数都是在这个档案内规范的！这个档案预设就是一个完整的说明档了，你可以参考这个档案的内容就设定好属于你的postfixMTA呢！只要修改过这个档案，记得要重新启动postfix喔！</p><ul><li>&#x2F;etc&#x2F;postfix&#x2F;master.cf</li></ul><p>主要规定了postfix每个程序的运作参数，也是很重要的一个配置文件。不过这个档案预设已经很OK了，通常不需要更改他。</p><ul><li>&#x2F;etc&#x2F;postfix&#x2F;access (利用 postmap 处理)</li></ul><p>可以设定开放Relay或拒绝联机的来源或目标地址等信息的外部配置文件，不过这个档案要生效还需要在&#x2F;etc&#x2F;postfix&#x2F;main.cf启动这个档案的用途才行。且设定完毕后需要以postmap来处理成为数据库档案呢！</p><ul><li>&#x2F;etc&#x2F;aliases (利用 postalias 或 newaliases 均可)</li></ul><p>做为邮件别名的用途，也可以作为邮件群组的设定喔！ 至于常见的执行档则有底下这些：</p><ul><li>&#x2F;usr&#x2F;sbin&#x2F;postconf (查阅 postfix 的设定数据)</li></ul><p>这个指令可以列出目前你的 postfix 的详细设定数据，包括系统默认值也会被列出来， 所以数据量相当的庞大！如果你在 main.cf 里面曾经修改过某些预设 参数的话，想要仅列出非默认值的设定数据， 则可以使用『postconf -n』这个 选项即可。</p><ul><li>&#x2F;usr&#x2F;sbin&#x2F;postfix (主要的 daemon 指令)</li></ul><p>此为 postfix 的主要执行档，你可以简单的使用他来启动或重新读取配置文件：</p><p>[root@www ~]# postfix check &lt;&#x3D;&#x3D;检查 postfix 相关的档案、权限等是否正确！</p><p>[root@www ~]# postfix start &lt;&#x3D;&#x3D;开始 postfix 的执行</p><p>[root@www ~]# postfix stop &lt;&#x3D;&#x3D;关闭 postfix</p><p>[root@www ~]# postfix flush &lt;&#x3D;&#x3D;强制将目前正在邮件队列的邮件寄出！</p><p>[root@www ~]# postfix reload &lt;&#x3D;&#x3D;重新读入配置文件，也就是</p><ul><li>&#x2F;etc&#x2F;postfix&#x2F;main.cf</li></ul><p>要注意的是，每次更动过 main.cf 后，务必重新启动 postfix，可简单的使用 『postfix reload』即可。不过老实说，鸟哥还是习惯使用 &#x2F;etc&#x2F;init.d&#x2F;postfix reload..</p><ul><li>&#x2F;usr&#x2F;sbin&#x2F;postalias</li></ul><p>设定别名数据库的指令，因为 MTA 读取数据库格式的档案效能较佳，所以我们 都会将 ASCII 格式的档案重建为数据库。 在 postfix 当中，这个指令主要在 转换 &#x2F;etc&#x2F;aliases 成为 &#x2F;etc&#x2F;aliases.db 啰！用法为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@www ~]# postalias hash:/etc/aliases</span><br><span class="line"># hash 为一种数据库的格式，然后那个 /etc/aliases.db 就会自动被更新啰！</span><br></pre></td></tr></table></figure><ul><li>&#x2F;usr&#x2F;sbin&#x2F;postcat</li></ul><p>主要用在检查放在queue(队列)当中的信件内容。由于队列当中的信件内容是给MTA看的，所以格式并不是一般我们人类看的懂的文字数据。所以这个时候你得要用postcat才可以看出该信件的内容。在&#x2F;var&#x2F;spool&#x2F;postfix内有相当多的目录，假设内有一个文件名为&#x2F;deferred&#x2F;abcfile，那你可以利用底下的方式来查询该档案的内容喔：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@www ~]# postcat /var/spool/postfix/deferred/abcfile</span><br></pre></td></tr></table></figure><ul><li>&#x2F;usr&#x2F;sbin&#x2F;postmap</li></ul><p>这个指令的用法与 postalias 类似，不过他主要在转换 access 这个档案的数据库啦！用法为：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@www ~]# postmap hash:/etc/postfix/access</span><br></pre></td></tr></table></figure><ul><li>&#x2F;usr&#x2F;sbin&#x2F;postqueue</li></ul><p>类似mailq的输出结果，例如你可以输入『postqueue-p』看看就知道了！整个postfix的软件结构大致上是这个样子的，接下来让我们先来简单的处理一下postfix的收发信件功能吧！</p><h5 id="一个邮件服务器的设定案例"><a href="#一个邮件服务器的设定案例" class="headerlink" title="一个邮件服务器的设定案例"></a>一个邮件服务器的设定案例</h5><p>前面谈到mailserver与DNS系统有很大的相关性，所以如果你想要架设一部可以连上Internet的邮件服务器时，你必需要已经取得合法的A与MX主机名，而且最好反解也已经向您的ISP申请修改设定了，这可是个大前提！不要忽略他！在底下的练习当中以之前DNS内的设定为依据，主要的参数是这样的：</p><p>邮件服务器的主要名称为：<a href="http://www.centos.vbird/">www.centos.vbird</a><br>邮件服务器尚有别名为linux.centos.vbird及ftp.centos.vbird也可以收发信件；<br>此邮件服务器已有MX设定，直接指向自己(<a href="http://www.centos.vbird/">www.centos.vbird</a>)<br>这个<a href="http://www.centos.vbird有个a的标志指向192.168.100.254./">www.centos.vbird有个A的标志指向192.168.100.254。</a></p><p>在实际的邮件服务器设定当中，上述的几个标志是很重要的，请自行参考DNS章节的介绍吧！底下就让我们来实际设定postfix服务器啰！</p><h5 id="让-Postfix-可监听-Internet-来收发信件"><a href="#让-Postfix-可监听-Internet-来收发信件" class="headerlink" title="让 Postfix 可监听 Internet 来收发信件"></a>让 Postfix 可监听 Internet 来收发信件</h5><p>在预设的情况下，CentOS6.x的MTA仅针对本机进行监听，不相信吗？测测看：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@www ~]# netstat -tlnp | grep :25 </span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State</span><br><span class="line">PID/Program name tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN </span><br><span class="line">3167/master</span><br></pre></td></tr></table></figure><p>所以如果你要对整个Internet开放的话，就得要努力的搞定几个简单的设定啰！而几乎所有的设定你都可已经由&#x2F;etc&#x2F;postfix&#x2F;main.cf这个档案搞定！修改前你需要注意的项目有：</p><p>『#』符号是批注的意思；</p><ul><li>所有设定值以类似『变量』的设定方法来处理，例如myhostname&#x3D;<a href="http://www.centos.xn--vbird%2C%2C%2Cmy-r72o6524bcha4e7nver7g4ua92ck88dr3cegt47bqr7bnb0b7j8axeoyo1brd0e0gar30lna908dia6vr8bt53hq81h2exasq3b..xn--%3B-p03bs20pbw6bh71au9b30nss5a/">www.centos.vbird，请注意等号的两边要给予空格符喔，且第一个字符不可以是空白，亦即『my..』要由行首写起；</a></li><li>可以使用『$』来延伸使用变量设定，例如myorigin&#x3D;$myhostname，会等于myorigin&#x3D;<a href="http://www.centos.vbird;/">www.centos.vbird；</a></li><li>如果该变量支持两个以上的数据，则使用空格符来分隔，不过建议使用逗号加空格符『,』来处理。例如：mydestination&#x3D;$myhostname,$mydomain,linux.centos.vbird，意指mydestination支持三个数据内容之意。</li><li>可使用多行来表示同一个设定值，只要在第一行最后有逗号，且第二行开头为空格符，即可将数据延伸到第二行继续书写(所以刚刚第二点才说，开头不能留白！)；</li><li>若重复设定某一项目，则以较晚出现的设定值为准！</li></ul><p>要让你的 postfix 可以收发信件时，你必需要启动的设定数据有底下这些喔：</p><ul><li><p>myhostname：设定主机名，需使用FQDN喔这个项目在于设定你的主机名，且这个设定值会被后续很多其他的参数所引用，所以必须要设定正确才行。你应该要设定成为完整的主机名。在的这个练习当中，应该设定为：myhostname&#x3D;<a href="http://www.centos.xn--vbird-ry8i319a.xn--%2Cmydomain%2C%24myhostname-8j2ze564dya78jealo73iw4d92il0m6m9aq47bltvqa4696jmmwgl5dea1712crg7lw9ata1564chba2a3351gl7xaga2804g.xn--46j132gm4dda4225bhke.xn--%2Cmydomaincentos-ux50ah2ak4qbr0ap2zk5lujas4ki53gw2g6r7aj08drcvhha13osw9s.xn--vbird!-nq0mm2byey2dr45a37er21aw93lxxwavyn./">www.centos.vbird才对。除了这个设定值之外，还有一个mydomain的设定项目，这个项目默认会取$myhostname第一个『.』之后的名称。举例来说上头设定完毕后，预设的mydomain就是centos.vbird啰！你也可以自行设定他。</a></p></li><li><p>myorigin：发信时所显示的『发信源主机』项目这个项目在设定『邮件头上面的mailfrom的那个地址』，也就是代表本MTA传出去的信件将以此设定值为准喔！如果你在本机寄信时忘记加上Mailfrom字样的话，那么就以此值为准了。默认这个项目以$myhostname为主的，例如：myorigin&#x3D;$myhostname</p></li><li><p>inet_interfaces：设定postfix的监听接口(极重要)在预设的情况下你的Postfix只会监听本机接口的lo(127.0.0.1)而已，如果你想要监听整个Internet的话，请开放成为对外的接口，或者是开放给全部的接口，常见的设定方法为：inet_interfaces&#x3D;all才对！由于如果有重复设定项目时，会以最晚出现的设定值为准，所以最好只保留一组inet_interfaces的设定喔！</p></li><li><p>inet_protocols：设定postfix的监听IP协议 预设CentOS的postfix会去同时监听IPv4,IPv6两个版本的IP，如果你的网络环境里面仅有IPv4时，那可以直接指定inet_protocols&#x3D;ipv4就会避免看到:::1之类的IP出现呦！</p></li><li><p>mydestination：设定『能够收信的主机名』(极重要)</p><p>这个设定项目很重要喔！因为我们的主机有非常多的名字，那么对方填写的 mail to 到底要写哪个主机名字我们才能将该信件收下？ 就是在这里规范的！也就是 说，你的许多主机名当中，仅有写入这个设定值的名称才能作为 email 的主机 地址。 在我们这个练习当中这部主机有三个名字，所以写法为： mydestination &#x3D; $myhostname, localhost, linux.centos.vbird, ftp.centos.vbird 如果你想要将此设定值移动到外部档案，那可以使用类似底下的作法： mydestination &#x3D; &#x2F;etc&#x2F;postfix&#x2F;local-host-names ，然后在 local-host-names 里面将可收信的主机名写入即可。一般来说，不建议你额外建立local-host-names这个档案啦，直接写入main.cf即可说！特别留意的是，如果你的DNS里头的设定有MX标志的话，那么请将MX指向的那个主机名一定要写在这个mydestination内，否则很容易出现错误讯息喔！一般来说，使用者最常发生错误的地方就在这个设定里头呢！</p></li><li><p>mynetworks_style：设定『信任网域』的一项指标这个设定值在规定『与主机在同一个网域的可信任客户端』的意思！举例来说，我的主机IP是192.168.100.254，如果我相信整个局域网络内(192.168.100.0&#x2F;24)的用户的话，那我可规定此设定值为『subnet』吶！不过，一般来说，因为底下的mynetworks会取代这个设定值，所以不设定也没有关系喔！如果要设定的话，最好设定成为host即可(亦即仅信任这部MTA主机而已)。</p></li><li><p>mynetworks ：规定信任的客户端 (极重要)</p><p>你的MTA能不能帮忙进行Relay与这个设定值最有关系！举例来说，我要开放本机与内部网域的IP时，就可以这样进行设定：mynetworks&#x3D;127.0.0.0&#x2F;8,192.168.100.0&#x2F;24。如果你想要以 &#x2F;etc&#x2F;postfix&#x2F;access这个档案来控制relay的用户时，那可以建议你将上述的数据改写成这样：mynetworks&#x3D;127.0.0.0&#x2F;8,192.168.100.0&#x2F;24,hash:&#x2F;etc&#x2F;postfix&#x2F;access然后你只要再建立access之后重整成数据库后，嘿嘿！就能够设定Relay的用户啰！</p></li><li><p>relay_domains：规范可以帮忙relay的下一部MTA主机地址相对于mynetworks是针对『信任的客户端』而设定的，这个relay_domains则可以视为『针对下游MTA服务器』而设定的。举例来说，如果你这部主机是<br><a href="http://www.niki.centos.xn--vbirdmx%2Crelay_domainsniki-jq86bvnu7zmj9d3z3autc78b934dm00c15d03ohl4m0z0gwgtac50cq98a.centos.xn--vbird-rn1hs1cy1cd57a6syx5nw54bnebr00mba6920aytbib72fk05j.xn--%2C%24mydestination-pd83aysm87aupiw1x06jt72am8nytsw60bpn6h50vcug4dia6486a0n7d./">www.niki.centos.vbird的MX主机时，那你就得要在relay_domains设定针对整个niki.centos.vbird这个领域的目标信件进行转递才行。在预设的情况下，这个设定值是$mydestination而已啦。</a></p><p>你必需要注意的『Postfix 预设并不会转递 MX 主机的信件』，意思就是说：如 果你有两部主机，一部是上游的 MTAup ，一部是下游的MTAdown ，而 MTAdown 规范的 MX 主机是 MTAup，由 22.1.2 谈到的 DNS 的 MX 设定值与信件传递方 向，我们知道任何想要寄给 MTAdown 主机的信件， 都会先经过 MTAup 来转递 才行！此时如果那部 MTAup 没有开启帮 MTAdown 进行 relay 的权限时， 那么 任何传给 MTAdown 的信件将『全部都被 MTAup 所退回』！从此 MTAdown 就无 法收到任何信件了。 上一段的说明请您特别再想一想，因为如果你在大公司服务而且你的公司上、下 游均有 mail server 时， 并且也有设定 MX 的状况下，嘿嘿！这个 relay_domains 就很重要啦！上游的 MTA 主机必需要启动这个设定。 一般来说 除非你是某部 MTA 主机的 MX 源头，否则这个设定项目可以忽略不设定他。 而 如果你想要帮你的客户端转递信件到某部特定的 MTA 主机时，这个设定项目也 是可以设定的啦。 默认请您保留默认值即可。</p></li><li><p>alias_maps ：设定邮件别名</p><p>就是设定邮件别名的设定项目，只要指定到正确的档案去即可，这个设定值可以保留默认值啊：</p><p>在了解上述的设定后，以范例来看的话，鸟哥有更动过或注明重要的设定值 以及相关档案是这样处理的：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/postfix/main.cf</span></span><br><span class="line">myhostname = www.centos.vbird &lt;==约在第 77 行</span><br><span class="line">myorigin = <span class="variable">$myhostname</span> &lt;==约在第 99 行</span><br><span class="line">inet_interfaces = all &lt;==约在第 114 行，117 行要批注掉</span><br><span class="line">inet_protocols = ipv4 &lt;==约在第 120 行</span><br><span class="line">mydestination = <span class="variable">$myhostname</span>, localhost.<span class="variable">$mydomain</span>, localhost,</span><br><span class="line">linux.centos.vbird, ftp.centos.vbird &lt;==约在第 165,166 行</span><br><span class="line">mynetworks = 127.0.0.0/8, 192.168.100.0/24, <span class="built_in">hash</span>:/etc/postfix/access &lt;==约在 269 行</span><br><span class="line">relay_domains = <span class="variable">$mydestination</span> &lt;==约在第 299 行</span><br><span class="line">alias_maps = <span class="built_in">hash</span>:/etc/aliases</span><br><span class="line">alias_database = <span class="built_in">hash</span>:/etc/aliases &lt;==约在第 389, 400 行</span><br><span class="line"><span class="comment"># 其他的设定值就先保留默认值即可啊！</span></span><br><span class="line">[root@www ~]<span class="comment"># postmap hash:/etc/postfix/access</span></span><br><span class="line">[root@www ~]<span class="comment"># postalias hash:/etc/aliases</span></span><br></pre></td></tr></table></figure></li></ul><p>因为 main.cf 当中我们有额外加入两个外部配置文件 (mynetworks 及 alias_maps) ，所以才会额外进行 postmap 及 postalias。然后准备来启动啦！你可以这样处理喔：</p><ol><li><p>先检查配置文件的语法是否有错误</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># /etc/init.d/postfix check &lt;==没有讯息，表示没有问题。</span></span><br></pre></td></tr></table></figure></li><li><p>启动与观察 port number</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># /etc/init.d/postfix restart</span></span><br><span class="line">[root@www ~]<span class="comment"># netstat -tlunp | grep &#x27;:25&#x27;</span></span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State</span><br><span class="line">PID/Program name</span><br><span class="line">tcp 0 0 0.0.0.0:25 0.0.0.0:* LISTEN</span><br><span class="line">13697/master</span><br></pre></td></tr></table></figure></li></ol><p>很简单吧！这样就设定妥当了。假设你的防火墙已经处理完毕，那你的Postfix已经可以开放客户端进行转递，并且也可以收受信件啰！不过，到底在预设的情况下我们的postfix可以收下哪些信件？又可以针对哪些设定值的内容进行转递呢？这就得要参考下一小节的说明了。</p><h5 id="信件传送流程与收信、relay-等重要观念"><a href="#信件传送流程与收信、relay-等重要观念" class="headerlink" title="信件传送流程与收信、relay 等重要观念"></a>信件传送流程与收信、relay 等重要观念</h5><p>我想，您对于MTA的设定与收发信件应该有一定程度的概念了，不过要妥善设定好你的MTA时，尤其是想要了解到整部MTA是如何收、发信件时，你最好还是要知道『我这部MTA如何接受来源主机所传来的信件，以及将信件转递到下一部主机去』的整个流程啊。一般来说一封邮件传送会经过许多的流程为：</p><ol><li>送信端与收信端两部主机间会先经过一个握手 (ehlo) 的阶段，此时送信端 被记录为发信来源(而不是 mail from)。 通过握手后就可以进行信件标头 (header) 的传送；</li><li>此时收信端主机会分析标头的信息，若信件之Mailto:主机名为收信端主机，且该名称符合mydestination的设定，则该信件会开始被收下至队列，并进一步送到mailbox当中；若不符合mydestination的设定，则终止联机且不会进行信件内容(body)的传送；</li><li>若Mailto:主机名非为收信端本身，则开始进行转递(relay)的分析。</li><li>转递过程首先分析该信件的来源是否符合信任的客户端(这个客户端为步骤1所记录的发信主机喔)，亦即来源是否符合mynetworks的设定值，若符合则开始收下信件至队列中，并等待MDA将信件再转递出去，若不符mynetworks则继续下一步；</li><li>分析信件来源或目标是否符合 relay_domains 的设定，若符合则信件将被收下至队列，并等待 MDA 将信件再转递出去；</li><li>若这封信的标头数据都不合乎上述的规范，则终止联机，并不会接受信件的内容数据的。</li></ol><p>整个流程有点像底下这样：</p><p><a href="https://imgtu.com/i/Icj5Hf"><img src="https://z3.ax1x.com/2021/11/14/Icj5Hf.png" alt="Icj5Hf.png"></a></p><p>也就是说标头分析通过后，你的信件内容才会开始上传到主机的队列，然后透过MDA来处理该信件的流向。而不是将信件完整的传送到主机后才开始分析的喔！这个得要特别注意吶！而透过上述的流程后，在暂不考虑access以及MDA的分析机制中，一部MTA想要正确的收、发信件时，电子邮件必需要符合：</p><p>收信方面：必需符合底下需求：</p><ol><li>发信端必需符合 $inet_interfaces 的设定；</li><li>信件标头之收件者主机名必需符合 $mydestination 的设定， 或者收件主机名需要符合 $virtual_maps (与虚拟主机有关) 的设定；</li></ol><p>转递方面 (Relay)：必需符合底下需求：</p><ol><li>发信端必需符合 $inet_interfaces 的设定；</li><li>发信端来源必需为 $mynetworks 的设定；发信端来源或信件标头之收件者主机名符合 $relay_domains 之设定内容。 同样的原理与想法你可以将他用在 sendmail 的设定当中喔！ ^_^！不过很多垃圾信却是藉由这个预设的收发管道来发送， 怎么说呢？请看底下的分析：</li></ol><p>例题： 在我的主机上面竟然发现这样的广告信，那就是『利用我的主机发送广告信给我自己！』为什么这样也可以呢？</p><p>答： 首先，你必需要熟悉一下上述的流程，在第 2 个步骤当中我们知道，当主机收到一封信且这封信的目标是自己，并且也符合mydestination 的设定 时，该信件就会被收下来而不必验证客户端是否来自于mynetworks 了。所以说，任何人都可以用这个流程来寄信给你啊。不过，你的 MTA 并不是 open relay 啦，不会帮人家发送广告信的，不用担心。</p><p>例题：我的主机明明没有Openrelay，但很多其他的MTA管理员发信给我，说我的主机的某个账号持续发送广告信，但是我的主机明明没有那个账号啊！这是怎么回事？</p><p>答： 仔细看一下流程的步骤 1 与 2 ，确认该封信能否被收下来与发信端及收信端主机名有关。而我们知道在邮件的 header 里面还有一个 mail from 的标头设定项目，这个标头设定是我们在查阅邮件时看到的『回邮地址』，这个数据是可以伪造的！而且他与收发信件的数据无关！所以，您应该要告知对方MTA管理员，请他提供详细的log数据，才能够判断该封信是否由你的主机所发送出去的。<br>一般来说，目前的广告业者很多都是利用这种欺敌的方式来处理的，所以您必需要请对方提供详细的logfile数据以供查验才行喔！</p><h5 id="设定邮件主机权限与过滤机制-x2F-etc-x2F-postfix-x2F-access"><a href="#设定邮件主机权限与过滤机制-x2F-etc-x2F-postfix-x2F-access" class="headerlink" title="设定邮件主机权限与过滤机制 &#x2F;etc&#x2F;postfix&#x2F;access"></a>设定邮件主机权限与过滤机制 &#x2F;etc&#x2F;postfix&#x2F;access</h5><p>基本上，指定了Postfix的mynetworks的信任来源就能够让使用者relay了，不过如果你依照鸟哥上述的方式来设定你的mynetworks的话，那么我们还可以利用access这个档案来额外管理我们的信件过滤呢！基本的access语法为：</p><p>规范的范围或规则 Postfix 的动作 (范例如下)</p><p>IP&#x2F;部分 IP&#x2F;主机名&#x2F;Email 等 OK&#x2F;REJECT</p><p>假设你想要让 120.114.141.60 还有 .edu.tw 可以使用这部 MTA 来转递信件，且不许</p><p>av.com 以及 192.168.2.0&#x2F;24 这个网域的使用时，可以这样做：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/postfix/access </span></span><br><span class="line">120.114.141.60 </span><br><span class="line">OK</span><br><span class="line">.edu.tw </span><br><span class="line">OK</span><br><span class="line">av.com </span><br><span class="line">REJECT </span><br><span class="line">192.168.2. </span><br><span class="line">REJECT</span><br><span class="line"><span class="comment"># OK 表示可接受，而 REJECT 则表示拒绝。 </span></span><br><span class="line">[root@www ~]<span class="comment"># postmap hash:/etc/postfix/access </span></span><br><span class="line">[root@www ~]<span class="comment"># ls -l /etc/postfix/access* </span></span><br><span class="line">-rw-r--r--. 1 root root 19648 2011-08-09 14:05 /etc/postfix/access </span><br><span class="line">-rw-r--r--. 1 root root 12288 2011-08-09 14:08 /etc/postfix/access.db </span><br><span class="line"><span class="comment"># 你会发现有个 access.db 的档案才会同步更新！</span></span><br></pre></td></tr></table></figure><p>这才是 postfix 实际读取的！</p><p> 用这个档案设定最大的好处是，你不必重新启动 postfix，只要将数据库建立好， 立刻就生效了！这个档案还有其它的进阶功能，你可以自行进入该档案查阅就知道了。但是进阶设定还需要 main.cf 内的其他参数有设定才行！如果只有之前 $mynetworks 的设定值时，你只能利用 access.db 的方式来开放 relay 的能力而已。不过，至少他可以让我们的设定简化啰！ ^_^</p><h5 id="设定邮件别名：-x2F-etc-x2F-aliases-x2F-forward"><a href="#设定邮件别名：-x2F-etc-x2F-aliases-x2F-forward" class="headerlink" title="设定邮件别名： &#x2F;etc&#x2F;aliases, ~&#x2F;.forward"></a>设定邮件别名： &#x2F;etc&#x2F;aliases, ~&#x2F;.forward</h5><p> 想一想，你的主机里面不是有很多系统账号吗？例如named,apache,mysql…，那么以这些账号执行的程序若有讯息发生时，他会将该讯息以email的方式传给谁？应该就是传给named,apache…等账号自己吧。不过，你会发现其实这些系统账号的信息都是丢给root！这是因为其他的系统账号并没有密码可登入，自然也就无法接收任何邮件了，所以若有邮件就给系统管理员啰。不过，咱们的MTA怎么知道这些信件要传给root？这就得要aliases这个邮件别名配置文件来处理啦！</p><p> 邮件别名配置文件： &#x2F;etc&#x2F;aliases 在你的 &#x2F;etc&#x2F;aliases 档案内，你会发现类似底下的字样：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/aliases</span></span><br><span class="line">mailer-daemon: postmaster </span><br><span class="line">postmaster: root </span><br><span class="line">bin: root </span><br><span class="line">daemon: root </span><br><span class="line">....(底下省略)....</span><br></pre></td></tr></table></figure><p>左边是『别名』右边是『实际存在的使用者账号或者是 email address』！ 就是透过这个设定值，所以让我们可以将所有系统账号所属的信件通通丢给 root 啊！好，我现在将他扩大化，假如你的 MTA 内有一个实际的账号名称为 dmtsai ，这个使用者还想要使用 dermintsai 这个名称来收他的信件， 那么你可以这样做：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/aliases </span></span><br><span class="line">dermintsai: dmtsai</span><br><span class="line"><span class="comment"># 左边是你额外所设定的，右边则是实际接收这封信的账号！ </span></span><br><span class="line">[root@www ~]<span class="comment"># postalias hash:/etc/aliases </span></span><br><span class="line">[root@www ~]<span class="comment"># ll /etc/aliases* </span></span><br><span class="line">-rw-r--r--. 1 root root 1535 2011-08-09 14:10 /etc/aliases </span><br><span class="line">-rw-r--r--. 1 root root 12288 2011-08-09 14:10 /etc/aliases.db</span><br></pre></td></tr></table></figure><p>从此之后不论是 <a href="mailto:dmtsai@www.centos.vbird">dmtsai@www.centos.vbird</a> 还是 <a href="mailto:dermintsai@www.centos.vbird">dermintsai@www.centos.vbird</a> 都会将信件丢到 &#x2F;var&#x2F;spool&#x2F;mail&#x2F;dmtsai 这个信箱当中喔！很方便吧！</p><ul><li><p>&#x2F;etc&#x2F;aliases 实际应用一：</p><p>让一般账号可接收 root 的信，假设你是系统管理员，而你常用的一般账号为 dmtsai，但是系统出错时的重要信件都是寄给 root 啊， 偏偏 root 的信件不能被直接读取….所以说，如果能够将『给 root 的信也转寄一份给 dmtsai 』的话， 那就太好了！可以达到吗？当然可以！你可以这样做：</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/aliases </span></span><br><span class="line">root: root,dmtsai &lt;==鸟哥建议这种写法！ </span><br><span class="line"><span class="comment"># 信件会传给 root 与 dmtsai 这两个账号！ </span></span><br><span class="line">root: dmtsai &lt;==如果 </span><br><span class="line">dmtsai 不再是管理员怎办？ </span><br><span class="line"><span class="comment"># 从此 root 收不到信了，都由 dmtsai 来接受！</span></span><br><span class="line">[root@www ~]<span class="comment"># postalias hash:/etc/aliases</span></span><br></pre></td></tr></table></figure><p>上面那两行你可以择一使用，看看root要不要保留他的信件都可以的！鸟哥建议使用第一种方式，因为这样一 来，你的dmtsai可以收到root的信，且root自己也可以『备份』一份在他的信箱内，比较安全啦！</p><ul><li><p>&#x2F;etc&#x2F;aliases 实际应用二：</p><p>发送群组寄信功能 想象一个情况，如果你是学校的老师，你虽然只带一班导生，但是『每年都一班』时，如果有一天你要将信发给所有的学生，那在写email的标头时，可能就会头昏昏的了(因为联络人名单太多了)！这个时候你可以这样做：(假设主机上学生的账号为std001,std002…)</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/aliases </span></span><br><span class="line">student2011: </span><br><span class="line">std001,std002,std003,std004... </span><br><span class="line">[root@www ~]<span class="comment"># postalias hash:/etc/aliases</span></span><br></pre></td></tr></table></figure><p>如此一来只要寄信到这部主机的student2011这个不存在的账号时，该封信就会被分别存到各个账号里头去，管理上面是否很方便啊！^_^！事实上，邮件别名除了填写自己主机上面的实体用户之外，其实你可以填写外部主机的email喔！例如你要将本机的dermintsai那个不存在的用户的信件除了传给dmtsai之外，还要外传到<a href="mailto:dmtsai@mail.niki.centos.vbird">dmtsai@mail.niki.centos.vbird</a>时，可以这样做：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /etc/aliases </span></span><br><span class="line">dermintasi: dmtsai,dmtsai@mail.niki.centos.vbird </span><br><span class="line">[root@www ~]<span class="comment"># postalias hash:/etc/aliases</span></span><br></pre></td></tr></table></figure><p>很方便吧！更多的功能就期待您自行发掘啰！</p><p><strong>Tips:</strong> 在这本书里面，dmtai的家目录并非在正规的&#x2F;home底下，而是放置于&#x2F;winhome当中(参考第十六章的练习)，所以实际操作mail指令会出错！这是因为SELinux的关系！请参考&#x2F;var&#x2F;log&#x2F;messages底下的建议动作去处理即可！</p><p>个人化的邮件转递：~&#x2F;.forward虽然&#x2F;etc&#x2F;aliases可以帮我们达到邮件别名设定的好处，不过&#x2F;etc&#x2F;aliases是只有root才能修改的档案权限，那我们一般使用者如果也想要进行邮件转递时，该如何是好？没关系，可以透过自己家目录下的.forward这个档案喔！举例来说，我的dmtsai这个账号所接收到的信件除了自己要保留一份之外，还要传给本机上的vbird以及<a href="mailto:dmtsai@mail.niki.centos.vbird">dmtsai@mail.niki.centos.vbird</a>时，那你可以这样做设定：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[dmtsai@www ~]$ vim .forward</span><br><span class="line"><span class="comment"># 注意！我现在的身份现在是 dmtsai 这个一般身份，而且在他的家目录下！</span></span><br><span class="line">dmtsai </span><br><span class="line">vbird </span><br><span class="line">dmtsai@mail.niki.centos.vbird </span><br><span class="line">[dmtsai@www ~]$ <span class="built_in">chmod</span> 644 .forward</span><br></pre></td></tr></table></figure><p>记得这个档案内容是一行一个账号(或email)，而且权限方面非常重要：该档案所在用户家目录权限，其group、other不可以有写入权限。.forward档案权限，其group、other不可以有写入权限。如此一来这封信就会开始转递啰！有趣吧！^_^</p><h5 id="察看信件队列信息：-postqueue-mailq"><a href="#察看信件队列信息：-postqueue-mailq" class="headerlink" title="察看信件队列信息： postqueue, mailq"></a>察看信件队列信息： postqueue, mailq</h5><p> 说实话，设定到此为止咱们的postfix应该可以应付一般小型企业之mailserver的用途了！不过，有的时候毕竟因为网络的问题或者是对方主机的问题，可能导致某些信件无法送出而被暂存在队列中，那我们如何了解队列当中有哪些邮件呢？还有，在队列当中等待送出的信件是如何送出的呢？</p><p> 如果该封信在五分钟之内无法寄出，则通常系统会发出一封『警告信』给原发信者，告知该封邮件尚无法被寄送出去，不过，系统仍会持续的尝试寄出该封邮件；</p><p> 如果在四小时候仍无法寄出，系统会再次的发出警告信给原发信者；</p><p> 如果持续进行五天都无法将信件送出，那么该封邮件就会退回给原发信者了！当然啦，某些MTA已经取消了警告信的寄发，不过原则上，如果信件无法实时寄出去的话MTA还是会努力尝试5天的，如果接下来的5天都无法送出时，才会将原信件退回给发信者。一般来说，如果MTA设定正确且网络没有问题时，应该是不可能会有信件被放在队列当中而传不出去的，所以如果发现有信件在队列时，细的瞧一瞧啰！检查队列内容的方法可以使用mailq，也可以使用postqueue-p来检查的：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># postqueue -p </span></span><br><span class="line">Mail queue is empty</span><br></pre></td></tr></table></figure><p>若您的邮件如此显示时，恭喜您，没有什么问题邮件在队列当中。不过如果你将postfix关闭，并尝试发一封信给任何人，那就可能会出现如下的画面啦：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># /etc/init.d/postfix stop </span></span><br><span class="line">[root@www ~]<span class="comment"># echo &quot;test&quot; | mail -s &quot;testing queue&quot; root </span></span><br><span class="line">[root@www ~]<span class="comment"># postqueue -p </span></span><br><span class="line">postqueue: warning: Mail system is down -- accessing queue directly </span><br><span class="line">-Queue ID- --Size-- ----Arrival Time---- -Sender/Recipient------- </span><br><span class="line">5CFBB21DB 284 Tue Aug 9 06:21:58 root </span><br><span class="line">root </span><br><span class="line">-- 0 Kbytes <span class="keyword">in</span> 1 Request.</span><br><span class="line"><span class="comment"># 第一行就说明了无法寄出的原因为 Mail system is down 啦！ </span></span><br><span class="line"><span class="comment"># 然后才出现无法寄出的信件信息！包括来源与目标喔！</span></span><br></pre></td></tr></table></figure><p>输出的信息主要为：</p><ul><li>Queue ID：表示此封邮件队列的代表号 (ID)，这个号码是给 MTA 看的，我们看不懂不要紧；</li><li>Size ：这封信有多大容量 (bytes) 的意思；</li><li>Arrival Time：这封信什么时候进入队列的，并且可能会说明无法立即传送出去的原因；</li><li>Sender&#x2F;Recipient：送信与收信者的电子邮件啰！</li></ul><p>事实上这封信是放置在 &#x2F;var&#x2F;spool&#x2F;postfix 里面，由于信件内容已经编码为给MTA 看的资料排列， 所以你可以使用 postcat 来读出原信件的内容喔！例如这样做(注意看档名与 Queue ID 的对应！)：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># cd /var/spool/postfix/maildrop </span></span><br><span class="line">[root@www maildrop]<span class="comment"># postcat 5CFBB21DB &lt;==这个档名就是 Queue ID </span></span><br><span class="line">*** ENVELOPE RECORDS 5CFBB21DB *** &lt;==说明队列的编号啊 </span><br><span class="line">message_arrival_time: Tue Aug 9 14:21:58 2011 </span><br><span class="line">named_attribute: rewrite_context=<span class="built_in">local</span> &lt;==分析 named (DNS) 的特性来自本机 </span><br><span class="line">sender_fullname: root &lt;==发信者的大名与 email </span><br><span class="line">sender: root recipient: root &lt;==就是收件者啰！</span><br><span class="line">*** MESSAGE CONTENTS 5CFBB21DB *** &lt;==底下则是信件的实际内容啊！</span><br><span class="line">Date: Tue, 09 Aug 2011 14:21:58 +0800 </span><br><span class="line">To: root </span><br><span class="line">Subject: testing queue </span><br><span class="line">User-Agent: Heirloom mailx 12.4 7/29/08 </span><br><span class="line">MIME-Version: 1.0 </span><br><span class="line">Content-Type: text/plain; charset=us-ascii </span><br><span class="line">Content-Transfer-Encoding: 7bit </span><br><span class="line"><span class="built_in">test</span></span><br><span class="line">*** HEADER EXTRACTED 5CFBB21DB *** </span><br><span class="line">*** MESSAGE FILE END 5CFBB21DB ***</span><br></pre></td></tr></table></figure><p>如此一来你就知道目前我们的MTA主机有多少未送出的信件，还有未送出信件的内容你也可以追踪的到了！很不错，对吧！不过，如果你想要我们的postfix立刻尝试将这些在队列当中的信件寄出去，那又该如何是好？你有几个作法啦，可以重新启动postfix，也可以透过postfix的动作来处理，例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># /etc/init.d/postfix restart </span></span><br><span class="line">[root@www ~]<span class="comment"># postfix flush</span></span><br></pre></td></tr></table></figure><p>鸟哥个人比较建议使用postfixflush啰！自行参考看看先！^_^！接下来，让我们先来处理一下收信的MRA服务器，搞定后再来处理客户端的用户接口吧！</p><h5 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h5><p>因为整个MTA主要是透过SMTP(port25)进行信件传送的任务，因此，针对postfix来说，只要放行port25即可呦！修改一下iptables.rule吧！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /usr/local/virus/iptables/iptables.rule</span></span><br><span class="line"><span class="comment"># 找到底下这一行，并且将它批注拿掉！ </span></span><br><span class="line">iptables -A INPUT -p TCP -i <span class="variable">$EXTIF</span> --dport 25 --sport 1024:65534 -j ACCEPT </span><br><span class="line">[root@www ~]<span class="comment"># /usr/local/virus/iptables/iptables.rule</span></span><br></pre></td></tr></table></figure><p>这样就放行整个 Internet 对您服务器的 port 25 的读取啰！简单！搞定！</p><h4 id="MRA-服务器：-dovecot-设定"><a href="#MRA-服务器：-dovecot-设定" class="headerlink" title="MRA 服务器： dovecot 设定"></a>MRA 服务器： dovecot 设定</h4><p>除非你想要架设webmail在你的MTA上头，否则，你的MTA收下了信件，你总得连上MTA去收信吧？那么收信要用的是哪个通讯协议？就是22.1.4里面谈到的pop3以及imap啰！这就是所谓的MRA服务器！我们的CentOS6.x使用的是dovecot这个软件来达成MRA的相关通讯协议的！但由于pop3&#x2F;imap还有数据加密的版本，底下我们就依据是否加密(SSL)来设定dovecot吧！</p><h5 id="基础的-POP3-x2F-IMAP-设定"><a href="#基础的-POP3-x2F-IMAP-设定" class="headerlink" title="基础的 POP3&#x2F;IMAP 设定"></a>基础的 POP3&#x2F;IMAP 设定</h5><p>启动单纯的pop3&#x2F;imap是很简单的啦，你得要先确定已经安装了dovecot这个软件。而这个软件的配置文件只有一个，就是&#x2F;etc&#x2F;dovecot&#x2F;dovecot.conf。我们仅要启动pop3&#x2F;imap而已，所以可以这样设定即可：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># yum install dovecot </span></span><br><span class="line">[root@www ~]<span class="comment"># vim /etc/dovecot/dovecot.conf </span></span><br><span class="line"><span class="comment"># 找到底下这一行，大约是在第 25 行左右的地方，复制新增一行内容如下： </span></span><br><span class="line"><span class="comment">#protocols = imap pop3 lmtp </span></span><br><span class="line">protocols = imap pop3 </span><br><span class="line">[root@www ~]<span class="comment"># vim /etc/dovecot/conf.d/10-ssl.conf </span></span><br><span class="line">ssl = no &lt;==将第 6 行改成这样！</span><br></pre></td></tr></table></figure><p>改完之后你就可以启动dovecot啰！并且检查看看port110&#x2F;143(pop3&#x2F;imap)有没有启动啊？</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># /etc/init.d/dovecot start </span></span><br><span class="line">[root@www ~]<span class="comment"># chkconfig dovecot on </span></span><br><span class="line">[root@www ~]<span class="comment"># netstat -tlnp | grep dovecot </span></span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name </span><br><span class="line">tcp 0 0 :::110 :::* LISTEN </span><br><span class="line">14343/dovecot </span><br><span class="line">tcp 0 0 :::143 :::* LISTEN </span><br><span class="line">14343/dovecot</span><br></pre></td></tr></table></figure><p>耶！搞定！这样就可以提供使用者来收信件啦！真是不错啊！不过记得喔，这里只提供基本的明码pop3&#x2F;imap传输而已，如果想要启动其他如pop3s(传输加密机制)协议时，就得要额外的设定啰！</p><h5 id="加密的-POP3s-x2F-IMAPs-设定"><a href="#加密的-POP3s-x2F-IMAPs-设定" class="headerlink" title="加密的 POP3s&#x2F;IMAPs 设定"></a>加密的 POP3s&#x2F;IMAPs 设定</h5><p>如果担心数据在传输过程会被窃取，或者是你的登入信息(账号与密码)在使用pop3&#x2F;imap时会被窃听，那么这个pop3s&#x2F;imaps就显的重要啦！与之前的Apache相似的，其实我们都是透过openssl这个软件提供的SSL加密机制来进行数据的加密传输。方式很简单呢！预设的情况下，CentOS已经提供了SSL凭证范例文件给我们使用了。如果你一点都不想要使用预设的凭证，那么我们就来自己建一个吧！</p><h6 id="建立凭证："><a href="#建立凭证：" class="headerlink" title="建立凭证："></a>建立凭证：</h6><p>到系统提供的&#x2F;etc&#x2F;pki&#x2F;tls&#x2F;certs&#x2F;目录下建立所需要的pem凭证档：建立凭证：到系统提供的&#x2F;etc&#x2F;pki&#x2F;tls&#x2F;certs&#x2F;目录下建立所需要的pem凭证档：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># cd /etc/pki/tls/certs/ </span></span><br><span class="line">[root@www certs]<span class="comment"># make vbirddovecot.pem </span></span><br><span class="line">....(前面省略).... </span><br><span class="line">Country Name (2 letter code) [XX]:TW </span><br><span class="line">State or Province Name (full name) []:Taiwan </span><br><span class="line">Locality Name (eg, city) [Default City]:Tainan </span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:KSU </span><br><span class="line">Organizational Unit Name (eg, section) []:DIC Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:www.centos.vbird </span></span><br><span class="line"><span class="string">Email Address []:dmtsai@www.centos.vbird</span></span><br></pre></td></tr></table></figure><h6 id="因为担心-SELinux-的问题，所以建议将-pem-档案放置到系统默认的目录去较佳！"><a href="#因为担心-SELinux-的问题，所以建议将-pem-档案放置到系统默认的目录去较佳！" class="headerlink" title="因为担心 SELinux 的问题，所以建议将 pem 档案放置到系统默认的目录去较佳！"></a>因为担心 SELinux 的问题，所以建议将 pem 档案放置到系统默认的目录去较佳！</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www certs]<span class="comment"># mv vbirddovecot.pem ../../dovecot/ </span></span><br><span class="line">[root@www certs]<span class="comment"># restorecon -Rv ../../dovecot</span></span><br></pre></td></tr></table></figure><h6 id="开始处理-dovecot-conf，只要-pop3s-imaps-不要明码传输的咯！"><a href="#开始处理-dovecot-conf，只要-pop3s-imaps-不要明码传输的咯！" class="headerlink" title="开始处理 dovecot.conf，只要 pop3s, imaps 不要明码传输的咯！"></a>开始处理 dovecot.conf，只要 pop3s, imaps 不要明码传输的咯！</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www certs]<span class="comment"># vim /etc/dovecot/conf.d/10-auth.conf </span></span><br><span class="line">disable_plaintext_auth = <span class="built_in">yes</span> &lt;==第 9 行改成这样！取消批注！ </span><br><span class="line">[root@www certs]<span class="comment"># vim /etc/dovecot/conf.d/10-ssl.conf </span></span><br><span class="line">ssl = required &lt;==第 6 行改成这样 </span><br><span class="line">ssl_cert = &lt;/etc/pki/dovecot/vbirddovecot.pem &lt;==12, 13 行变这样 </span><br><span class="line">ssl_key = &lt;/etc/pki/dovecot/vbirddovecot.pem </span><br><span class="line">[root@www certs]<span class="comment"># vim /etc/dovecot/conf.d/10-master.conf </span></span><br><span class="line">inet_listener imap &#123; </span><br><span class="line">port = 0 &lt;== 15 行改成这样 </span><br><span class="line">&#125;</span><br><span class="line">inet_listener pop3 &#123;</span><br><span class="line">port = 0 &lt;== 36 行改成这样 </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="处理额外的-mail-location-设定值！很重要！否则网络收信会失败："><a href="#处理额外的-mail-location-设定值！很重要！否则网络收信会失败：" class="headerlink" title="处理额外的 mail_location 设定值！很重要！否则网络收信会失败："></a>处理额外的 mail_location 设定值！很重要！否则网络收信会失败：</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www certs]<span class="comment"># vim /etc/dovecot/conf.d/10-mail.conf </span></span><br><span class="line">mail_location = mbox:~/mail:INBOX=/var/mail/%u &lt;==第 30 行改这样</span><br></pre></td></tr></table></figure><h6 id="重新启动-dovecot-并且观察-port-的变化："><a href="#重新启动-dovecot-并且观察-port-的变化：" class="headerlink" title="重新启动 dovecot 并且观察 port 的变化："></a>重新启动 dovecot 并且观察 port 的变化：</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www certs]<span class="comment"># /etc/init.d/dovecot restart </span></span><br><span class="line">[root@www certs]<span class="comment"># netstat -tlnp | grep dovecot </span></span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name </span><br><span class="line">tcp 0 0 :::993 :::* LISTEN 14527/dovecot </span><br><span class="line">tcp 0 0 :::995 :::* LISTEN 14527/dovecot</span><br></pre></td></tr></table></figure><p>最终你看到的993是imaps而995则是pop3s啰！这样一来，你收信的时候，输入的账号密码就不怕被窃听了！反正是加密后的资料啰！很简单吧！</p><h5 id="防火墙设置-1"><a href="#防火墙设置-1" class="headerlink" title="防火墙设置"></a>防火墙设置</h5><p>因为上面的练习中，我们将pop3&#x2F;imap关闭，转而打开pop3s&#x2F;imaps了，因此防火墙启动的端口会不一样！请依据您实际的案例来设定你所需要的防火墙才好。我们这里主要是开放993,995两个端口呦！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@www ~]<span class="comment"># vim /usr/local/virus/iptables/iptables.rule </span></span><br><span class="line"><span class="comment"># 大约在 180 行左右，新增底下两行去！ </span></span><br><span class="line">iptables -A INPUT -p TCP -i <span class="variable">$EXTIF</span> --dport 993 --sport 1024:65534 -j ACCEPT </span><br><span class="line">iptables -A INPUT -p TCP -i <span class="variable">$EXTIF</span> --dport 995 --sport 1024:65534 -j ACCEPT </span><br><span class="line">[root@www ~]<span class="comment"># /usr/local/virus/iptables/iptables.rule</span></span><br></pre></td></tr></table></figure><p>如果你的pop3&#x2F;imap还是决定不加密的话，请将上面的993&#x2F;995改成143&#x2F;110即可！</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win迁移域</title>
      <link href="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/"/>
      <url>/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="准备两台WS22的服务器，一台创建域作为主域控制器，另一台作为额外域控制器。"><a href="#准备两台WS22的服务器，一台创建域作为主域控制器，另一台作为额外域控制器。" class="headerlink" title="准备两台WS22的服务器，一台创建域作为主域控制器，另一台作为额外域控制器。"></a>准备两台WS22的服务器，一台创建域作为主<a href="https://so.csdn.net/so/search?q=%E5%9F%9F%E6%8E%A7%E5%88%B6%E5%99%A8&spm=1001.2101.3001.7020">域控制器</a>，另一台作为额外域控制器。</h3><h5 id="需要转移的五种操作主机角色："><a href="#需要转移的五种操作主机角色：" class="headerlink" title="需要转移的五种操作主机角色："></a>需要转移的五种操作主机角色：</h5><h6 id="林范围"><a href="#林范围" class="headerlink" title="林范围:"></a>林范围:</h6><p>​*架构主机（Schema Master )</p><p>​*域命名主机（Domain Naming Master)</p><h6 id="域范围"><a href="#域范围" class="headerlink" title="域范围:"></a>域范围:</h6><p>​*PDC仿真主机（PDC Emulator Master）</p><p>​*RID主机（RID Master）</p><p>​*基础结构主机（Infrastructure Master)</p><h2 id="图形化"><a href="#图形化" class="headerlink" title="图形化"></a>图形化</h2><p>1.win+R运行输入regsvr32 schmmgmt.dll查看架构主机然后确定</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE.png" alt="截图"></p><p>显示成功就可以了</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE2.png" alt="截图"></p><p>2.再次win+r打开运行 输入mmc打开控制台</p><p> 点击左上角文件——添加&#x2F;删除管理单元（M），出现下图界面</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE3.png" alt="截图"></p><ol start="3"><li>点击添加“AD构”“AD用户和计算机”“AD域和信任关系”然后确定</li></ol><p> 以上所添加三种会出现在下图位置</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE4.png" alt="截图"></p><p> 4.右键AD架构，点击更改AD域控制器</p><p> 选择额外域控制器的名称，点击确定</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE5.png" alt="截图"></p><p>先给administrator用户权限</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE6.png" alt="截图"></p><p> 再次右键点击操作主机</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE7.png" alt="截图"></p><p> 点击更改，点击“是”</p><p> 右键AD用户和计算机，选择更改域控制器、操作主机</p><p>选择额外域控制器然后确定</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE8.png" alt="截图"></p><p>点击操作主机后会出现：RID   PDC   基础结构三种均需要转移 </p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE9.png" alt="截图"></p><p>PDC: 打开操作主机后，点击更改，出现弹窗点击是</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE10.png" alt="截图"></p><p>基础结构:点击更改，出现弹窗点击是 </p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE11.png" alt="截图"></p><p>6.打开控制台，右键AD域和信任关系，点击更改AD域控制器</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE12.png" alt="截图"></p><p>选择额外域控制器点击确定</p><p>最后用命令来查看一下转移域的情况</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netdom query fsmo  检查系统信息</span><br></pre></td></tr></table></figure><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE13.png" alt="截图"></p><h2 id="命令方式："><a href="#命令方式：" class="headerlink" title="命令方式："></a>命令方式：</h2><p>ntdsutil</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE14.png" alt="迁移域"></p><p>？可以获取提示</p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE15.png" alt="迁移域"></p><p><img src="/2022/05/14/%E8%BF%81%E7%A7%BB%E5%9F%9F/%E6%88%AA%E5%9B%BE16.png" alt="迁移域"></p><p>按照提示来配置5大区域就行了</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux仓库&amp;&amp; RPM</title>
      <link href="/2022/05/14/Linux%E4%BB%93%E5%BA%93/"/>
      <url>/2022/05/14/Linux%E4%BB%93%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>在Red Hat Enterprise Linux 8.0中，统一的ISO自动加载BaseOS和AppStream安装源存储库。</p><p>已经存在于光盘链接中，只不过要分别去配置.repo文件</p><p>BaseOS 存储库 </p><ul><li>BaseOS 存储库以传统 RPM 包的形式提供底层核心 OS 内容   –就是一些基础的服务(http,nfs等）</li></ul><p>AppStream 存储库 </p><ul><li>Application Stream 存储库提供您可能希望在给定用户空间中运行的所有应用程序。</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[name]</span><br><span class="line"></span><br><span class="line">name=name</span><br><span class="line"></span><br><span class="line">baseurl=file://media/cdrom/BaseOS</span><br><span class="line"></span><br><span class="line">(baseurl=[http://ip/cdrom/BaseOS)](http://ip/cdrom/BaseOS)</span><br><span class="line"></span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">[name]</span><br><span class="line"></span><br><span class="line">name=name</span><br><span class="line"></span><br><span class="line">baseurl= file://media/cdrom/AppStream</span><br><span class="line"></span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Cockpit（飞机驾驶舱）使用方法</span><br><span class="line"></span><br><span class="line">web网页好管理      端口9090</span><br><span class="line"></span><br><span class="line">安装cockpit</span><br><span class="line"></span><br><span class="line">Yum -y install cockpit</span><br><span class="line"></span><br><span class="line">启用cockpit</span><br><span class="line"></span><br><span class="line">Systemctl <span class="built_in">enable</span> --now cockpit.socket</span><br><span class="line"></span><br><span class="line">设置开机自启动同时开启服务一条命令就可以搞定</span><br></pre></td></tr></table></figure><p><strong>提示信息说，虚拟机挂着光驱光驱时提示只读。</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount: block device /dev/sr0 is write-protected, mounting read-only </span><br></pre></td></tr></table></figure><p>用以下命令可解决该报错：</p><figure class="highlight objc"><table><tr><td class="code"><pre><span class="line">mount -o remount,rw /dev/cdrom /mnt</span><br></pre></td></tr></table></figure><h1 id="Rpm"><a href="#Rpm" class="headerlink" title="Rpm"></a>Rpm</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm ivh *.rpm --force    安装以.rpm结尾的文件</span><br><span class="line">rpm -e mysql　　// 普通删除模式</span><br><span class="line">rpm -e --nodeps mysql　　// 强力删除模式，如果使用上面命令删除时，提示有依赖的其它文件，则用该命令可以对其进行强力删除</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本</title>
      <link href="/2022/05/14/Shell%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/05/14/Shell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2022/05/14/Shell%E8%84%9A%E6%9C%AC/%E6%88%AA%E5%9B%BE.png" alt="题目"></p><p><img src="/2022/05/14/Shell%E8%84%9A%E6%9C%AC/%E6%88%AA%E5%9B%BE2.png" alt="题目"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#/bin/sh                       ---shell脚本</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="built_in">test</span> ];                ---<span class="keyword">if</span>有<span class="built_in">test</span>这个文件夹</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">rm</span> -rf <span class="built_in">test</span>               ---然后删除<span class="built_in">test</span>这个文件夹</span><br><span class="line"><span class="built_in">mkdir</span> <span class="built_in">test</span>                     </span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span></span><br><span class="line"><span class="keyword">else</span>                            ---如果有这个文件夹</span><br><span class="line"><span class="built_in">mkdir</span> <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> <span class="built_in">test</span></span><br><span class="line"><span class="keyword">fi</span>;                            ---<span class="keyword">if</span>命令完成</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;101..120&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">if</span> [ -f File<span class="variable">$i</span> ];</span><br><span class="line"><span class="keyword">then</span> <span class="built_in">rm</span> -rf File<span class="variable">$i</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File<span class="variable">$i</span>&quot;</span> &gt; File<span class="variable">$i</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;File<span class="variable">$i</span>&quot;</span> &gt; File<span class="variable">$i</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名解析</title>
      <link href="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>unbound:(在&#x2F;etc&#x2F;unbound.conf里面都可以找到）</p><p>​                配置侦听接口</p><p>​         interface：0.0.0.0</p><p>​          配置客户端访问权限</p><p>​         access-control：192.168.2.0&#x2F;24</p><p>​           配置转发</p><p>​                name:”whl.com”</p><p>​         foreward-addr:192.168.2.254   (转发地址）</p><p>​         forward-first:yes   (应用第一个）</p><p>在local.d里面也可以配置</p><p>Bind:</p><p>主配置区域：&#x2F;etc&#x2F;named&#x2F;comf</p><p>区域配置： &#x2F;etc&#x2F;named.rfc1912.zones</p><p>数据配置： &#x2F;var&#x2F;named</p><p><strong>listen { any; }; 而不是all</strong>  </p><p>Blackhole { 禁止的网段；}；</p><p>nslookup使用方法：</p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE.png" alt="题目"></p><p>配置rndc技术提供不间断的DNS服务</p><p>server：配置—–rndc-confgen</p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE2.png" alt="题目"></p><p>没#号的是配置控制端的，有#号的是配置服务器的—-&#x2F;etc&#x2F;named.conf</p><p>server:&#x2F;etc&#x2F;named.conf</p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE3.png" alt="题目"></p><p>client:&#x2F;etc&#x2F;rndc.conf</p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE4.png" alt="题目"></p><p><strong>client:rndc status</strong></p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE5.png" alt="题目"></p><p>成功配置</p><p>辅助DNS配置</p><p>server:</p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE6.png" alt="题目"></p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE7.png" alt="题目"></p><p>client:</p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE8.png" alt="题目"></p><p><img src="/2022/05/14/%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/%E6%88%AA%E5%9B%BE9.png" alt="题目"></p><p>自动从服务器传送配置1和2到辅助DNS（没有就是配置错了或者是防火墙没关）</p><p><strong>CentOS中禁用递归查询</strong></p><p>[root@localhost ~]# vim &#x2F;etc&#x2F;named.conf 18         recursion yes;   # 第18行 ，把yes改为no就行了</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>制作rocky镜像</title>
      <link href="/2022/05/14/%E5%88%B6%E4%BD%9Crocky%E9%95%9C%E5%83%8F/"/>
      <url>/2022/05/14/%E5%88%B6%E4%BD%9Crocky%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="此教程不适用于VNC配置，直接用一个终端来解决qcow2镜像"><a href="#此教程不适用于VNC配置，直接用一个终端来解决qcow2镜像" class="headerlink" title="此教程不适用于VNC配置，直接用一个终端来解决qcow2镜像"></a>此教程不适用于VNC配置，直接用一个终端来解决qcow2镜像</h3><p>内存最好越大越好，直接200G</p><p>关闭防火墙和Selinux</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>安装kvm环境：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install qemu-kvm qemu-img virt-manager libvirt libvirt-python virt-* libvirt-client</span><br><span class="line">启动服务：systemctl start libvirtd</span><br><span class="line">systemctl <span class="built_in">enable</span> libvirtd</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.ip_forward =1 &quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p配置ip转发</span><br></pre></td></tr></table></figure><p>安装后检查是否加载了 <strong>kvm.ko</strong>内核模块：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep vhost</span><br></pre></td></tr></table></figure><p>把ISO镜像放进&#x2F;var&#x2F;lib&#x2F;libvirt&#x2F;images&#x2F;Rocky8.5.iso</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brctl show virbr0查看virbr0的网桥（要把libvirtd开启才有）</span><br></pre></td></tr></table></figure><p>创建一个ks.cfg的文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ks.cfg</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">install</span><br><span class="line">cdrom</span><br><span class="line">lang en_US.UTF-8</span><br><span class="line">keyboard us</span><br><span class="line">network --bootproto=dhcp --noipv6 --onboot=on --device=eth0</span><br><span class="line">rootpw --plaintext StrongRootPassword---这里配置root的密码 默认密码为StrongRootPassword</span><br><span class="line">firewall --disabled</span><br><span class="line">selinux --permissive</span><br><span class="line">timezone UTC</span><br><span class="line">bootloader --<span class="built_in">timeout</span>=1 --location=mbr --append=<span class="string">&quot;net.ifnames=0 biosdevname=0&quot;</span></span><br><span class="line">text</span><br><span class="line">skipx</span><br><span class="line">zerombr</span><br><span class="line">clearpart --all --initlabel</span><br><span class="line">autopart --nohome --nolvm --noboot</span><br><span class="line">firstboot --disabled</span><br><span class="line">reboot --eject</span><br><span class="line">user --name=rocky --plaintext --password StrongRockySUserPassword ---这里配置rocky用户</span><br><span class="line"></span><br><span class="line">%packages --ignoremissing --excludedocs --instLangs=en_US.utf8</span><br><span class="line"><span class="comment"># rocky needs this to copy initial files via scp</span></span><br><span class="line">openssh-clients</span><br><span class="line">sudo</span><br><span class="line">selinux-policy-devel</span><br><span class="line">nfs-utils</span><br><span class="line">net-tools</span><br><span class="line">tar</span><br><span class="line">bzip2</span><br><span class="line">drpm</span><br><span class="line">rsync</span><br><span class="line">dnf-utils</span><br><span class="line">elfutils-libelf-devel</span><br><span class="line">network-scripts</span><br><span class="line">-fprintd-pam</span><br><span class="line">-intltool</span><br><span class="line">-iwl*-firmware</span><br><span class="line">-microcode_ctl</span><br><span class="line">%end</span><br><span class="line"></span><br><span class="line">%post</span><br><span class="line"><span class="comment"># sudo</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Defaults:rocky !requiretty&#x27;</span> &gt; /etc/sudoers.d/rocky</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;%rocky ALL=(ALL) NOPASSWD: ALL&#x27;</span> &gt;&gt; /etc/sudoers.d/rocky</span><br><span class="line"><span class="built_in">chmod</span> 440 /etc/sudoers.d/rocky</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Since we disable consistent network naming, we need to make sure the eth0</span></span><br><span class="line"><span class="comment"># configuration file is in place so it will come up.</span></span><br><span class="line"><span class="comment"># Delete other network configuration first because RHEL/C7 networking will not</span></span><br><span class="line"><span class="comment"># restart successfully if there are configuration files for devices that do not</span></span><br><span class="line"><span class="comment"># exist.</span></span><br><span class="line"><span class="built_in">rm</span> -f /etc/sysconfig/network-scripts/ifcfg-e*</span><br><span class="line"><span class="built_in">cat</span> &gt; /etc/sysconfig/network-scripts/ifcfg-eth0 &lt;&lt; <span class="string">_EOF_</span></span><br><span class="line"><span class="string">TYPE=Ethernet</span></span><br><span class="line"><span class="string">PROXY_METHOD=none</span></span><br><span class="line"><span class="string">BROWSER_ONLY=no</span></span><br><span class="line"><span class="string">BOOTPROTO=dhcp</span></span><br><span class="line"><span class="string">DEFROUTE=yes</span></span><br><span class="line"><span class="string">IPV4_FAILURE_FATAL=no</span></span><br><span class="line"><span class="string">IPV6INIT=yes</span></span><br><span class="line"><span class="string">IPV6_AUTOCONF=yes</span></span><br><span class="line"><span class="string">IPV6_DEFROUTE=yes</span></span><br><span class="line"><span class="string">IPV6_FAILURE_FATAL=no</span></span><br><span class="line"><span class="string">IPV6_ADDR_GEN_MODE=stable-privacy</span></span><br><span class="line"><span class="string">NAME=eth0</span></span><br><span class="line"><span class="string">DEVICE=eth0</span></span><br><span class="line"><span class="string">ONBOOT=yes</span></span><br><span class="line"><span class="string">_EOF_</span></span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p>把文件用http来使用</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> --now httpd </span><br><span class="line"><span class="built_in">cp</span> ks.cfg /var/www/html</span><br></pre></td></tr></table></figure><p>创建虚拟机rocky</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virt-install \</span><br><span class="line">  --name rocky \</span><br><span class="line">  --memory=2048 \</span><br><span class="line">  --vcpus=2 \</span><br><span class="line">  --os-type linux \</span><br><span class="line">  --location /var/lib/libvirt/images/Rocky-8.5-x86_64-minimal.iso \   ---这个是iso文件</span><br><span class="line">  --disk size=10  \---磁盘大小10G</span><br><span class="line">  --network bridge=virbr0 \---网桥为virbr0</span><br><span class="line">  --graphics=none \</span><br><span class="line">  --os-variant=rhl8.0 \</span><br><span class="line">  --console pty,target_type=serial \</span><br><span class="line">  --initrd-inject ks.cfg \</span><br><span class="line">  --extra-args=<span class="string">&quot;ks=http://192.168.122.1/ks.cfg console=tty0 console=ttyS0,115200n8&quot;</span></span><br></pre></td></tr></table></figure><p>解释：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rocky是创建的虚拟机域的名称。</span><br><span class="line">2048 是以兆字节为单位分配的内存量</span><br><span class="line">2 是CPU核心数</span><br><span class="line">/var/lib/libvirt/images/Rocky-8.4-x86_64-minimal.iso是 ISO 文件的路径</span><br><span class="line">10是以 GB 为单位创建的虚拟磁盘的大小</span><br><span class="line">virbr0是附加到 VM 网络接口的 Linux 桥或 Open vSwitch 桥的名称。</span><br><span class="line">http://192.168.122.1/ks.cfg是创建的 kickstart 文件的 HTTP URL – 相应地更改。</span><br></pre></td></tr></table></figure><p>等待安装完成</p><p>用root密码登录（默认为StrongRootPassword)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">安装有用的安装包：</span><br><span class="line">yum install -y net-tools vim </span><br><span class="line">配置/etc/yum.repos.d文件夹</span><br></pre></td></tr></table></figure><p>配置 cloud-init 并将<strong>rocky</strong>设置为默认登录用户：(默认是root用户)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># vim /etc/cloud/cloud.cfg</span><br><span class="line"># On line 5 : set to 1 if you want to enable SSH password authentication</span><br><span class="line">ssh_pwauth:   1 # Not recommended for cloud use</span><br><span class="line"></span><br><span class="line"># Line 57 - change system user from cloud-user to rocky</span><br><span class="line">system_info:</span><br><span class="line">  default_user:</span><br><span class="line">    name: rocky</span><br><span class="line">    lock_passwd: false</span><br><span class="line">    gecos: Cloud User</span><br><span class="line">    groups: [adm, systemd-journal]</span><br><span class="line">    sudo: [&quot;ALL=(ALL) NOPASSWD:ALL&quot;]</span><br><span class="line">    shell: /bin/bash</span><br></pre></td></tr></table></figure><p>在 VM 中创建一个名为<em><strong>cleanup.sh的脚本文件。</strong></em></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim cleanup.sh</span><br></pre></td></tr></table></figure><p>将以下内容粘贴到文件中：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/sh -eux</span><br><span class="line"></span><br><span class="line">major_version=&quot;`sed &#x27;s/^.\+ release \([.0-9]\+\).*/\1/&#x27; /etc/redhat-release | awk -F. &#x27;&#123;print $1&#125;&#x27;`&quot;;</span><br><span class="line"></span><br><span class="line"># make sure we use dnf on EL 8+</span><br><span class="line">if [ &quot;$major_version&quot; -ge 8 ]; then</span><br><span class="line">  pkg_cmd=&quot;dnf&quot;</span><br><span class="line">else</span><br><span class="line">  pkg_cmd=&quot;yum&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;Remove development and kernel source packages&quot;</span><br><span class="line">$pkg_cmd -y remove gcc cpp gc kernel-devel kernel-headers glibc-devel elfutils-libelf-devel glibc-headers kernel-devel kernel-headers</span><br><span class="line"></span><br><span class="line">if [ &quot;$major_version&quot; -ge 8 ]; then</span><br><span class="line">  echo &quot;remove orphaned packages&quot;</span><br><span class="line">  dnf -y autoremove</span><br><span class="line">  echo &quot;Remove previous kernels that preserved for rollbacks&quot;</span><br><span class="line">  dnf -y remove -y $(dnf repoquery --installonly --latest-limit=-1 -q)</span><br><span class="line">else</span><br><span class="line">  echo &quot;Remove previous kernels that preserved for rollbacks&quot;</span><br><span class="line">  if ! command -v package-cleanup &gt;/dev/null 2&gt;&amp;1; then</span><br><span class="line">    yum -y install yum-utils</span><br><span class="line">  fi</span><br><span class="line">  package-cleanup --oldkernels --count=1 -y</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># Avoid ~200 meg firmware package we don&#x27;t need</span><br><span class="line"># this cannot be done in the KS file so we do it here</span><br><span class="line">echo &quot;Removing extra firmware packages&quot;</span><br><span class="line">$pkg_cmd -y remove linux-firmware</span><br><span class="line"></span><br><span class="line">echo &quot;clean all package cache information&quot;</span><br><span class="line">$pkg_cmd -y clean all  --enablerepo=\*;</span><br><span class="line"></span><br><span class="line"># Clean up network interface persistence</span><br><span class="line">rm -f /etc/udev/rules.d/70-persistent-net.rules;</span><br><span class="line">mkdir -p /etc/udev/rules.d/70-persistent-net.rules;</span><br><span class="line">rm -f /lib/udev/rules.d/75-persistent-net-generator.rules;</span><br><span class="line">rm -rf /dev/.udev/;</span><br><span class="line"></span><br><span class="line">for ndev in `ls -1 /etc/sysconfig/network-scripts/ifcfg-*`; do</span><br><span class="line">    if [ &quot;`basename $ndev`&quot; != &quot;ifcfg-lo&quot; ]; then</span><br><span class="line">        sed -i &#x27;/^HWADDR/d&#x27; &quot;$ndev&quot;;</span><br><span class="line">        sed -i &#x27;/^UUID/d&#x27; &quot;$ndev&quot;;</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;truncate any logs that have built up during the install&quot;</span><br><span class="line">find /var/log -type f -exec truncate --size=0 &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">echo &quot;remove the install log&quot;</span><br><span class="line">rm -f /root/anaconda-ks.cfg /root/original-ks.cfg</span><br><span class="line"></span><br><span class="line">echo &quot;remove the contents of /tmp and /var/tmp&quot;</span><br><span class="line">rm -rf /tmp/* /var/tmp/*</span><br><span class="line"></span><br><span class="line">echo &quot;Clear the history so our install commands aren&#x27;t there&quot;</span><br><span class="line">rm -f /root/.wget-hsts</span><br><span class="line">export HISTSIZE=0</span><br></pre></td></tr></table></figure><p>在脚本中添加执行位：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x cleanup.sh</span><br></pre></td></tr></table></figure><p>然后运行脚本执行清理过程：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./cleanup.sh</span><br></pre></td></tr></table></figure><p>退出终端：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -f cleanup.sh</span><br><span class="line">cat /dev/null &gt; ~/.bash_history &amp;&amp; history -c &amp;&amp; shutdown -h now</span><br></pre></td></tr></table></figure><p>按**CTRL+]**关闭 VM 控制台</p><p>这样qcow2的镜像就在&#x2F;var&#x2F;lib&#x2F;libvirt&#x2F;images&#x2F;rocky8.qcow2</p><p>导出到云平台就能使用</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ftp用户隔离</title>
      <link href="/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/"/>
      <url>/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>FTP AD域用户隔离</p><p>1.配置共享文件夹\dc\ftp_root文件夹里按照题目配置名字（例如caiwu101）</p><p><img src="/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/%E6%88%AA%E5%9B%BE.png" alt="截图"></p><p>配置用户的主目录：</p><p>ADSI编辑器：</p><p>msIIS-FTPDir配置用户的主目录</p><p>msIIS-FTPDir 配置用户的UNC地址</p><p><img src="/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/%E6%88%AA%E5%9B%BE2.png" alt="截图"></p><p>3、配置有访问用户目录权限的账号</p><p>administrator已经有权限</p><p><img src="/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/%E6%88%AA%E5%9B%BE3.png" alt="截图"></p><p>新建用户FTP</p><p>委派控制给FTP</p><p><img src="/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/%E6%88%AA%E5%9B%BE4.png" alt="截图"></p><p>4.配置FTP隔离用户</p><p><img src="/2022/05/14/ftp%E7%94%A8%E6%88%B7%E9%9A%94%E7%A6%BB/%E6%88%AA%E5%9B%BE5.png" alt="截图"></p><p>直接在cmd里测试</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22</title>
      <link href="/2022/04/16/22/"/>
      <url>/2022/04/16/22/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="迁移域："><a href="#迁移域：" class="headerlink" title="迁移域："></a>迁移域：</h1><h2 id="netdom-query-fsmo-检查系统信息"><a href="#netdom-query-fsmo-检查系统信息" class="headerlink" title="netdom query fsmo  检查系统信息"></a>netdom query fsmo  检查系统信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Move-ADDirectoryServerOperationMasterRole -Identity ServerC -OperationMasterRole SchemaMaster,DomainNamingMaster,PDCEmulator,RIDMaster,InfrastructureMaster -force<span class="comment">#ServerC为目标服务器名称</span></span><br></pre></td></tr></table></figure><h4 id="这里要5个yes，因为有5个大块迁移"><a href="#这里要5个yes，因为有5个大块迁移" class="headerlink" title="这里要5个yes，因为有5个大块迁移"></a>这里要5个yes，因为有5个大块迁移</h4><p>   <img src="/2022/04/16/22/1.png" alt="题目"></p><h4 id="从AD域更改域控制器，DNS更改域控制器，最后把DC1降级，从AD域用户删除DC1这台机"><a href="#从AD域更改域控制器，DNS更改域控制器，最后把DC1降级，从AD域用户删除DC1这台机" class="headerlink" title="从AD域更改域控制器，DNS更改域控制器，最后把DC1降级，从AD域用户删除DC1这台机"></a>从AD域更改域控制器，DNS更改域控制器，最后把DC1降级，从AD域用户删除DC1这台机</h4><h1 id="信任域："><a href="#信任域：" class="headerlink" title="信任域："></a>信任域：</h1><p> <img src="/2022/04/16/22/10.png" alt="题目"></p><h3 id="主要配置DNS为信任域的IP-DNS能解析出来，配置双向信任，组策略配置运行本地登录"><a href="#主要配置DNS为信任域的IP-DNS能解析出来，配置双向信任，组策略配置运行本地登录" class="headerlink" title="主要配置DNS为信任域的IP,DNS能解析出来，配置双向信任，组策略配置运行本地登录"></a>主要配置DNS为信任域的IP,DNS能解析出来，配置双向信任，组策略配置运行本地登录</h3><h1 id="批量创建用户："><a href="#批量创建用户：" class="headerlink" title="批量创建用户："></a>批量创建用户：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> /l %i</span><br><span class="line"><span class="keyword">in</span> (1,1,50)----(1 从1开始，1 每次加上一, 50 到50结束）</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">net user <span class="built_in">test</span>%i 123456 /add</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">批量创建test1到test50用户</span><br></pre></td></tr></table></figure><h1 id="组策略配置："><a href="#组策略配置：" class="headerlink" title="组策略配置："></a>组策略配置：</h1><h4 id="二-组策略"><a href="#二-组策略" class="headerlink" title="(二)组策略"></a><strong>(二)组策略</strong></h4><h3 id="2-域中主机（含域控制器）自动申请“计算机”模板证书，自动注册“工作站身份验证”模板证书，该模板可用作“服务器身份验证”。"><a href="#2-域中主机（含域控制器）自动申请“计算机”模板证书，自动注册“工作站身份验证”模板证书，该模板可用作“服务器身份验证”。" class="headerlink" title="2.域中主机（含域控制器）自动申请“计算机”模板证书，自动注册“工作站身份验证”模板证书，该模板可用作“服务器身份验证”。"></a>2.域中主机（含域控制器）自动申请“计算机”模板证书，自动注册“工作站身份验证”模板证书，该模板可用作“服务器身份验证”。</h3><p>   <img src="/2022/04/16/22/2.png" alt="题目"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">windows3 和 windows4 之间通信采用 IPSec 安全连接，采用计算机证书验证。--直接配置IPSec的高级设置</span><br></pre></td></tr></table></figure><h3 id="3-拒绝-dev-组从网络访问域控制器，允许-manager-组本地登录域控制器。"><a href="#3-拒绝-dev-组从网络访问域控制器，允许-manager-组本地登录域控制器。" class="headerlink" title="3.拒绝 dev 组从网络访问域控制器，允许 manager 组本地登录域控制器。"></a>3.拒绝 dev 组从网络访问域控制器，允许 manager 组本地登录域控制器。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">计算机策略--安全策略---从网络访问</span><br></pre></td></tr></table></figure><h3 id="4-为正在登录此计算机的所有用户设置漫游配置文件路径为windows1-的-C-share，每个用户提供单独的配置文件文件夹。"><a href="#4-为正在登录此计算机的所有用户设置漫游配置文件路径为windows1-的-C-share，每个用户提供单独的配置文件文件夹。" class="headerlink" title="4.为正在登录此计算机的所有用户设置漫游配置文件路径为windows1 的 C:\share，每个用户提供单独的配置文件文件夹。"></a>4.为正在登录此计算机的所有用户设置漫游配置文件路径为windows1 的 C:\share，每个用户提供单独的配置文件文件夹。</h3><p>  <img src="/2022/04/16/22/3.png" alt="题目"></p><h3 id="5-用户的主文件夹为-windows1-的-C-home-驱动器号为-X。"><a href="#5-用户的主文件夹为-windows1-的-C-home-驱动器号为-X。" class="headerlink" title="5.用户的主文件夹为 windows1 的 C:\home,驱动器号为 X。"></a>5.用户的主文件夹为 windows1 的 C:\home,驱动器号为 X。</h3><p><img src="/2022/04/16/22/4.png" alt="题目"></p><h3 id="6-每个用户的“文档”文件夹重定向到windows1的C-Document，为每一用户创建一个文件夹。"><a href="#6-每个用户的“文档”文件夹重定向到windows1的C-Document，为每一用户创建一个文件夹。" class="headerlink" title="6.每个用户的“文档”文件夹重定向到windows1的C:\Document，为每一用户创建一个文件夹。"></a>6.每个用户的“文档”文件夹重定向到windows1的C:\Document，为每一用户创建一个文件夹。</h3><p><img src="/2022/04/16/22/5.png" alt="题目"></p><h3 id="7-所有域用户使用漫游用户配置文件，配置文件存储在-windows1-的-C-Profiles-文件夹，为每个用户提供单独的配置文件文件夹。"><a href="#7-所有域用户使用漫游用户配置文件，配置文件存储在-windows1-的-C-Profiles-文件夹，为每个用户提供单独的配置文件文件夹。" class="headerlink" title="7.所有域用户使用漫游用户配置文件，配置文件存储在 windows1 的 C:\Profiles 文件夹，为每个用户提供单独的配置文件文件夹。"></a>7.所有域用户使用漫游用户配置文件，配置文件存储在 windows1 的 C:\Profiles 文件夹，为每个用户提供单独的配置文件文件夹。</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">这个在用户配置文件里配置为\\windows1\Profiles\%USERNAME%--会自动新建配置文件文件夹</span><br></pre></td></tr></table></figure><p><img src="/2022/04/16/22/12.png" alt="题目"></p><h3 id="8-新建-C-DocShare-共享文件夹，共享名称为-ShareDoc，管理员组有完全访问权限，其他用户有只读权限；在-AD-DS-中发布该共享。"><a href="#8-新建-C-DocShare-共享文件夹，共享名称为-ShareDoc，管理员组有完全访问权限，其他用户有只读权限；在-AD-DS-中发布该共享。" class="headerlink" title="8.新建 C:\DocShare 共享文件夹，共享名称为 ShareDoc，管理员组有完全访问权限，其他用户有只读权限；在 AD DS 中发布该共享。"></a>8.新建 C:\DocShare 共享文件夹，共享名称为 ShareDoc，管理员组有完全访问权限，其他用户有只读权限；在 AD DS 中发布该共享。</h3><p><img src="/2022/04/16/22/6.png" alt="题目"></p><h3 id="9-允许-manager1-用户远程登录到域控制器，manager1-登录系统时，对-windows1-的-C-DocShare-共享文件夹映射驱动器-Z。"><a href="#9-允许-manager1-用户远程登录到域控制器，manager1-登录系统时，对-windows1-的-C-DocShare-共享文件夹映射驱动器-Z。" class="headerlink" title="9.允许 manager1 用户远程登录到域控制器，manager1 登录系统时，对 windows1 的 C:\DocShare 共享文件夹映射驱动器 Z。"></a>9.允许 manager1 用户远程登录到域控制器，manager1 登录系统时，对 windows1 的 C:\DocShare 共享文件夹映射驱动器 Z。</h3><p><img src="/2022/04/16/22/7.png" alt="题目"></p><p><img src="/2022/04/16/22/8.png" alt="题目"></p><h3 id="10-拒绝用户对任何可移动存储类的权限。"><a href="#10-拒绝用户对任何可移动存储类的权限。" class="headerlink" title="10.拒绝用户对任何可移动存储类的权限。"></a>10.拒绝用户对任何可移动存储类的权限。</h3><p><img src="/2022/04/16/22/9.png" alt="题目"></p><h3 id="11"><a href="#11" class="headerlink" title="11."></a>11.</h3><p><img src="/2022/04/16/22/13.png" alt="题目"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">这题考点是在GPO下配置漫游用户配置文件，使用的是隐藏共享share，共享资源为\ip\share\$username$</span><br></pre></td></tr></table></figure><h3 id="12-自动更新根证书"><a href="#12-自动更新根证书" class="headerlink" title="12.自动更新根证书"></a>12.自动更新根证书</h3><p><img src="/2022/04/16/22/14.png" alt="题目"></p><p><img src="/2022/04/16/22/15.png" alt="题目"></p><h3 id="13"><a href="#13" class="headerlink" title="13."></a>13.</h3><p><img src="/2022/04/16/22/16.png" alt="题目"></p><p><img src="/2022/04/16/22/17.png" alt="题目"></p><h3 id="linux信任证书：https-access-redhat-com-documentation-zh-cn-red-hat-enterprise-linux-8-html-security-hardening-managing-trusted-system-certificates-using-shared-system-certificates"><a href="#linux信任证书：https-access-redhat-com-documentation-zh-cn-red-hat-enterprise-linux-8-html-security-hardening-managing-trusted-system-certificates-using-shared-system-certificates" class="headerlink" title="linux信任证书：https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/8/html/security_hardening/managing-trusted-system-certificates_using-shared-system-certificates"></a>linux信任证书：<a href="https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/8/html/security_hardening/managing-trusted-system-certificates_using-shared-system-certificates">https://access.redhat.com/documentation/zh-cn/red_hat_enterprise_linux/8/html/security_hardening/managing-trusted-system-certificates_using-shared-system-certificates</a></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- 要将信任锚存储到系统范围的信任存储中，请使用 trust anchor 子命令，并指定证书的路径。</span><br><span class="line">- 将 **path.to/certificate.crt** 替换为证书的路径及其文件名：</span><br><span class="line">- \# **trust anchor path.to/certificate.crt**</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mail邮箱服务</title>
      <link href="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/"/>
      <url>/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="服务端口部分："><a href="#服务端口部分：" class="headerlink" title="服务端口部分："></a>服务端口部分：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">25/tcp  open  smtp</span><br><span class="line">80/tcp  open  http</span><br><span class="line">110/tcp open  pop3</span><br><span class="line">143/tcp open  imap</span><br><span class="line">465/tcp open  smtps</span><br><span class="line">587/tcp open  submission</span><br><span class="line">993/tcp open  imaps</span><br><span class="line">995/tcp open  pop3s</span><br></pre></td></tr></table></figure><h1 id="理论部分："><a href="#理论部分：" class="headerlink" title="理论部分："></a>理论部分：</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">邮件服务统一用一个<span class="string">&quot;账号@主机名称&quot;</span>来处理</span><br><span class="line"></span><br><span class="line">所以配置MAIL就要先配置DNS服务器</span><br><span class="line"></span><br><span class="line">需要配置MX标志，MX越小，优先值越大，就优先处理，</span><br><span class="line"></span><br><span class="line">解析出MX指向后，这封信会放到用户的信箱中</span><br><span class="line"></span><br><span class="line">MTA： 邮件传送主机（SMTP协议）</span><br><span class="line"></span><br><span class="line">邮箱传送邮件到邮件主机上面</span><br><span class="line"></span><br><span class="line">接受信件，端口25</span><br><span class="line"></span><br><span class="line">转发信件，</span><br><span class="line"></span><br><span class="line">响应用户收信的要求</span><br><span class="line"></span><br><span class="line">MUA：邮件用户代理人（foxmail,outlook)</span><br><span class="line"></span><br><span class="line">使用MUA发送信到邮箱主机上面，否则就要telnet的登录进入邮箱主机中</span><br><span class="line"></span><br><span class="line">MDA：邮件递送代理人</span><br><span class="line"></span><br><span class="line">MDA是MTA里面的一个小程序，主要是分析邮件的数据从而决定邮件的去向</span><br><span class="line"></span><br><span class="line">过滤垃圾信件</span><br><span class="line"></span><br><span class="line">自动回复</span><br><span class="line"></span><br><span class="line">区别：邮件M通过MUA来传送到MTA，由MTA传送到目标的MTA</span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/1.png" alt="截图"></p><h1 id="实验开始："><a href="#实验开始：" class="headerlink" title="实验开始："></a>实验开始：</h1><h2 id="DNS配置："><a href="#DNS配置：" class="headerlink" title="DNS配置："></a>DNS配置：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mail.whl.com MX 10 192.168.20.101(MX的值越小，就越优先)</span><br><span class="line"></span><br><span class="line">mail.whl.com A 192.168.20.101</span><br><span class="line"></span><br><span class="line">whl.com A192.168.20.101</span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/2.png" alt="截图"></p><h2 id="postfix配置："><a href="#postfix配置：" class="headerlink" title="postfix配置："></a>postfix配置：</h2><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/3.png" alt="截图"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">home_mailbox = Maildir/--收到的信存放在哪里</span><br><span class="line"></span><br><span class="line">inet_interfaces = all---允许网段</span><br><span class="line"></span><br><span class="line">inet_protocols = all---允许ipv4和ipv6使用</span><br><span class="line"></span><br><span class="line">mydestination = <span class="variable">$myhostname</span>, loaclhost.<span class="variable">$mydomain</span>, localhost, <span class="variable">$mydomain</span>(中间有一个空格）</span><br><span class="line"></span><br><span class="line">--使用什么样形式用户名登录  user@whl.com 用户名+@+域名加上<span class="variable">$mydomain</span>是要用上面这种形式使用，否则只能完整域名</span><br><span class="line"></span><br><span class="line">mydomain = whl.com---域名设置</span><br><span class="line"></span><br><span class="line">myhostname = mail.whl.com---mail主机完全域名</span><br><span class="line"></span><br><span class="line">mynetworks = 0.0.0.0---mail主机IP地址</span><br><span class="line"></span><br><span class="line">myorigin = <span class="variable">$mydomain</span>---mail的组织为域名</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="dovecot"><a href="#dovecot" class="headerlink" title="dovecot:"></a>dovecot:</h2><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/4.png" alt="截图"></p><h4 id="配置有10-auth-的"><a href="#配置有10-auth-的" class="headerlink" title="配置有10-auth-*的"></a>配置有10-auth-*的</h4><h2 id="配置防火墙："><a href="#配置防火墙：" class="headerlink" title="配置防火墙："></a>配置防火墙：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-service=&#123;imap,pop3,smtp&#125; --per</span><br><span class="line"></span><br><span class="line">下文开启SSL，防火墙配置</span><br><span class="line"></span><br><span class="line">firewall-cmd --add-service=&#123;smtp-submission,smtps,pop3s,imaps&#125; --permanent</span><br></pre></td></tr></table></figure><h2 id="SSL配置："><a href="#SSL配置：" class="headerlink" title="SSL配置："></a>SSL配置：</h2><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/5.png" alt="截图"></p><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/6.png" alt="截图"></p><h2 id="CA证书方面："><a href="#CA证书方面：" class="headerlink" title="CA证书方面："></a>CA证书方面：</h2><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/7.png" alt="截图"></p><h4 id="直接用自签名证书，或者通过CA证书服务器来颁发证书"><a href="#直接用自签名证书，或者通过CA证书服务器来颁发证书" class="headerlink" title="直接用自签名证书，或者通过CA证书服务器来颁发证书"></a>直接用自签名证书，或者通过CA证书服务器来颁发证书</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /etc/pki/CA   (一般都没有）</span><br><span class="line"><span class="built_in">mkdir</span> -p /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;    （必要）</span><br><span class="line">(<span class="built_in">umask</span> 077; openssl genrsa -out private/cakey.pem 2048)     私钥</span><br><span class="line">openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 3650    自签CA证书（里面的内容要和client一样）</span><br></pre></td></tr></table></figure><h2 id="postfix："><a href="#postfix：" class="headerlink" title="postfix："></a>postfix：</h2><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/8.png" alt="截图"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">smtp_use_tls = <span class="built_in">yes</span> ---是否使用smtpd tls</span><br><span class="line">smtp_tls_mandatory_protocols = !SSLv2, !SSLv3---使用什么协议</span><br><span class="line">smtpd_tls_session_cache_database = btree:<span class="variable">$&#123;data_directory&#125;</span>/smtpd_scache--缓存？</span><br></pre></td></tr></table></figure><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/9.png" alt="截图"></p><h4 id="把这几个注释取消，开启smtpd"><a href="#把这几个注释取消，开启smtpd" class="headerlink" title="把这几个注释取消，开启smtpd"></a>把这几个注释取消，开启smtpd</h4><h2 id="dovecot-1"><a href="#dovecot-1" class="headerlink" title="dovecot:"></a>dovecot:</h2><h4 id="10-ssl-conf"><a href="#10-ssl-conf" class="headerlink" title="10-ssl.conf"></a>10-ssl.conf</h4><p><img src="/2022/04/11/Mail%E9%82%AE%E7%AE%B1%E6%9C%8D%E5%8A%A1/10.png" alt="截图"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows证书服务20年证书</title>
      <link href="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/"/>
      <url>/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default.png" alt="题目"></p><h1 id="CA颁发证书有效期为10年，但是一般申请的时间是不一样的"><a href="#CA颁发证书有效期为10年，但是一般申请的时间是不一样的" class="headerlink" title="CA颁发证书有效期为10年，但是一般申请的时间是不一样的"></a>CA颁发证书有效期为10年，但是一般申请的时间是不一样的</h1><h4 id="首先知道，CA证书有效期是可以设置的，但是颁发的证书在安装证书服务器是没有的"><a href="#首先知道，CA证书有效期是可以设置的，但是颁发的证书在安装证书服务器是没有的" class="headerlink" title="首先知道，CA证书有效期是可以设置的，但是颁发的证书在安装证书服务器是没有的"></a><del>首先知道，CA证书有效期是可以设置的，但是颁发的证书在安装证书服务器是没有的</del></h4><h4 id="颁发是靠证书模板来实现的，所以要修改颁发的时间就要设置好证书模板"><a href="#颁发是靠证书模板来实现的，所以要修改颁发的时间就要设置好证书模板" class="headerlink" title="颁发是靠证书模板来实现的，所以要修改颁发的时间就要设置好证书模板"></a><del>颁发是靠证书模板来实现的，所以要修改颁发的时间就要设置好证书模板</del></h4><h3 id="修改颁发证书有效期："><a href="#修改颁发证书有效期：" class="headerlink" title="修改颁发证书有效期："></a>修改颁发证书有效期：</h3><h4 id="CA证书服务器的注册表"><a href="#CA证书服务器的注册表" class="headerlink" title="CA证书服务器的注册表"></a>CA证书服务器的注册表</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\CertSvc\Configuration&lt;CAName&gt;</span><br></pre></td></tr></table></figure><p><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default2.png" alt="题目"></p><h4 id="ValidityPeriodUnits的数值修改为10-十进制）"><a href="#ValidityPeriodUnits的数值修改为10-十进制）" class="headerlink" title="ValidityPeriodUnits的数值修改为10(十进制）"></a>ValidityPeriodUnits的数值修改为10(十进制）</h4><h4 id="这里要把注册表刷新，重启注册表服务或者重启"><a href="#这里要把注册表刷新，重启注册表服务或者重启" class="headerlink" title="这里要把注册表刷新，重启注册表服务或者重启"></a><strong>这里要把注册表刷新，重启注册表服务或者重启</strong></h4><h4 id="并且要把证书模板修改"><a href="#并且要把证书模板修改" class="headerlink" title="并且要把证书模板修改"></a>并且要把证书模板修改</h4><p><strong>复制一份Web服务器的模板</strong><br><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default3.png" alt="题目"><br><strong>按题目要求的有效期</strong><br><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default4.png" alt="题目"><br><strong>密钥大小一般网站用1024</strong><br><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default5.png" alt="题目"><br><strong>启用证书模板</strong></p><p><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default6.png" alt="题目"></p><p><img src="/2022/04/10/Windows%E8%AF%81%E4%B9%A6%E6%9C%8D%E5%8A%A120%E5%B9%B4%E8%AF%81%E4%B9%A6/default7.png" alt="题目"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过Windows文件共享的方式实现yum本地源挂载</title>
      <link href="/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/"/>
      <url>/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="比赛没有ISO文件，所以要通过Windows挂载来让Centos8安装软件"><a href="#比赛没有ISO文件，所以要通过Windows挂载来让Centos8安装软件" class="headerlink" title="比赛没有ISO文件，所以要通过Windows挂载来让Centos8安装软件"></a>比赛没有ISO文件，所以要通过Windows挂载来让Centos8安装软件</h2><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><h3 id="把ISO文件放在一个文件夹"><a href="#把ISO文件放在一个文件夹" class="headerlink" title="把ISO文件放在一个文件夹"></a>把ISO文件放在一个文件夹</h3><p><img src="/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/default.png" alt="共享文件夹"></p><h3 id="把共享文件夹的权限给Everyone用户"><a href="#把共享文件夹的权限给Everyone用户" class="headerlink" title="把共享文件夹的权限给Everyone用户"></a>把共享文件夹的权限给Everyone用户</h3><p><img src="/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/default1.png" alt="关闭密码保护"></p><h3 id="并把共享密码保护关闭"><a href="#并把共享密码保护关闭" class="headerlink" title="并把共享密码保护关闭"></a>并把共享密码保护关闭</h3><h2 id="Centos8"><a href="#Centos8" class="headerlink" title="Centos8"></a>Centos8</h2><h3 id="一般挂载到-x2F-mnt里面就行，方便配置挂载文件"><a href="#一般挂载到-x2F-mnt里面就行，方便配置挂载文件" class="headerlink" title="一般挂载到&#x2F;mnt里面就行，方便配置挂载文件"></a>一般挂载到&#x2F;mnt里面就行，方便配置挂载文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -t cifs -o username=administrator //Windows主机IP/挂载的名字  挂载目录</span><br></pre></td></tr></table></figure><p><img src="/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/default2.png" alt="挂载"></p><h3 id="把ISO文件挂载到本地目录"><a href="#把ISO文件挂载到本地目录" class="headerlink" title="把ISO文件挂载到本地目录"></a>把ISO文件挂载到本地目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount -o loop /挂载目录/Centos8.iso /media</span><br></pre></td></tr></table></figure><h3 id="配置yum-repos-d目录"><a href="#配置yum-repos-d目录" class="headerlink" title="配置yum.repos.d目录"></a>配置yum.repos.d目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Vim CentosOS-Linux-Media.repo</span><br></pre></td></tr></table></figure><p><img src="/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/default3.png" alt="配置文件"></p><h3 id="测试配置是否成功"><a href="#测试配置是否成功" class="headerlink" title="测试配置是否成功"></a>测试配置是否成功</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p><img src="/2022/04/09/%E9%80%9A%E8%BF%87Windows%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0yum%E6%9C%AC%E5%9C%B0%E6%BA%90%E6%8C%82%E8%BD%BD/default4.png" alt="配置文件"></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C8磁盘管理</title>
      <link href="/2022/04/09/C8%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
      <url>/2022/04/09/C8%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Centos磁盘管理："><a href="#Centos磁盘管理：" class="headerlink" title="Centos磁盘管理："></a>Centos磁盘管理：</h1><p><img src="/2022/04/09/C8%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/default.png" alt="C8磁盘管理"></p><h2 id="fdisk"><a href="#fdisk" class="headerlink" title="fdisk"></a>fdisk</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">fdisk -l 查看磁盘分区</span><br><span class="line">fdisk /dev/sdc 对这块磁盘进行管理</span><br><span class="line">n:新建一个新分区</span><br><span class="line">p:新建主分区</span><br><span class="line">分区号：为空就是第一个主分区</span><br><span class="line">第一个扇区：默认2048</span><br><span class="line">上个扇区：+50G/-50G</span><br><span class="line">p:打印分区信息</span><br><span class="line">查看分区信息</span><br><span class="line">w：保存分区并退出</span><br><span class="line">e:新建一个扩展分区</span><br><span class="line">l:新建一个逻辑分区</span><br><span class="line">F：查看未分区的空间</span><br><span class="line">l:查看分区类型</span><br><span class="line">t:改变分区类型</span><br><span class="line">hex代码:8e  ---修改lvm为逻辑卷</span><br></pre></td></tr></table></figure><h2 id="GPT分区："><a href="#GPT分区：" class="headerlink" title="GPT分区："></a>GPT分区：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">parted /dev/sdb    parted工具帮助信息</span><br><span class="line">mklabel gpt   创建gpt分区表</span><br><span class="line">mkpart primary 0 1T  创建1个分区，分配1T的大小，primary为名字</span><br><span class="line">mkpart second 1T 1.5T 创建第二个分区叫second 分配500G的大小</span><br><span class="line"><span class="built_in">rm</span> 2 删除分区2</span><br><span class="line">gpt查看分区信息</span><br><span class="line">q保存</span><br></pre></td></tr></table></figure><h2 id="格式化和挂载："><a href="#格式化和挂载：" class="headerlink" title="格式化和挂载："></a>格式化和挂载：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cramfs.ext2.ext3.ext4.fat.minix.msdos.vfat.xfs(这些是所支持的格式，举例为xfs系统）</span><br><span class="line"></span><br><span class="line">mkfs.xfs  /dev/sdc1</span><br><span class="line"></span><br><span class="line">mkfs -t xfs /dev/sdc2------两种方法都可以用来格式化xfs系统</span><br><span class="line"></span><br><span class="line">blkid /dev/sdc[1-2]查看分区文件系统类型</span><br></pre></td></tr></table></figure><h2 id="挂载："><a href="#挂载：" class="headerlink" title="挂载："></a>挂载：</h2><p>永久挂载：&#x2F;etc&#x2F;fstab里面</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/sdc1 /opt</span><br></pre></td></tr></table></figure><p><img src="/2022/04/09/C8%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/default2.png" alt="Centos磁盘管理"></p><h2 id="x2F-etc-x2F-fstab文件解读："><a href="#x2F-etc-x2F-fstab文件解读：" class="headerlink" title="&#x2F;etc&#x2F;fstab文件解读："></a>&#x2F;etc&#x2F;fstab文件解读：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">第一列：设备名称或者UUID</span><br><span class="line">第二列：挂载点</span><br><span class="line">第三列：文件系统（xfs，ext4，iso9660等）</span><br><span class="line">第四列：默认defaults</span><br><span class="line">第五列：是否做dump备份，0不备份，1每天备份，2不定期备份</span><br><span class="line">第六列：开机时是否检查扇区，0不检查，1最早检查（一般是根目录），2在1检查完之后检查</span><br></pre></td></tr></table></figure><h2 id="SWAP交换分区："><a href="#SWAP交换分区：" class="headerlink" title="SWAP交换分区："></a>SWAP交换分区：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkswap /dev/sdc5 --将sdc5分区格式化swap分区</span><br><span class="line">blkid /dev/sdc5--查看磁盘信息</span><br><span class="line">free -m   --查看swap空间大小</span><br><span class="line">swapon -s --查看所有swap分区</span><br><span class="line">swapon /dev/sdc5--启用swap分区</span><br><span class="line">free -m --查看swap是否启用</span><br><span class="line"><span class="built_in">cat</span> /proc/meminfo  | grep <span class="string">&quot;SwapTotal&quot;</span>查看内存的使用量</span><br><span class="line">永久挂载swap分区/etc/fstab</span><br></pre></td></tr></table></figure><h2 id="Centos8和Centos7一样"><a href="#Centos8和Centos7一样" class="headerlink" title="Centos8和Centos7一样"></a>Centos8和Centos7一样</h2><h2 id="RAID创建和删除："><a href="#RAID创建和删除：" class="headerlink" title="RAID创建和删除："></a>RAID创建和删除：</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mdadm -Cv /dev/md0 -a <span class="built_in">yes</span> -n 4 -1 10 /dev/sd[bcde]</span><br></pre></td></tr></table></figure><h2 id="创建4个磁盘并配置磁盘矩阵"><a href="#创建4个磁盘并配置磁盘矩阵" class="headerlink" title="创建4个磁盘并配置磁盘矩阵"></a>创建4个磁盘并配置磁盘矩阵</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-Cv 创建RAID并显示过程</span><br><span class="line">-a <span class="built_in">yes</span> 自动创建设备文件</span><br><span class="line">-n 4 用四个磁盘来部署</span><br><span class="line">-l 10 代表RAID10</span><br></pre></td></tr></table></figure><h2 id="正确删除磁盘的姿势"><a href="#正确删除磁盘的姿势" class="headerlink" title="正确删除磁盘的姿势"></a>正确删除磁盘的姿势</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1 umount /md5  先取消挂载</span><br><span class="line">2 mdadm -S /dev/md5 停止raid运行 (*大S stop)</span><br><span class="line">3 mdadm --misc --zero-superblock /dev/sd[bcde] 删除磁盘</span><br><span class="line">4 删除配置文件 (*如果fstab或rc.local配置了自动挂载都要删除)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s 源文件 目标文件  ---软链接</span><br><span class="line"><span class="built_in">ln</span> 源文件   目标文件    ---硬链接</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络问题</title>
      <link href="/2022/04/08/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98/"/>
      <url>/2022/04/08/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="云平台网络问题"><a href="#云平台网络问题" class="headerlink" title="云平台网络问题"></a>云平台网络问题</h1><p><img src="/2022/04/08/%E7%BD%91%E7%BB%9C%E9%97%AE%E9%A2%98/default.png" alt="云平台网络问题"></p><p>route add 10.0.0.0 mask 255.0.0.0 172.20.106.103 -p<br>route add 192.168.0.0 mask 255.255.0.0 172.20.106.103 -p<br>添加路由</p><p>云平台主机有两张网卡，但是只有一张能连接主机，一定要把不能连接的那张禁掉，否则两张都不能用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route print查看路由表</span><br><span class="line">arp -a网卡接口连接清空</span><br></pre></td></tr></table></figure><p>云平台是可以上网的</p>]]></content>
      
      
      <categories>
          
          <category> Others </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Others </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的scp命令</title>
      <link href="/2022/04/04/%E7%AE%80%E5%8D%95%E7%9A%84scp%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/04/04/%E7%AE%80%E5%8D%95%E7%9A%84scp%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="scp命令-Linux和Windows文件互传"><a href="#scp命令-Linux和Windows文件互传" class="headerlink" title="scp命令 Linux和Windows文件互传"></a>scp命令 Linux和Windows文件互传</h2><h3 id="1-windows上传文件夹到linux服务器："><a href="#1-windows上传文件夹到linux服务器：" class="headerlink" title="1.windows上传文件夹到linux服务器："></a>1.windows上传文件夹到linux服务器：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -rp E:\scpdata root@10.1.22.5:/root</span><br></pre></td></tr></table></figure><p>复制windows本地D:&#x2F;data目录到远程服务器10.1.22.5的&#x2F;root目录<br>-r 递归复制子文件夹内容<br>-p 保留原文件修改，访问时间和权限（modes）信息 </p><h3 id="2-windows上传文件到linux服务器："><a href="#2-windows上传文件到linux服务器：" class="headerlink" title="2.windows上传文件到linux服务器："></a>2.windows上传文件到linux服务器：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp E:\scpdata\1.txt root@10.1.22.5:/root</span><br></pre></td></tr></table></figure><h3 id="3-从linux服务器下载文件："><a href="#3-从linux服务器下载文件：" class="headerlink" title="3.从linux服务器下载文件："></a>3.从linux服务器下载文件：</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp root@10.1.22.5:/root/1.txt E:\scpdata\</span><br></pre></td></tr></table></figure><p>注意：需要本地Windows有bash命令工具关于windows下的bash命令行工具：<br>安装git客户端就自带了mingw64，运行git-bash.exe就可以进入bash命令行<br>git windows客户端下载：<a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a></p><h2 id="免密操作："><a href="#免密操作：" class="headerlink" title="免密操作："></a>免密操作：</h2><h3 id="客户端步骤"><a href="#客户端步骤" class="headerlink" title="客户端步骤"></a>客户端步骤</h3><p>1）在本地win10系统打开命令行工具<br>2）执行命令：ssh-keygen -t rsa<br>3）提示输入密码，因为不需要密码，所以不输入直接enter<br>4）生成公钥和私钥文件默认放在C:\Users\Administrator.ssh 目录下，文件名分别为id_rsa.pub和id_rsa</p><h3 id="服务端步骤"><a href="#服务端步骤" class="headerlink" title="服务端步骤"></a>服务端步骤</h3><p>1）拷贝客户端上的公钥文件id_rsa.pub 到linux服务器的~&#x2F;.ssh&#x2F; 目录下，注意.ssh目录可能是隐藏的<br>2）把公钥文件id_rsa.pub的内容写入到authorized_keys文件，如果authorized_keys不存在，则创建。<br>写入命令：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span> id_rsa.pub&gt;&gt;authorized_keys</span><br></pre></td></tr></table></figure><p>注意：如果不是root用户登录，需要免签到对应用户目录下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cat</span>  /root/id_rsa.pub&gt;&gt;/home/用户名/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>注意：&#x2F;home&#x2F;用户名  目录必须是用户的默认目录，否则免签无效<br>如果新创建的用户没有.ssh目录和authorized_keys文件，需要手动创建，并设置权限</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chomd 700  /home/用户名/.ssh</span><br><span class="line">chomd 600  /home/用户名/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>把mnt目录下的flowsystem目录下的所有子文件的拥有者改为flow用户</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R flow /mnt/flowsystem  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
